
; This file is generated by the pretty printer
; The needs- and modifies-registers are discarded
; This is compiled by the compiled compiler
(()()
(
  (comment (lambda args (define (iter first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
  (assign val (op make-compiled-procedure) (label entry200308180552051) (reg env))
  (goto (label after-lambda200308180552050))
  (comment (lambda args (define (iter first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
entry200308180552051
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const args) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest)))))) (if (null? args) true (iter (car args) (cdr args)))))
  (assign proc (op make-compiled-procedure) (label entry200308180552061) (reg env))
  (goto (label after-lambda200308180552060))
  (comment (lambda (iter) (set! iter (lambda (first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest)))))) (if (null? args) true (iter (car args) (cdr args)))))
entry200308180552061
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest))))))
  (assign val (op make-compiled-procedure) (label entry200308180552091) (reg env))
  (goto (label after-lambda200308180552090))
  (comment (lambda (first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest))))))
entry200308180552091
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first rest)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180552144))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180552143))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180552141))
compound-branch200308180552142
  (assign continue (label after-call200308180552140))
  (goto (label compound-apply-compiled))
compiled-branch200308180552143
  (assign continue (label after-call200308180552140))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180552141
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180552144
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180552140
  (restore env)
  (restore continue)
  (comment (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180552093))
true-branch200308180552094
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200308180552093
  (save continue)
  (save env)
  (comment integer-equal)
  (assign proc (op lookup-variable-value) (const integer-equal) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180552114))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180552113))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180552111))
compound-branch200308180552112
  (assign continue (label after-call200308180552110))
  (goto (label compound-apply-compiled))
compiled-branch200308180552113
  (assign continue (label after-call200308180552110))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180552111
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180552114
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180552110
  (assign argl (op list) (reg val))
  (restore env)
  (comment first)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180552124))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180552123))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180552121))
compound-branch200308180552122
  (assign continue (label after-call200308180552120))
  (goto (label compound-apply-compiled))
compiled-branch200308180552123
  (assign continue (label after-call200308180552120))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180552121
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180552124
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180552120
  (restore env)
  (restore continue)
  (comment (if (integer-equal first (car rest)) (iter (car rest) (cdr rest))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180552096))
true-branch200308180552097
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805520912))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805520911))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180552099))
compound-branch2003081805520910
  (assign continue (label after-call200308180552098))
  (goto (label compound-apply-compiled))
compiled-branch2003081805520911
  (assign continue (label after-call200308180552098))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180552099
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805520912
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180552098
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180552104))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180552103))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180552101))
compound-branch200308180552102
  (assign continue (label after-call200308180552100))
  (goto (label compound-apply-compiled))
compiled-branch200308180552103
  (assign continue (label after-call200308180552100))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180552101
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180552104
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180552100
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180552109))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180552108))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180552106))
compound-branch200308180552107
  (goto (label compound-apply-compiled))
compiled-branch200308180552108
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180552106
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180552109
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180552105
false-branch200308180552096
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if200308180552095
after-if200308180552092
after-lambda200308180552090
  (comment (set! iter (lambda (first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest)))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180552084))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180552083))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180552081))
compound-branch200308180552082
  (assign continue (label after-call200308180552080))
  (goto (label compound-apply-compiled))
compiled-branch200308180552083
  (assign continue (label after-call200308180552080))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180552081
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180552084
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180552080
  (restore env)
  (restore continue)
  (comment (if (null? args) true (iter (car args) (cdr args))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180552063))
true-branch200308180552064
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200308180552063
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180552069))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180552068))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180552066))
compound-branch200308180552067
  (assign continue (label after-call200308180552065))
  (goto (label compound-apply-compiled))
compiled-branch200308180552068
  (assign continue (label after-call200308180552065))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180552066
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180552069
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180552065
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805520614))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805520613))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805520611))
compound-branch2003081805520612
  (assign continue (label after-call2003081805520610))
  (goto (label compound-apply-compiled))
compiled-branch2003081805520613
  (assign continue (label after-call2003081805520610))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805520611
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805520614
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003081805520610
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180552074))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180552073))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180552071))
compound-branch200308180552072
  (goto (label compound-apply-compiled))
compiled-branch200308180552073
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180552071
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180552074
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180552070
after-if200308180552062
after-lambda200308180552060
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180552174))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180552173))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180552171))
compound-branch200308180552172
  (goto (label compound-apply-compiled))
compiled-branch200308180552173
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180552171
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180552174
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180552170
after-lambda200308180552050
  (comment (define (= . args) (define (iter first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
  (perform (op define-variable!) (const =) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda args (define (iter first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
  (assign val (op make-compiled-procedure) (label entry200308180551431) (reg env))
  (goto (label after-lambda200308180551430))
  (comment (lambda args (define (iter first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
entry200308180551431
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const args) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest)))))) (if (null? args) true (iter (car args) (cdr args)))))
  (assign proc (op make-compiled-procedure) (label entry200308180551433) (reg env))
  (goto (label after-lambda200308180551432))
  (comment (lambda (iter) (set! iter (lambda (first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest)))))) (if (null? args) true (iter (car args) (cdr args)))))
entry200308180551433
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest))))))
  (assign val (op make-compiled-procedure) (label entry200308180551461) (reg env))
  (goto (label after-lambda200308180551460))
  (comment (lambda (first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest))))))
entry200308180551461
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first rest)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551514))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551513))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551511))
compound-branch200308180551512
  (assign continue (label after-call200308180551510))
  (goto (label compound-apply-compiled))
compiled-branch200308180551513
  (assign continue (label after-call200308180551510))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551511
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180551514
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180551510
  (restore env)
  (restore continue)
  (comment (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180551463))
true-branch200308180551464
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200308180551463
  (save continue)
  (save env)
  (comment integer-less-than)
  (assign proc (op lookup-variable-value) (const integer-less-than) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551494))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551493))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551491))
compound-branch200308180551492
  (assign continue (label after-call200308180551490))
  (goto (label compound-apply-compiled))
compiled-branch200308180551493
  (assign continue (label after-call200308180551490))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551491
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180551494
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180551490
  (assign argl (op list) (reg val))
  (restore env)
  (comment first)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551499))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551498))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551496))
compound-branch200308180551497
  (assign continue (label after-call200308180551495))
  (goto (label compound-apply-compiled))
compiled-branch200308180551498
  (assign continue (label after-call200308180551495))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551496
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180551499
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180551495
  (restore env)
  (restore continue)
  (comment (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180551466))
true-branch200308180551467
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805514612))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805514611))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551469))
compound-branch2003081805514610
  (assign continue (label after-call200308180551468))
  (goto (label compound-apply-compiled))
compiled-branch2003081805514611
  (assign continue (label after-call200308180551468))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551469
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805514612
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180551468
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551474))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551473))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551471))
compound-branch200308180551472
  (assign continue (label after-call200308180551470))
  (goto (label compound-apply-compiled))
compiled-branch200308180551473
  (assign continue (label after-call200308180551470))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551471
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180551474
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180551470
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551484))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551483))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551481))
compound-branch200308180551482
  (goto (label compound-apply-compiled))
compiled-branch200308180551483
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551481
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180551484
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180551480
false-branch200308180551466
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if200308180551465
after-if200308180551462
after-lambda200308180551460
  (comment (set! iter (lambda (first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest)))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551454))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551453))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551451))
compound-branch200308180551452
  (assign continue (label after-call200308180551450))
  (goto (label compound-apply-compiled))
compiled-branch200308180551453
  (assign continue (label after-call200308180551450))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551451
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180551454
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180551450
  (restore env)
  (restore continue)
  (comment (if (null? args) true (iter (car args) (cdr args))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180551435))
true-branch200308180551436
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200308180551435
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805514311))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805514310))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551438))
compound-branch200308180551439
  (assign continue (label after-call200308180551437))
  (goto (label compound-apply-compiled))
compiled-branch2003081805514310
  (assign continue (label after-call200308180551437))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551438
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805514311
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180551437
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805514316))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805514315))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805514313))
compound-branch2003081805514314
  (assign continue (label after-call2003081805514312))
  (goto (label compound-apply-compiled))
compiled-branch2003081805514315
  (assign continue (label after-call2003081805514312))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805514313
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805514316
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003081805514312
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551444))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551443))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551441))
compound-branch200308180551442
  (goto (label compound-apply-compiled))
compiled-branch200308180551443
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551441
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180551444
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180551440
after-if200308180551434
after-lambda200308180551432
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551544))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551543))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551541))
compound-branch200308180551542
  (goto (label compound-apply-compiled))
compiled-branch200308180551543
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551541
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180551544
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180551540
after-lambda200308180551430
  (comment (define (< . args) (define (iter first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
  (perform (op define-variable!) (const <) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda args (define (iter first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
  (assign val (op make-compiled-procedure) (label entry200308180551181) (reg env))
  (goto (label after-lambda200308180551180))
  (comment (lambda args (define (iter first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
entry200308180551181
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const args) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest)))))) (if (null? args) true (iter (car args) (cdr args)))))
  (assign proc (op make-compiled-procedure) (label entry200308180551191) (reg env))
  (goto (label after-lambda200308180551190))
  (comment (lambda (iter) (set! iter (lambda (first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest)))))) (if (null? args) true (iter (car args) (cdr args)))))
entry200308180551191
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest))))))
  (assign val (op make-compiled-procedure) (label entry200308180551221) (reg env))
  (goto (label after-lambda200308180551220))
  (comment (lambda (first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest))))))
entry200308180551221
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first rest)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551274))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551273))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551271))
compound-branch200308180551272
  (assign continue (label after-call200308180551270))
  (goto (label compound-apply-compiled))
compiled-branch200308180551273
  (assign continue (label after-call200308180551270))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551271
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180551274
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180551270
  (restore env)
  (restore continue)
  (comment (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180551223))
true-branch200308180551224
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200308180551223
  (save continue)
  (save env)
  (comment integer-greater-than)
  (assign proc (op lookup-variable-value) (const integer-greater-than) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551249))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551248))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551246))
compound-branch200308180551247
  (assign continue (label after-call200308180551245))
  (goto (label compound-apply-compiled))
compiled-branch200308180551248
  (assign continue (label after-call200308180551245))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551246
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180551249
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180551245
  (assign argl (op list) (reg val))
  (restore env)
  (comment first)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551254))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551253))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551251))
compound-branch200308180551252
  (assign continue (label after-call200308180551250))
  (goto (label compound-apply-compiled))
compiled-branch200308180551253
  (assign continue (label after-call200308180551250))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551251
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180551254
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180551250
  (restore env)
  (restore continue)
  (comment (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180551226))
true-branch200308180551227
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805512212))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805512211))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551229))
compound-branch2003081805512210
  (assign continue (label after-call200308180551228))
  (goto (label compound-apply-compiled))
compiled-branch2003081805512211
  (assign continue (label after-call200308180551228))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551229
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805512212
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180551228
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551234))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551233))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551231))
compound-branch200308180551232
  (assign continue (label after-call200308180551230))
  (goto (label compound-apply-compiled))
compiled-branch200308180551233
  (assign continue (label after-call200308180551230))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551231
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180551234
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180551230
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551244))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551243))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551241))
compound-branch200308180551242
  (goto (label compound-apply-compiled))
compiled-branch200308180551243
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551241
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180551244
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180551240
false-branch200308180551226
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if200308180551225
after-if200308180551222
after-lambda200308180551220
  (comment (set! iter (lambda (first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest)))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551214))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551213))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551211))
compound-branch200308180551212
  (assign continue (label after-call200308180551210))
  (goto (label compound-apply-compiled))
compiled-branch200308180551213
  (assign continue (label after-call200308180551210))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551211
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180551214
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180551210
  (restore env)
  (restore continue)
  (comment (if (null? args) true (iter (car args) (cdr args))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180551193))
true-branch200308180551194
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200308180551193
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551199))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551198))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551196))
compound-branch200308180551197
  (assign continue (label after-call200308180551195))
  (goto (label compound-apply-compiled))
compiled-branch200308180551198
  (assign continue (label after-call200308180551195))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551196
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180551199
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180551195
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805511914))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805511913))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805511911))
compound-branch2003081805511912
  (assign continue (label after-call2003081805511910))
  (goto (label compound-apply-compiled))
compiled-branch2003081805511913
  (assign continue (label after-call2003081805511910))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805511911
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805511914
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003081805511910
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551204))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551203))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551201))
compound-branch200308180551202
  (goto (label compound-apply-compiled))
compiled-branch200308180551203
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551201
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180551204
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180551200
after-if200308180551192
after-lambda200308180551190
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551304))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551303))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551301))
compound-branch200308180551302
  (goto (label compound-apply-compiled))
compiled-branch200308180551303
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551301
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180551304
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180551300
after-lambda200308180551180
  (comment (define (> . args) (define (iter first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
  (perform (op define-variable!) (const >) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (x) (= x 0)))
  (assign val (op make-compiled-procedure) (label entry200308180551091) (reg env))
  (goto (label after-lambda200308180551090))
  (comment (lambda (x) (= x 0)))
entry200308180551091
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (x)) (reg argl) (reg env))
  (comment =)
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (comment x)
  (assign val (op lookup-variable-value) (const x) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551096))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551095))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551093))
compound-branch200308180551094
  (goto (label compound-apply-compiled))
compiled-branch200308180551095
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551093
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180551096
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180551092
after-lambda200308180551090
  (comment (define (zero? x) (= x 0)))
  (perform (op define-variable!) (const zero?) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (x) (> x 0)))
  (assign val (op make-compiled-procedure) (label entry200308180551011) (reg env))
  (goto (label after-lambda200308180551010))
  (comment (lambda (x) (> x 0)))
entry200308180551011
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (x)) (reg argl) (reg env))
  (comment >)
  (assign proc (op lookup-variable-value) (const >) (reg env))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (comment x)
  (assign val (op lookup-variable-value) (const x) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180551016))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180551015))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180551013))
compound-branch200308180551014
  (goto (label compound-apply-compiled))
compiled-branch200308180551015
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180551013
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180551016
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180551012
after-lambda200308180551010
  (comment (define (positive? x) (> x 0)))
  (perform (op define-variable!) (const positive?) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (x) (< x 0)))
  (assign val (op make-compiled-procedure) (label entry200308180550491) (reg env))
  (goto (label after-lambda200308180550490))
  (comment (lambda (x) (< x 0)))
entry200308180550491
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (x)) (reg argl) (reg env))
  (comment <)
  (assign proc (op lookup-variable-value) (const <) (reg env))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (comment x)
  (assign val (op lookup-variable-value) (const x) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180550524))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180550523))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180550521))
compound-branch200308180550522
  (goto (label compound-apply-compiled))
compiled-branch200308180550523
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180550521
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180550524
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180550520
after-lambda200308180550490
  (comment (define (negative? x) (< x 0)))
  (perform (op define-variable!) (const negative?) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (n) (= (remainder n 2) 1)))
  (assign val (op make-compiled-procedure) (label entry200308180550391) (reg env))
  (goto (label after-lambda200308180550390))
  (comment (lambda (n) (= (remainder n 2) 1)))
entry200308180550391
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (n)) (reg argl) (reg env))
  (comment =)
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (save continue)
  (save proc)
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (save argl)
  (comment remainder)
  (assign proc (op lookup-variable-value) (const remainder) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180550396))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180550395))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180550393))
compound-branch200308180550394
  (assign continue (label after-call200308180550392))
  (goto (label compound-apply-compiled))
compiled-branch200308180550395
  (assign continue (label after-call200308180550392))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180550393
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180550396
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180550392
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805503911))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805503910))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180550398))
compound-branch200308180550399
  (goto (label compound-apply-compiled))
compiled-branch2003081805503910
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180550398
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2003081805503911
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180550397
after-lambda200308180550390
  (comment (define (odd? n) (= (remainder n 2) 1)))
  (perform (op define-variable!) (const odd?) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (n) (= (remainder n 2) 0)))
  (assign val (op make-compiled-procedure) (label entry200308180550271) (reg env))
  (goto (label after-lambda200308180550270))
  (comment (lambda (n) (= (remainder n 2) 0)))
entry200308180550271
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (n)) (reg argl) (reg env))
  (comment =)
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (save continue)
  (save proc)
  (comment 0)
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (save argl)
  (comment remainder)
  (assign proc (op lookup-variable-value) (const remainder) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180550276))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180550275))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180550273))
compound-branch200308180550274
  (assign continue (label after-call200308180550272))
  (goto (label compound-apply-compiled))
compiled-branch200308180550275
  (assign continue (label after-call200308180550272))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180550273
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180550276
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180550272
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805502711))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805502710))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180550278))
compound-branch200308180550279
  (goto (label compound-apply-compiled))
compiled-branch2003081805502710
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180550278
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2003081805502711
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180550277
after-lambda200308180550270
  (comment (define (even? n) (= (remainder n 2) 0)))
  (perform (op define-variable!) (const even?) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (first . rest) (define (iter smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq))))) (iter first rest)))
  (assign val (op make-compiled-procedure) (label entry200308180550031) (reg env))
  (goto (label after-lambda200308180550030))
  (comment (lambda (first . rest) (define (iter smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq))))) (iter first rest)))
entry200308180550031
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first . rest)) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq)))))) (iter first rest)))
  (assign proc (op make-compiled-procedure) (label entry200308180550033) (reg env))
  (goto (label after-lambda200308180550032))
  (comment (lambda (iter) (set! iter (lambda (smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq)))))) (iter first rest)))
entry200308180550033
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq))))))
  (assign val (op make-compiled-procedure) (label entry200308180550041) (reg env))
  (goto (label after-lambda200308180550040))
  (comment (lambda (smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq))))))
entry200308180550041
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (smallest seq)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180550104))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180550103))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180550101))
compound-branch200308180550102
  (assign continue (label after-call200308180550100))
  (goto (label compound-apply-compiled))
compiled-branch200308180550103
  (assign continue (label after-call200308180550100))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180550101
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180550104
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180550100
  (restore env)
  (restore continue)
  (comment (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180550043))
true-branch200308180550044
  (comment smallest)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (goto (reg continue))
false-branch200308180550043
  (save continue)
  (save env)
  (comment <)
  (assign proc (op lookup-variable-value) (const <) (reg env))
  (save proc)
  (comment smallest)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180550084))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180550083))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180550081))
compound-branch200308180550082
  (assign continue (label after-call200308180550080))
  (goto (label compound-apply-compiled))
compiled-branch200308180550083
  (assign continue (label after-call200308180550080))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180550081
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180550084
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180550080
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180550089))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180550088))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180550086))
compound-branch200308180550087
  (assign continue (label after-call200308180550085))
  (goto (label compound-apply-compiled))
compiled-branch200308180550088
  (assign continue (label after-call200308180550085))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180550086
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180550089
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180550085
  (restore env)
  (restore continue)
  (comment (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180550046))
true-branch200308180550047
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180550064))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180550063))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180550061))
compound-branch200308180550062
  (assign continue (label after-call200308180550060))
  (goto (label compound-apply-compiled))
compiled-branch200308180550063
  (assign continue (label after-call200308180550060))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180550061
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180550064
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180550060
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180550069))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180550068))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180550066))
compound-branch200308180550067
  (assign continue (label after-call200308180550065))
  (goto (label compound-apply-compiled))
compiled-branch200308180550068
  (assign continue (label after-call200308180550065))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180550066
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180550069
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180550065
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180550074))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180550073))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180550071))
compound-branch200308180550072
  (goto (label compound-apply-compiled))
compiled-branch200308180550073
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180550071
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180550074
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180550070
false-branch200308180550046
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805500412))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805500411))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180550049))
compound-branch2003081805500410
  (assign continue (label after-call200308180550048))
  (goto (label compound-apply-compiled))
compiled-branch2003081805500411
  (assign continue (label after-call200308180550048))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180550049
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805500412
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180550048
  (assign argl (op list) (reg val))
  (restore env)
  (comment smallest)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805500417))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805500416))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805500414))
compound-branch2003081805500415
  (goto (label compound-apply-compiled))
compiled-branch2003081805500416
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805500414
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2003081805500417
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2003081805500413
after-if200308180550045
after-if200308180550042
after-lambda200308180550040
  (comment (set! iter (lambda (smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq)))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (comment first)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180550038))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180550037))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180550035))
compound-branch200308180550036
  (goto (label compound-apply-compiled))
compiled-branch200308180550037
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180550035
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180550038
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180550034
after-lambda200308180550032
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180550144))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180550143))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180550141))
compound-branch200308180550142
  (goto (label compound-apply-compiled))
compiled-branch200308180550143
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180550141
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180550144
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180550140
after-lambda200308180550030
  (comment (define (min first . rest) (define (iter smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq))))) (iter first rest)))
  (perform (op define-variable!) (const min) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (first . rest) (define (iter smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest))))) (iter first rest)))
  (assign val (op make-compiled-procedure) (label entry200308180549441) (reg env))
  (goto (label after-lambda200308180549440))
  (comment (lambda (first . rest) (define (iter smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest))))) (iter first rest)))
entry200308180549441
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first . rest)) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest)))))) (iter first rest)))
  (assign proc (op make-compiled-procedure) (label entry200308180549443) (reg env))
  (goto (label after-lambda200308180549442))
  (comment (lambda (iter) (set! iter (lambda (smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest)))))) (iter first rest)))
entry200308180549443
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest))))))
  (assign val (op make-compiled-procedure) (label entry200308180549451) (reg env))
  (goto (label after-lambda200308180549450))
  (comment (lambda (smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest))))))
entry200308180549451
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (smallest rest)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180549514))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180549513))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549511))
compound-branch200308180549512
  (assign continue (label after-call200308180549510))
  (goto (label compound-apply-compiled))
compiled-branch200308180549513
  (assign continue (label after-call200308180549510))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549511
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180549514
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180549510
  (restore env)
  (restore continue)
  (comment (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180549453))
true-branch200308180549454
  (comment smallest)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (goto (reg continue))
false-branch200308180549453
  (save continue)
  (save env)
  (comment >)
  (assign proc (op lookup-variable-value) (const >) (reg env))
  (save proc)
  (comment smallest)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180549489))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180549488))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549486))
compound-branch200308180549487
  (assign continue (label after-call200308180549485))
  (goto (label compound-apply-compiled))
compiled-branch200308180549488
  (assign continue (label after-call200308180549485))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549486
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180549489
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180549485
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180549494))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180549493))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549491))
compound-branch200308180549492
  (assign continue (label after-call200308180549490))
  (goto (label compound-apply-compiled))
compiled-branch200308180549493
  (assign continue (label after-call200308180549490))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549491
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180549494
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180549490
  (restore env)
  (restore continue)
  (comment (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180549456))
true-branch200308180549457
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180549474))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180549473))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549471))
compound-branch200308180549472
  (assign continue (label after-call200308180549470))
  (goto (label compound-apply-compiled))
compiled-branch200308180549473
  (assign continue (label after-call200308180549470))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549471
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180549474
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180549470
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180549479))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180549478))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549476))
compound-branch200308180549477
  (assign continue (label after-call200308180549475))
  (goto (label compound-apply-compiled))
compiled-branch200308180549478
  (assign continue (label after-call200308180549475))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549476
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180549479
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180549475
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180549484))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180549483))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549481))
compound-branch200308180549482
  (goto (label compound-apply-compiled))
compiled-branch200308180549483
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549481
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180549484
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180549480
false-branch200308180549456
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805494512))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805494511))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549459))
compound-branch2003081805494510
  (assign continue (label after-call200308180549458))
  (goto (label compound-apply-compiled))
compiled-branch2003081805494511
  (assign continue (label after-call200308180549458))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549459
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805494512
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180549458
  (assign argl (op list) (reg val))
  (restore env)
  (comment smallest)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805494517))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805494516))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805494514))
compound-branch2003081805494515
  (goto (label compound-apply-compiled))
compiled-branch2003081805494516
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805494514
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2003081805494517
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2003081805494513
after-if200308180549455
after-if200308180549452
after-lambda200308180549450
  (comment (set! iter (lambda (smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest)))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (comment first)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180549448))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180549447))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549445))
compound-branch200308180549446
  (goto (label compound-apply-compiled))
compiled-branch200308180549447
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549445
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180549448
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180549444
after-lambda200308180549442
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180549544))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180549543))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549541))
compound-branch200308180549542
  (goto (label compound-apply-compiled))
compiled-branch200308180549543
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549541
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180549544
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180549540
after-lambda200308180549440
  (comment (define (max first . rest) (define (iter smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest))))) (iter first rest)))
  (perform (op define-variable!) (const max) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda args (accumulate integer-add 0 args)))
  (assign val (op make-compiled-procedure) (label entry200308180549361) (reg env))
  (goto (label after-lambda200308180549360))
  (comment (lambda args (accumulate integer-add 0 args)))
entry200308180549361
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const args) (reg argl) (reg env))
  (comment accumulate)
  (assign proc (op lookup-variable-value) (const accumulate) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op cons) (reg val) (reg argl))
  (comment integer-add)
  (assign val (op lookup-variable-value) (const integer-add) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180549366))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180549365))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549363))
compound-branch200308180549364
  (goto (label compound-apply-compiled))
compiled-branch200308180549365
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549363
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180549366
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180549362
after-lambda200308180549360
  (comment (define (+ . args) (accumulate integer-add 0 args)))
  (perform (op define-variable!) (const +) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda args (accumulate integer-mul 1 args)))
  (assign val (op make-compiled-procedure) (label entry200308180549281) (reg env))
  (goto (label after-lambda200308180549280))
  (comment (lambda args (accumulate integer-mul 1 args)))
entry200308180549281
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const args) (reg argl) (reg env))
  (comment accumulate)
  (assign proc (op lookup-variable-value) (const accumulate) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op cons) (reg val) (reg argl))
  (comment integer-mul)
  (assign val (op lookup-variable-value) (const integer-mul) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180549294))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180549293))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549291))
compound-branch200308180549292
  (goto (label compound-apply-compiled))
compiled-branch200308180549293
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549291
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180549294
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180549290
after-lambda200308180549280
  (comment (define (* . args) (accumulate integer-mul 1 args)))
  (perform (op define-variable!) (const *) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (first . rest) (if (null? rest) (integer-minus 0 first) (fold-left integer-minus first rest))))
  (assign val (op make-compiled-procedure) (label entry200308180549191) (reg env))
  (goto (label after-lambda200308180549190))
  (comment (lambda (first . rest) (if (null? rest) (integer-minus 0 first) (fold-left integer-minus first rest))))
entry200308180549191
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first . rest)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180549214))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180549213))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549211))
compound-branch200308180549212
  (assign continue (label after-call200308180549210))
  (goto (label compound-apply-compiled))
compiled-branch200308180549213
  (assign continue (label after-call200308180549210))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549211
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180549214
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180549210
  (restore env)
  (restore continue)
  (comment (if (null? rest) (integer-minus 0 first) (fold-left integer-minus first rest)))
  (test (op false?) (reg val))
  (branch (label false-branch200308180549193))
true-branch200308180549194
  (comment integer-minus)
  (assign proc (op lookup-variable-value) (const integer-minus) (reg env))
  (comment first)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op list) (reg val))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180549204))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180549203))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549201))
compound-branch200308180549202
  (goto (label compound-apply-compiled))
compiled-branch200308180549203
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549201
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180549204
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180549200
false-branch200308180549193
  (comment fold-left)
  (assign proc (op lookup-variable-value) (const fold-left) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (comment first)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment integer-minus)
  (assign val (op lookup-variable-value) (const integer-minus) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180549199))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180549198))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549196))
compound-branch200308180549197
  (goto (label compound-apply-compiled))
compiled-branch200308180549198
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549196
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180549199
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180549195
after-if200308180549192
after-lambda200308180549190
  (comment (define (- first . rest) (if (null? rest) (integer-minus 0 first) (fold-left integer-minus first rest))))
  (perform (op define-variable!) (const -) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (car p))))
  (assign val (op make-compiled-procedure) (label entry200308180549101) (reg env))
  (goto (label after-lambda200308180549100))
  (comment (lambda (p) (car (car p))))
entry200308180549101
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180549106))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180549105))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549103))
compound-branch200308180549104
  (assign continue (label after-call200308180549102))
  (goto (label compound-apply-compiled))
compiled-branch200308180549105
  (assign continue (label after-call200308180549102))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549103
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180549106
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180549102
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180549114))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180549113))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180549111))
compound-branch200308180549112
  (goto (label compound-apply-compiled))
compiled-branch200308180549113
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180549111
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180549114
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180549110
after-lambda200308180549100
  (comment (define (caar p) (car (car p))))
  (perform (op define-variable!) (const caar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (cdr p))))
  (assign val (op make-compiled-procedure) (label entry200308180548581) (reg env))
  (goto (label after-lambda200308180548580))
  (comment (lambda (p) (car (cdr p))))
entry200308180548581
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180548586))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180548585))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548583))
compound-branch200308180548584
  (assign continue (label after-call200308180548582))
  (goto (label compound-apply-compiled))
compiled-branch200308180548585
  (assign continue (label after-call200308180548582))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548583
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180548586
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180548582
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180548594))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180548593))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548591))
compound-branch200308180548592
  (goto (label compound-apply-compiled))
compiled-branch200308180548593
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548591
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180548594
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180548590
after-lambda200308180548580
  (comment (define (cadr p) (car (cdr p))))
  (perform (op define-variable!) (const cadr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (car p))))
  (assign val (op make-compiled-procedure) (label entry200308180548491) (reg env))
  (goto (label after-lambda200308180548490))
  (comment (lambda (p) (cdr (car p))))
entry200308180548491
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180548496))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180548495))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548493))
compound-branch200308180548494
  (assign continue (label after-call200308180548492))
  (goto (label compound-apply-compiled))
compiled-branch200308180548495
  (assign continue (label after-call200308180548492))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548493
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180548496
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180548492
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180548504))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180548503))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548501))
compound-branch200308180548502
  (goto (label compound-apply-compiled))
compiled-branch200308180548503
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548501
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180548504
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180548500
after-lambda200308180548490
  (comment (define (cdar p) (cdr (car p))))
  (perform (op define-variable!) (const cdar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (cdr p))))
  (assign val (op make-compiled-procedure) (label entry200308180548391) (reg env))
  (goto (label after-lambda200308180548390))
  (comment (lambda (p) (cdr (cdr p))))
entry200308180548391
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180548396))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180548395))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548393))
compound-branch200308180548394
  (assign continue (label after-call200308180548392))
  (goto (label compound-apply-compiled))
compiled-branch200308180548395
  (assign continue (label after-call200308180548392))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548393
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180548396
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180548392
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180548404))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180548403))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548401))
compound-branch200308180548402
  (goto (label compound-apply-compiled))
compiled-branch200308180548403
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548401
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180548404
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180548400
after-lambda200308180548390
  (comment (define (cddr p) (cdr (cdr p))))
  (perform (op define-variable!) (const cddr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (car (car p)))))
  (assign val (op make-compiled-procedure) (label entry200308180548301) (reg env))
  (goto (label after-lambda200308180548300))
  (comment (lambda (p) (car (car (car p)))))
entry200308180548301
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180548306))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180548305))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548303))
compound-branch200308180548304
  (assign continue (label after-call200308180548302))
  (goto (label compound-apply-compiled))
compiled-branch200308180548305
  (assign continue (label after-call200308180548302))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548303
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180548306
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180548302
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805483011))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805483010))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548308))
compound-branch200308180548309
  (assign continue (label after-call200308180548307))
  (goto (label compound-apply-compiled))
compiled-branch2003081805483010
  (assign continue (label after-call200308180548307))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548308
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805483011
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180548307
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805483016))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805483015))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805483013))
compound-branch2003081805483014
  (goto (label compound-apply-compiled))
compiled-branch2003081805483015
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805483013
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2003081805483016
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2003081805483012
after-lambda200308180548300
  (comment (define (caaar p) (car (car (car p)))))
  (perform (op define-variable!) (const caaar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (car (cdr p)))))
  (assign val (op make-compiled-procedure) (label entry200308180548191) (reg env))
  (goto (label after-lambda200308180548190))
  (comment (lambda (p) (car (car (cdr p)))))
entry200308180548191
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180548196))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180548195))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548193))
compound-branch200308180548194
  (assign continue (label after-call200308180548192))
  (goto (label compound-apply-compiled))
compiled-branch200308180548195
  (assign continue (label after-call200308180548192))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548193
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180548196
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180548192
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180548224))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180548223))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548221))
compound-branch200308180548222
  (assign continue (label after-call200308180548220))
  (goto (label compound-apply-compiled))
compiled-branch200308180548223
  (assign continue (label after-call200308180548220))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548221
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180548224
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180548220
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180548229))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180548228))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548226))
compound-branch200308180548227
  (goto (label compound-apply-compiled))
compiled-branch200308180548228
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548226
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180548229
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180548225
after-lambda200308180548190
  (comment (define (caadr p) (car (car (cdr p)))))
  (perform (op define-variable!) (const caadr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (cdr (car p)))))
  (assign val (op make-compiled-procedure) (label entry200308180548091) (reg env))
  (goto (label after-lambda200308180548090))
  (comment (lambda (p) (car (cdr (car p)))))
entry200308180548091
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180548096))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180548095))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548093))
compound-branch200308180548094
  (assign continue (label after-call200308180548092))
  (goto (label compound-apply-compiled))
compiled-branch200308180548095
  (assign continue (label after-call200308180548092))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548093
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180548096
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180548092
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180548104))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180548103))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548101))
compound-branch200308180548102
  (assign continue (label after-call200308180548100))
  (goto (label compound-apply-compiled))
compiled-branch200308180548103
  (assign continue (label after-call200308180548100))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548101
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180548104
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180548100
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180548114))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180548113))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548111))
compound-branch200308180548112
  (goto (label compound-apply-compiled))
compiled-branch200308180548113
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548111
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180548114
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180548110
after-lambda200308180548090
  (comment (define (cadar p) (car (cdr (car p)))))
  (perform (op define-variable!) (const cadar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (cdr (cdr p)))))
  (assign val (op make-compiled-procedure) (label entry200308180548011) (reg env))
  (goto (label after-lambda200308180548010))
  (comment (lambda (p) (car (cdr (cdr p)))))
entry200308180548011
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180548016))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180548015))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548013))
compound-branch200308180548014
  (assign continue (label after-call200308180548012))
  (goto (label compound-apply-compiled))
compiled-branch200308180548015
  (assign continue (label after-call200308180548012))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548013
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180548016
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180548012
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805480111))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805480110))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548018))
compound-branch200308180548019
  (assign continue (label after-call200308180548017))
  (goto (label compound-apply-compiled))
compiled-branch2003081805480110
  (assign continue (label after-call200308180548017))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548018
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805480111
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180548017
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180548024))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180548023))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180548021))
compound-branch200308180548022
  (goto (label compound-apply-compiled))
compiled-branch200308180548023
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180548021
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180548024
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180548020
after-lambda200308180548010
  (comment (define (caddr p) (car (cdr (cdr p)))))
  (perform (op define-variable!) (const caddr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (car (car p)))))
  (assign val (op make-compiled-procedure) (label entry200308180547511) (reg env))
  (goto (label after-lambda200308180547510))
  (comment (lambda (p) (cdr (car (car p)))))
entry200308180547511
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547516))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547515))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547513))
compound-branch200308180547514
  (assign continue (label after-call200308180547512))
  (goto (label compound-apply-compiled))
compiled-branch200308180547515
  (assign continue (label after-call200308180547512))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547513
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180547516
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547512
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805475111))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805475110))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547518))
compound-branch200308180547519
  (assign continue (label after-call200308180547517))
  (goto (label compound-apply-compiled))
compiled-branch2003081805475110
  (assign continue (label after-call200308180547517))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547518
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805475111
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547517
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547524))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547523))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547521))
compound-branch200308180547522
  (goto (label compound-apply-compiled))
compiled-branch200308180547523
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547521
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180547524
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180547520
after-lambda200308180547510
  (comment (define (cdaar p) (cdr (car (car p)))))
  (perform (op define-variable!) (const cdaar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (car (cdr p)))))
  (assign val (op make-compiled-procedure) (label entry200308180547421) (reg env))
  (goto (label after-lambda200308180547420))
  (comment (lambda (p) (cdr (car (cdr p)))))
entry200308180547421
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547426))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547425))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547423))
compound-branch200308180547424
  (assign continue (label after-call200308180547422))
  (goto (label compound-apply-compiled))
compiled-branch200308180547425
  (assign continue (label after-call200308180547422))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547423
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180547426
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547422
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547434))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547433))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547431))
compound-branch200308180547432
  (assign continue (label after-call200308180547430))
  (goto (label compound-apply-compiled))
compiled-branch200308180547433
  (assign continue (label after-call200308180547430))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547431
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180547434
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547430
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547444))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547443))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547441))
compound-branch200308180547442
  (goto (label compound-apply-compiled))
compiled-branch200308180547443
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547441
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180547444
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180547440
after-lambda200308180547420
  (comment (define (cdadr p) (cdr (car (cdr p)))))
  (perform (op define-variable!) (const cdadr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (cdr (car p)))))
  (assign val (op make-compiled-procedure) (label entry200308180547331) (reg env))
  (goto (label after-lambda200308180547330))
  (comment (lambda (p) (cdr (cdr (car p)))))
entry200308180547331
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547336))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547335))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547333))
compound-branch200308180547334
  (assign continue (label after-call200308180547332))
  (goto (label compound-apply-compiled))
compiled-branch200308180547335
  (assign continue (label after-call200308180547332))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547333
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180547336
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547332
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547354))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547353))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547351))
compound-branch200308180547352
  (assign continue (label after-call200308180547350))
  (goto (label compound-apply-compiled))
compiled-branch200308180547353
  (assign continue (label after-call200308180547350))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547351
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180547354
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547350
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547359))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547358))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547356))
compound-branch200308180547357
  (goto (label compound-apply-compiled))
compiled-branch200308180547358
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547356
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180547359
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180547355
after-lambda200308180547330
  (comment (define (cddar p) (cdr (cdr (car p)))))
  (perform (op define-variable!) (const cddar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (cdr (cdr p)))))
  (assign val (op make-compiled-procedure) (label entry200308180547241) (reg env))
  (goto (label after-lambda200308180547240))
  (comment (lambda (p) (cdr (cdr (cdr p)))))
entry200308180547241
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547246))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547245))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547243))
compound-branch200308180547244
  (assign continue (label after-call200308180547242))
  (goto (label compound-apply-compiled))
compiled-branch200308180547245
  (assign continue (label after-call200308180547242))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547243
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180547246
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547242
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547264))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547263))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547261))
compound-branch200308180547262
  (assign continue (label after-call200308180547260))
  (goto (label compound-apply-compiled))
compiled-branch200308180547263
  (assign continue (label after-call200308180547260))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547261
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180547264
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547260
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547274))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547273))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547271))
compound-branch200308180547272
  (goto (label compound-apply-compiled))
compiled-branch200308180547273
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547271
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180547274
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180547270
after-lambda200308180547240
  (comment (define (cdddr p) (cdr (cdr (cdr p)))))
  (perform (op define-variable!) (const cdddr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (car (car (car p))))))
  (assign val (op make-compiled-procedure) (label entry200308180547161) (reg env))
  (goto (label after-lambda200308180547160))
  (comment (lambda (p) (car (car (car (car p))))))
entry200308180547161
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547166))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547165))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547163))
compound-branch200308180547164
  (assign continue (label after-call200308180547162))
  (goto (label compound-apply-compiled))
compiled-branch200308180547165
  (assign continue (label after-call200308180547162))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547163
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180547166
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547162
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547174))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547173))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547171))
compound-branch200308180547172
  (assign continue (label after-call200308180547170))
  (goto (label compound-apply-compiled))
compiled-branch200308180547173
  (assign continue (label after-call200308180547170))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547171
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180547174
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547170
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547179))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547178))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547176))
compound-branch200308180547177
  (assign continue (label after-call200308180547175))
  (goto (label compound-apply-compiled))
compiled-branch200308180547178
  (assign continue (label after-call200308180547175))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547176
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180547179
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547175
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547184))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547183))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547181))
compound-branch200308180547182
  (goto (label compound-apply-compiled))
compiled-branch200308180547183
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547181
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180547184
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180547180
after-lambda200308180547160
  (comment (define (caaaar p) (car (car (car (car p))))))
  (perform (op define-variable!) (const caaaar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (car (car (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200308180547071) (reg env))
  (goto (label after-lambda200308180547070))
  (comment (lambda (p) (car (car (car (cdr p))))))
entry200308180547071
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547076))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547075))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547073))
compound-branch200308180547074
  (assign continue (label after-call200308180547072))
  (goto (label compound-apply-compiled))
compiled-branch200308180547075
  (assign continue (label after-call200308180547072))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547073
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180547076
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547072
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547084))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547083))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547081))
compound-branch200308180547082
  (assign continue (label after-call200308180547080))
  (goto (label compound-apply-compiled))
compiled-branch200308180547083
  (assign continue (label after-call200308180547080))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547081
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180547084
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547080
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547094))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547093))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547091))
compound-branch200308180547092
  (assign continue (label after-call200308180547090))
  (goto (label compound-apply-compiled))
compiled-branch200308180547093
  (assign continue (label after-call200308180547090))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547091
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180547094
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547090
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547099))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547098))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547096))
compound-branch200308180547097
  (goto (label compound-apply-compiled))
compiled-branch200308180547098
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547096
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180547099
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180547095
after-lambda200308180547070
  (comment (define (caaadr p) (car (car (car (cdr p))))))
  (perform (op define-variable!) (const caaadr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (car (cdr (car p))))))
  (assign val (op make-compiled-procedure) (label entry200308180546581) (reg env))
  (goto (label after-lambda200308180546580))
  (comment (lambda (p) (car (car (cdr (car p))))))
entry200308180546581
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546586))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546585))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546583))
compound-branch200308180546584
  (assign continue (label after-call200308180546582))
  (goto (label compound-apply-compiled))
compiled-branch200308180546585
  (assign continue (label after-call200308180546582))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546583
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546586
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546582
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547004))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547003))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547001))
compound-branch200308180547002
  (assign continue (label after-call200308180547000))
  (goto (label compound-apply-compiled))
compiled-branch200308180547003
  (assign continue (label after-call200308180547000))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547001
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180547004
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547000
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547009))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547008))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547006))
compound-branch200308180547007
  (assign continue (label after-call200308180547005))
  (goto (label compound-apply-compiled))
compiled-branch200308180547008
  (assign continue (label after-call200308180547005))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547006
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180547009
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180547005
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180547014))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180547013))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180547011))
compound-branch200308180547012
  (goto (label compound-apply-compiled))
compiled-branch200308180547013
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180547011
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180547014
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180547010
after-lambda200308180546580
  (comment (define (caadar p) (car (car (cdr (car p))))))
  (perform (op define-variable!) (const caadar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (car (cdr (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200308180546501) (reg env))
  (goto (label after-lambda200308180546500))
  (comment (lambda (p) (car (car (cdr (cdr p))))))
entry200308180546501
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546506))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546505))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546503))
compound-branch200308180546504
  (assign continue (label after-call200308180546502))
  (goto (label compound-apply-compiled))
compiled-branch200308180546505
  (assign continue (label after-call200308180546502))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546503
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546506
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546502
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546514))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546513))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546511))
compound-branch200308180546512
  (assign continue (label after-call200308180546510))
  (goto (label compound-apply-compiled))
compiled-branch200308180546513
  (assign continue (label after-call200308180546510))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546511
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546514
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546510
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546524))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546523))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546521))
compound-branch200308180546522
  (assign continue (label after-call200308180546520))
  (goto (label compound-apply-compiled))
compiled-branch200308180546523
  (assign continue (label after-call200308180546520))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546521
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546524
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546520
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546534))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546533))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546531))
compound-branch200308180546532
  (goto (label compound-apply-compiled))
compiled-branch200308180546533
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546531
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180546534
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180546530
after-lambda200308180546500
  (comment (define (caaddr p) (car (car (cdr (cdr p))))))
  (perform (op define-variable!) (const caaddr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (cdr (car (car p))))))
  (assign val (op make-compiled-procedure) (label entry200308180546411) (reg env))
  (goto (label after-lambda200308180546410))
  (comment (lambda (p) (car (cdr (car (car p))))))
entry200308180546411
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546416))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546415))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546413))
compound-branch200308180546414
  (assign continue (label after-call200308180546412))
  (goto (label compound-apply-compiled))
compiled-branch200308180546415
  (assign continue (label after-call200308180546412))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546413
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546416
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546412
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546424))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546423))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546421))
compound-branch200308180546422
  (assign continue (label after-call200308180546420))
  (goto (label compound-apply-compiled))
compiled-branch200308180546423
  (assign continue (label after-call200308180546420))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546421
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546424
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546420
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546429))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546428))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546426))
compound-branch200308180546427
  (assign continue (label after-call200308180546425))
  (goto (label compound-apply-compiled))
compiled-branch200308180546428
  (assign continue (label after-call200308180546425))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546426
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546429
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546425
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546434))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546433))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546431))
compound-branch200308180546432
  (goto (label compound-apply-compiled))
compiled-branch200308180546433
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546431
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180546434
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180546430
after-lambda200308180546410
  (comment (define (cadaar p) (car (cdr (car (car p))))))
  (perform (op define-variable!) (const cadaar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (cdr (car (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200308180546330) (reg env))
  (goto (label after-lambda200308180546320))
  (comment (lambda (p) (car (cdr (car (cdr p))))))
entry200308180546330
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546335))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546334))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546332))
compound-branch200308180546333
  (assign continue (label after-call200308180546331))
  (goto (label compound-apply-compiled))
compiled-branch200308180546334
  (assign continue (label after-call200308180546331))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546332
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546335
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546331
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805463310))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546339))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546337))
compound-branch200308180546338
  (assign continue (label after-call200308180546336))
  (goto (label compound-apply-compiled))
compiled-branch200308180546339
  (assign continue (label after-call200308180546336))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546337
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805463310
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546336
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546344))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546343))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546341))
compound-branch200308180546342
  (assign continue (label after-call200308180546340))
  (goto (label compound-apply-compiled))
compiled-branch200308180546343
  (assign continue (label after-call200308180546340))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546341
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546344
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546340
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546354))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546353))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546351))
compound-branch200308180546352
  (goto (label compound-apply-compiled))
compiled-branch200308180546353
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546351
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180546354
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180546350
after-lambda200308180546320
  (comment (define (cadadr p) (car (cdr (car (cdr p))))))
  (perform (op define-variable!) (const cadadr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (cdr (cdr (car p))))))
  (assign val (op make-compiled-procedure) (label entry200308180546241) (reg env))
  (goto (label after-lambda200308180546240))
  (comment (lambda (p) (car (cdr (cdr (car p))))))
entry200308180546241
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546254))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546253))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546251))
compound-branch200308180546252
  (assign continue (label after-call200308180546250))
  (goto (label compound-apply-compiled))
compiled-branch200308180546253
  (assign continue (label after-call200308180546250))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546251
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546254
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546250
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546264))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546263))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546261))
compound-branch200308180546262
  (assign continue (label after-call200308180546260))
  (goto (label compound-apply-compiled))
compiled-branch200308180546263
  (assign continue (label after-call200308180546260))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546261
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546264
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546260
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546269))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546268))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546266))
compound-branch200308180546267
  (assign continue (label after-call200308180546265))
  (goto (label compound-apply-compiled))
compiled-branch200308180546268
  (assign continue (label after-call200308180546265))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546266
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546269
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546265
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546274))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546273))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546271))
compound-branch200308180546272
  (goto (label compound-apply-compiled))
compiled-branch200308180546273
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546271
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180546274
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180546270
after-lambda200308180546240
  (comment (define (caddar p) (car (cdr (cdr (car p))))))
  (perform (op define-variable!) (const caddar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (cdr (cdr (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200308180546161) (reg env))
  (goto (label after-lambda200308180546160))
  (comment (lambda (p) (car (cdr (cdr (cdr p))))))
entry200308180546161
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546166))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546165))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546163))
compound-branch200308180546164
  (assign continue (label after-call200308180546162))
  (goto (label compound-apply-compiled))
compiled-branch200308180546165
  (assign continue (label after-call200308180546162))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546163
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546166
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546162
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546174))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546173))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546171))
compound-branch200308180546172
  (assign continue (label after-call200308180546170))
  (goto (label compound-apply-compiled))
compiled-branch200308180546173
  (assign continue (label after-call200308180546170))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546171
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546174
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546170
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546184))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546183))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546181))
compound-branch200308180546182
  (assign continue (label after-call200308180546180))
  (goto (label compound-apply-compiled))
compiled-branch200308180546183
  (assign continue (label after-call200308180546180))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546181
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546184
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546180
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546194))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546193))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546191))
compound-branch200308180546192
  (goto (label compound-apply-compiled))
compiled-branch200308180546193
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546191
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180546194
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180546190
after-lambda200308180546160
  (comment (define (cadddr p) (car (cdr (cdr (cdr p))))))
  (perform (op define-variable!) (const cadddr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (car (car (car p))))))
  (assign val (op make-compiled-procedure) (label entry200308180546071) (reg env))
  (goto (label after-lambda200308180546070))
  (comment (lambda (p) (cdr (car (car (car p))))))
entry200308180546071
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546084))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546083))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546081))
compound-branch200308180546082
  (assign continue (label after-call200308180546080))
  (goto (label compound-apply-compiled))
compiled-branch200308180546083
  (assign continue (label after-call200308180546080))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546081
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546084
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546080
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546094))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546093))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546091))
compound-branch200308180546092
  (assign continue (label after-call200308180546090))
  (goto (label compound-apply-compiled))
compiled-branch200308180546093
  (assign continue (label after-call200308180546090))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546091
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546094
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546090
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546099))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546098))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546096))
compound-branch200308180546097
  (assign continue (label after-call200308180546095))
  (goto (label compound-apply-compiled))
compiled-branch200308180546098
  (assign continue (label after-call200308180546095))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546096
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546099
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546095
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546104))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546103))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546101))
compound-branch200308180546102
  (goto (label compound-apply-compiled))
compiled-branch200308180546103
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546101
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180546104
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180546100
after-lambda200308180546070
  (comment (define (cdaaar p) (cdr (car (car (car p))))))
  (perform (op define-variable!) (const cdaaar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (car (car (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200308180545591) (reg env))
  (goto (label after-lambda200308180545590))
  (comment (lambda (p) (cdr (car (car (cdr p))))))
entry200308180545591
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546004))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546003))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546001))
compound-branch200308180546002
  (assign continue (label after-call200308180546000))
  (goto (label compound-apply-compiled))
compiled-branch200308180546003
  (assign continue (label after-call200308180546000))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546001
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546004
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546000
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546009))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546008))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546006))
compound-branch200308180546007
  (assign continue (label after-call200308180546005))
  (goto (label compound-apply-compiled))
compiled-branch200308180546008
  (assign continue (label after-call200308180546005))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546006
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546009
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546005
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546014))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546013))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546011))
compound-branch200308180546012
  (assign continue (label after-call200308180546010))
  (goto (label compound-apply-compiled))
compiled-branch200308180546013
  (assign continue (label after-call200308180546010))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546011
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180546014
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180546010
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180546019))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180546018))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180546016))
compound-branch200308180546017
  (goto (label compound-apply-compiled))
compiled-branch200308180546018
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180546016
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180546019
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180546015
after-lambda200308180545590
  (comment (define (cdaadr p) (cdr (car (car (cdr p))))))
  (perform (op define-variable!) (const cdaadr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (car (cdr (car p))))))
  (assign val (op make-compiled-procedure) (label entry200308180545521) (reg env))
  (goto (label after-lambda200308180545520))
  (comment (lambda (p) (cdr (car (cdr (car p))))))
entry200308180545521
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545526))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545525))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545523))
compound-branch200308180545524
  (assign continue (label after-call200308180545522))
  (goto (label compound-apply-compiled))
compiled-branch200308180545525
  (assign continue (label after-call200308180545522))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545523
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545526
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545522
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805455211))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805455210))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545528))
compound-branch200308180545529
  (assign continue (label after-call200308180545527))
  (goto (label compound-apply-compiled))
compiled-branch2003081805455210
  (assign continue (label after-call200308180545527))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545528
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805455211
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545527
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545534))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545533))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545531))
compound-branch200308180545532
  (assign continue (label after-call200308180545530))
  (goto (label compound-apply-compiled))
compiled-branch200308180545533
  (assign continue (label after-call200308180545530))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545531
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545534
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545530
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545544))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545543))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545541))
compound-branch200308180545542
  (goto (label compound-apply-compiled))
compiled-branch200308180545543
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545541
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180545544
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180545540
after-lambda200308180545520
  (comment (define (cdadar p) (cdr (car (cdr (car p))))))
  (perform (op define-variable!) (const cdadar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (car (cdr (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200308180545441) (reg env))
  (goto (label after-lambda200308180545440))
  (comment (lambda (p) (cdr (car (cdr (cdr p))))))
entry200308180545441
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545446))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545445))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545443))
compound-branch200308180545444
  (assign continue (label after-call200308180545442))
  (goto (label compound-apply-compiled))
compiled-branch200308180545445
  (assign continue (label after-call200308180545442))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545443
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545446
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545442
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805454411))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805454410))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545448))
compound-branch200308180545449
  (assign continue (label after-call200308180545447))
  (goto (label compound-apply-compiled))
compiled-branch2003081805454410
  (assign continue (label after-call200308180545447))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545448
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805454411
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545447
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545454))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545453))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545451))
compound-branch200308180545452
  (assign continue (label after-call200308180545450))
  (goto (label compound-apply-compiled))
compiled-branch200308180545453
  (assign continue (label after-call200308180545450))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545451
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545454
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545450
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545464))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545463))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545461))
compound-branch200308180545462
  (goto (label compound-apply-compiled))
compiled-branch200308180545463
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545461
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180545464
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180545460
after-lambda200308180545440
  (comment (define (cdaddr p) (cdr (car (cdr (cdr p))))))
  (perform (op define-variable!) (const cdaddr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (cdr (car (car p))))))
  (assign val (op make-compiled-procedure) (label entry200308180545351) (reg env))
  (goto (label after-lambda200308180545350))
  (comment (lambda (p) (cdr (cdr (car (car p))))))
entry200308180545351
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545364))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545363))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545361))
compound-branch200308180545362
  (assign continue (label after-call200308180545360))
  (goto (label compound-apply-compiled))
compiled-branch200308180545363
  (assign continue (label after-call200308180545360))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545361
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545364
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545360
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545374))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545373))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545371))
compound-branch200308180545372
  (assign continue (label after-call200308180545370))
  (goto (label compound-apply-compiled))
compiled-branch200308180545373
  (assign continue (label after-call200308180545370))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545371
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545374
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545370
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545379))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545378))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545376))
compound-branch200308180545377
  (assign continue (label after-call200308180545375))
  (goto (label compound-apply-compiled))
compiled-branch200308180545378
  (assign continue (label after-call200308180545375))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545376
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545379
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545375
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545384))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545383))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545381))
compound-branch200308180545382
  (goto (label compound-apply-compiled))
compiled-branch200308180545383
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545381
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180545384
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180545380
after-lambda200308180545350
  (comment (define (cddaar p) (cdr (cdr (car (car p))))))
  (perform (op define-variable!) (const cddaar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (cdr (car (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200308180545281) (reg env))
  (goto (label after-lambda200308180545280))
  (comment (lambda (p) (cdr (cdr (car (cdr p))))))
entry200308180545281
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545294))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545293))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545291))
compound-branch200308180545292
  (assign continue (label after-call200308180545290))
  (goto (label compound-apply-compiled))
compiled-branch200308180545293
  (assign continue (label after-call200308180545290))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545291
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545294
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545290
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545299))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545298))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545296))
compound-branch200308180545297
  (assign continue (label after-call200308180545295))
  (goto (label compound-apply-compiled))
compiled-branch200308180545298
  (assign continue (label after-call200308180545295))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545296
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545299
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545295
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545304))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545303))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545301))
compound-branch200308180545302
  (assign continue (label after-call200308180545300))
  (goto (label compound-apply-compiled))
compiled-branch200308180545303
  (assign continue (label after-call200308180545300))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545301
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545304
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545300
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545314))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545313))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545311))
compound-branch200308180545312
  (goto (label compound-apply-compiled))
compiled-branch200308180545313
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545311
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180545314
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180545310
after-lambda200308180545280
  (comment (define (cddadr p) (cdr (cdr (car (cdr p))))))
  (perform (op define-variable!) (const cddadr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (cdr (cdr (car p))))))
  (assign val (op make-compiled-procedure) (label entry200308180545211) (reg env))
  (goto (label after-lambda200308180545210))
  (comment (lambda (p) (cdr (cdr (cdr (car p))))))
entry200308180545211
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545224))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545223))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545221))
compound-branch200308180545222
  (assign continue (label after-call200308180545220))
  (goto (label compound-apply-compiled))
compiled-branch200308180545223
  (assign continue (label after-call200308180545220))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545221
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545224
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545220
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545229))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545228))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545226))
compound-branch200308180545227
  (assign continue (label after-call200308180545225))
  (goto (label compound-apply-compiled))
compiled-branch200308180545228
  (assign continue (label after-call200308180545225))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545226
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545229
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545225
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545234))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545233))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545231))
compound-branch200308180545232
  (assign continue (label after-call200308180545230))
  (goto (label compound-apply-compiled))
compiled-branch200308180545233
  (assign continue (label after-call200308180545230))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545231
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545234
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545230
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545244))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545243))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545241))
compound-branch200308180545242
  (goto (label compound-apply-compiled))
compiled-branch200308180545243
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545241
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180545244
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180545240
after-lambda200308180545210
  (comment (define (cdddar p) (cdr (cdr (cdr (car p))))))
  (perform (op define-variable!) (const cdddar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (cdr (cdr (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200308180545151) (reg env))
  (goto (label after-lambda200308180545150))
  (comment (lambda (p) (cdr (cdr (cdr (cdr p))))))
entry200308180545151
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545156))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545155))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545153))
compound-branch200308180545154
  (assign continue (label after-call200308180545152))
  (goto (label compound-apply-compiled))
compiled-branch200308180545155
  (assign continue (label after-call200308180545152))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545153
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545156
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545152
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545164))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545163))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545161))
compound-branch200308180545162
  (assign continue (label after-call200308180545160))
  (goto (label compound-apply-compiled))
compiled-branch200308180545163
  (assign continue (label after-call200308180545160))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545161
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545164
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545160
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545169))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545168))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545166))
compound-branch200308180545167
  (assign continue (label after-call200308180545165))
  (goto (label compound-apply-compiled))
compiled-branch200308180545168
  (assign continue (label after-call200308180545165))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545166
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545169
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545165
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545174))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545173))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545171))
compound-branch200308180545172
  (goto (label compound-apply-compiled))
compiled-branch200308180545173
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545171
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180545174
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180545170
after-lambda200308180545150
  (comment (define (cddddr p) (cdr (cdr (cdr (cdr p))))))
  (perform (op define-variable!) (const cddddr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (lst) (let ((hare lst) (tortoise lst) (tortoise-advance true)) (define (iter) (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false))) (iter))))
  (assign val (op make-compiled-procedure) (label entry200308180544581) (reg env))
  (goto (label after-lambda200308180544580))
  (comment (lambda (lst) (let ((hare lst) (tortoise lst) (tortoise-advance true)) (define (iter) (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false))) (iter))))
entry200308180544581
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (lst)) (reg argl) (reg env))
  (comment (lambda (hare tortoise tortoise-advance) (define (iter) (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false))) (iter)))
  (assign proc (op make-compiled-procedure) (label entry200308180544583) (reg env))
  (goto (label after-lambda200308180544582))
  (comment (lambda (hare tortoise tortoise-advance) (define (iter) (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false))) (iter)))
entry200308180544583
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (hare tortoise tortoise-advance)) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda () (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false)))) (iter)))
  (assign proc (op make-compiled-procedure) (label entry200308180544591) (reg env))
  (goto (label after-lambda200308180544590))
  (comment (lambda (iter) (set! iter (lambda () (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false)))) (iter)))
entry200308180544591
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda () (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false))))
  (assign val (op make-compiled-procedure) (label entry200308180544598) (reg env))
  (goto (label after-lambda200308180544597))
  (comment (lambda () (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false))))
entry200308180544598
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const ()) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment hare)
  (assign val (op lookup-variable-value) (const hare) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545054))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545053))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545051))
compound-branch200308180545052
  (assign continue (label after-call200308180545050))
  (goto (label compound-apply-compiled))
compiled-branch200308180545053
  (assign continue (label after-call200308180545050))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545051
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545054
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545050
  (restore env)
  (restore continue)
  (comment (if (null? hare) true (if (pair? hare) (begin (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) false)))
  (test (op false?) (reg val))
  (branch (label false-branch2003081805445910))
true-branch2003081805445911
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch2003081805445910
  (save continue)
  (save env)
  (comment pair?)
  (assign proc (op lookup-variable-value) (const pair?) (reg env))
  (comment hare)
  (assign val (op lookup-variable-value) (const hare) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545044))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545043))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545041))
compound-branch200308180545042
  (assign continue (label after-call200308180545040))
  (goto (label compound-apply-compiled))
compiled-branch200308180545043
  (assign continue (label after-call200308180545040))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545041
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545044
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545040
  (restore env)
  (restore continue)
  (comment (if (pair? hare) (begin (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) false))
  (test (op false?) (reg val))
  (branch (label false-branch2003081805445913))
true-branch2003081805445914
  (save continue)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment hare)
  (assign val (op lookup-variable-value) (const hare) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545034))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545033))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545031))
compound-branch200308180545032
  (assign continue (label after-call200308180545030))
  (goto (label compound-apply-compiled))
compiled-branch200308180545033
  (assign continue (label after-call200308180545030))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545031
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545034
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545030
  (restore env)
  (comment (set! hare (cdr hare)))
  (perform (op set-variable-value!) (const hare) (reg val) (reg env))
  (assign val  (const ok))
  (restore continue)
  (save continue)
  (save env)
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (comment tortoise-advance)
  (assign val (op lookup-variable-value) (const tortoise-advance) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545024))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545023))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545021))
compound-branch200308180545022
  (assign continue (label after-call200308180545020))
  (goto (label compound-apply-compiled))
compiled-branch200308180545023
  (assign continue (label after-call200308180545020))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545021
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545024
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545020
  (restore env)
  (comment (set! tortoise-advance (not tortoise-advance)))
  (perform (op set-variable-value!) (const tortoise-advance) (reg val) (reg env))
  (assign val  (const ok))
  (restore continue)
  (save continue)
  (comment tortoise-advance)
  (assign val (op lookup-variable-value) (const tortoise-advance) (reg env))
  (comment (if tortoise-advance (set! tortoise (cdr tortoise))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180545011))
true-branch200308180545012
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment tortoise)
  (assign val (op lookup-variable-value) (const tortoise) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545017))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545016))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545014))
compound-branch200308180545015
  (assign continue (label after-call200308180545013))
  (goto (label compound-apply-compiled))
compiled-branch200308180545016
  (assign continue (label after-call200308180545013))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545014
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545017
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545013
  (restore env)
  (comment (set! tortoise (cdr tortoise)))
  (perform (op set-variable-value!) (const tortoise) (reg val) (reg env))
  (assign val  (const ok))
  (goto (label after-if200308180545010))
false-branch200308180545011
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
after-if200308180545010
  (restore continue)
  (save continue)
  (save env)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment tortoise)
  (assign val (op lookup-variable-value) (const tortoise) (reg env))
  (assign argl (op list) (reg val))
  (comment hare)
  (assign val (op lookup-variable-value) (const hare) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545004))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545003))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545001))
compound-branch200308180545002
  (assign continue (label after-call200308180545000))
  (goto (label compound-apply-compiled))
compiled-branch200308180545003
  (assign continue (label after-call200308180545000))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545001
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180545004
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180545000
  (restore env)
  (restore continue)
  (comment (if (eq? hare tortoise) false (iter)))
  (test (op false?) (reg val))
  (branch (label false-branch2003081805445916))
true-branch2003081805445917
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch2003081805445916
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805445922))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805445921))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805445919))
compound-branch2003081805445920
  (goto (label compound-apply-compiled))
compiled-branch2003081805445921
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805445919
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2003081805445922
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2003081805445918
after-if2003081805445915
false-branch2003081805445913
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if2003081805445912
after-if200308180544599
after-lambda200308180544597
  (comment (set! iter (lambda () (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false)))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544596))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544595))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544593))
compound-branch200308180544594
  (goto (label compound-apply-compiled))
compiled-branch200308180544595
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544593
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180544596
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180544592
after-lambda200308180544590
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545084))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545083))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545081))
compound-branch200308180545082
  (goto (label compound-apply-compiled))
compiled-branch200308180545083
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545081
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180545084
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180545080
after-lambda200308180544582
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (assign argl (op list) (reg val))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180545094))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180545093))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180545091))
compound-branch200308180545092
  (goto (label compound-apply-compiled))
compiled-branch200308180545093
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180545091
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180545094
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180545090
after-lambda200308180544580
  (comment (define (list? lst) (let ((hare lst) (tortoise lst) (tortoise-advance true)) (define (iter) (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false))) (iter))))
  (perform (op define-variable!) (const list?) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda seq (accumulate cons (quote ()) seq)))
  (assign val (op make-compiled-procedure) (label entry200308180544531) (reg env))
  (goto (label after-lambda200308180544530))
  (comment (lambda seq (accumulate cons (quote ()) seq)))
entry200308180544531
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const seq) (reg argl) (reg env))
  (comment accumulate)
  (assign proc (op lookup-variable-value) (const accumulate) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (comment cons)
  (assign val (op lookup-variable-value) (const cons) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544544))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544543))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544541))
compound-branch200308180544542
  (goto (label compound-apply-compiled))
compiled-branch200308180544543
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544541
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180544544
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180544540
after-lambda200308180544530
  (comment (define (list . seq) (accumulate cons (quote ()) seq)))
  (perform (op define-variable!) (const list) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (lst) (define (iter result lst) (if (null? lst) result (iter (+ result 1) (cdr lst)))) (iter 0 lst)))
  (assign val (op make-compiled-procedure) (label entry200308180544451) (reg env))
  (goto (label after-lambda200308180544450))
  (comment (lambda (lst) (define (iter result lst) (if (null? lst) result (iter (+ result 1) (cdr lst)))) (iter 0 lst)))
entry200308180544451
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (lst)) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (result lst) (if (null? lst) result (iter (+ result 1) (cdr lst))))) (iter 0 lst)))
  (assign proc (op make-compiled-procedure) (label entry200308180544453) (reg env))
  (goto (label after-lambda200308180544452))
  (comment (lambda (iter) (set! iter (lambda (result lst) (if (null? lst) result (iter (+ result 1) (cdr lst))))) (iter 0 lst)))
entry200308180544453
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (result lst) (if (null? lst) result (iter (+ result 1) (cdr lst)))))
  (assign val (op make-compiled-procedure) (label entry2003081805444510) (reg env))
  (goto (label after-lambda200308180544459))
  (comment (lambda (result lst) (if (null? lst) result (iter (+ result 1) (cdr lst)))))
entry2003081805444510
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (result lst)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544484))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544483))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544481))
compound-branch200308180544482
  (assign continue (label after-call200308180544480))
  (goto (label compound-apply-compiled))
compiled-branch200308180544483
  (assign continue (label after-call200308180544480))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544481
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544484
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544480
  (restore env)
  (restore continue)
  (comment (if (null? lst) result (iter (+ result 1) (cdr lst))))
  (test (op false?) (reg val))
  (branch (label false-branch2003081805444512))
true-branch2003081805444513
  (comment result)
  (assign val (op lookup-variable-value) (const result) (reg env))
  (goto (reg continue))
false-branch2003081805444512
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805444518))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805444517))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805444515))
compound-branch2003081805444516
  (assign continue (label after-call2003081805444514))
  (goto (label compound-apply-compiled))
compiled-branch2003081805444517
  (assign continue (label after-call2003081805444514))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805444515
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805444518
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003081805444514
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment +)
  (assign proc (op lookup-variable-value) (const +) (reg env))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (comment result)
  (assign val (op lookup-variable-value) (const result) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544464))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544463))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544461))
compound-branch200308180544462
  (assign continue (label after-call200308180544460))
  (goto (label compound-apply-compiled))
compiled-branch200308180544463
  (assign continue (label after-call200308180544460))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544461
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544464
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544460
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544474))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544473))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544471))
compound-branch200308180544472
  (goto (label compound-apply-compiled))
compiled-branch200308180544473
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544471
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180544474
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180544470
after-if2003081805444511
after-lambda200308180544459
  (comment (set! iter (lambda (result lst) (if (null? lst) result (iter (+ result 1) (cdr lst))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544458))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544457))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544455))
compound-branch200308180544456
  (goto (label compound-apply-compiled))
compiled-branch200308180544457
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544455
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180544458
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180544454
after-lambda200308180544452
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544494))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544493))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544491))
compound-branch200308180544492
  (goto (label compound-apply-compiled))
compiled-branch200308180544493
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544491
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180544494
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180544490
after-lambda200308180544450
  (comment (define (length lst) (define (iter result lst) (if (null? lst) result (iter (+ result 1) (cdr lst)))) (iter 0 lst)))
  (perform (op define-variable!) (const length) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda seqs (define (append-2 a b) (accumulate cons b a)) (define (append-seq-list seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs))))) (append-seq-list seqs)))
  (assign val (op make-compiled-procedure) (label entry200308180544341) (reg env))
  (goto (label after-lambda200308180544340))
  (comment (lambda seqs (define (append-2 a b) (accumulate cons b a)) (define (append-seq-list seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs))))) (append-seq-list seqs)))
entry200308180544341
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const seqs) (reg argl) (reg env))
  (comment (lambda (append-2 append-seq-list) (set! append-2 (lambda (a b) (accumulate cons b a))) (set! append-seq-list (lambda (seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs)))))) (append-seq-list seqs)))
  (assign proc (op make-compiled-procedure) (label entry200308180544343) (reg env))
  (goto (label after-lambda200308180544342))
  (comment (lambda (append-2 append-seq-list) (set! append-2 (lambda (a b) (accumulate cons b a))) (set! append-seq-list (lambda (seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs)))))) (append-seq-list seqs)))
entry200308180544343
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (append-2 append-seq-list)) (reg argl) (reg env))
  (comment (lambda (a b) (accumulate cons b a)))
  (assign val (op make-compiled-procedure) (label entry200308180544391) (reg env))
  (goto (label after-lambda200308180544390))
  (comment (lambda (a b) (accumulate cons b a)))
entry200308180544391
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (a b)) (reg argl) (reg env))
  (comment accumulate)
  (assign proc (op lookup-variable-value) (const accumulate) (reg env))
  (comment a)
  (assign val (op lookup-variable-value) (const a) (reg env))
  (assign argl (op list) (reg val))
  (comment b)
  (assign val (op lookup-variable-value) (const b) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment cons)
  (assign val (op lookup-variable-value) (const cons) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544396))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544395))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544393))
compound-branch200308180544394
  (goto (label compound-apply-compiled))
compiled-branch200308180544395
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544393
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180544396
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180544392
after-lambda200308180544390
  (comment (set! append-2 (lambda (a b) (accumulate cons b a))))
  (perform (op set-variable-value!) (const append-2) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs))))))
  (assign val (op make-compiled-procedure) (label entry2003081805443410) (reg env))
  (goto (label after-lambda200308180544349))
  (comment (lambda (seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs))))))
entry2003081805443410
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seqs)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544374))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544373))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544371))
compound-branch200308180544372
  (assign continue (label after-call200308180544370))
  (goto (label compound-apply-compiled))
compiled-branch200308180544373
  (assign continue (label after-call200308180544370))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544371
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544374
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544370
  (restore env)
  (restore continue)
  (comment (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs)))))
  (test (op false?) (reg val))
  (branch (label false-branch2003081805443412))
true-branch2003081805443413
  (comment (quote ()))
  (assign val  (const ()))
  (goto (reg continue))
false-branch2003081805443412
  (comment append-2)
  (assign proc (op lookup-variable-value) (const append-2) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment append-seq-list)
  (assign proc (op lookup-variable-value) (const append-seq-list) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805443418))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805443417))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805443415))
compound-branch2003081805443416
  (assign continue (label after-call2003081805443414))
  (goto (label compound-apply-compiled))
compiled-branch2003081805443417
  (assign continue (label after-call2003081805443414))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805443415
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805443418
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003081805443414
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544354))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544353))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544351))
compound-branch200308180544352
  (assign continue (label after-call200308180544350))
  (goto (label compound-apply-compiled))
compiled-branch200308180544353
  (assign continue (label after-call200308180544350))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544351
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544354
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544350
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544364))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544363))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544361))
compound-branch200308180544362
  (assign continue (label after-call200308180544360))
  (goto (label compound-apply-compiled))
compiled-branch200308180544363
  (assign continue (label after-call200308180544360))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544361
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544364
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544360
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544369))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544368))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544366))
compound-branch200308180544367
  (goto (label compound-apply-compiled))
compiled-branch200308180544368
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544366
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180544369
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180544365
after-if2003081805443411
after-lambda200308180544349
  (comment (set! append-seq-list (lambda (seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs)))))))
  (perform (op set-variable-value!) (const append-seq-list) (reg val) (reg env))
  (assign val  (const ok))
  (comment append-seq-list)
  (assign proc (op lookup-variable-value) (const append-seq-list) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544348))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544347))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544345))
compound-branch200308180544346
  (goto (label compound-apply-compiled))
compiled-branch200308180544347
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544345
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180544348
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180544344
after-lambda200308180544342
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544404))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544403))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544401))
compound-branch200308180544402
  (goto (label compound-apply-compiled))
compiled-branch200308180544403
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544401
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180544404
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180544400
after-lambda200308180544340
  (comment (define (append . seqs) (define (append-2 a b) (accumulate cons b a)) (define (append-seq-list seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs))))) (append-seq-list seqs)))
  (perform (op define-variable!) (const append) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (list) (define (iter list result) (if (null? list) result (iter (cdr list) (cons (car list) result)))) (iter list (quote ()))))
  (assign val (op make-compiled-procedure) (label entry200308180544241) (reg env))
  (goto (label after-lambda200308180544240))
  (comment (lambda (list) (define (iter list result) (if (null? list) result (iter (cdr list) (cons (car list) result)))) (iter list (quote ()))))
entry200308180544241
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (list)) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (list result) (if (null? list) result (iter (cdr list) (cons (car list) result))))) (iter list (quote ()))))
  (assign proc (op make-compiled-procedure) (label entry200308180544243) (reg env))
  (goto (label after-lambda200308180544242))
  (comment (lambda (iter) (set! iter (lambda (list result) (if (null? list) result (iter (cdr list) (cons (car list) result))))) (iter list (quote ()))))
entry200308180544243
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (list result) (if (null? list) result (iter (cdr list) (cons (car list) result)))))
  (assign val (op make-compiled-procedure) (label entry200308180544251) (reg env))
  (goto (label after-lambda200308180544250))
  (comment (lambda (list result) (if (null? list) result (iter (cdr list) (cons (car list) result)))))
entry200308180544251
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (list result)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment list)
  (assign val (op lookup-variable-value) (const list) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544284))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544283))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544281))
compound-branch200308180544282
  (assign continue (label after-call200308180544280))
  (goto (label compound-apply-compiled))
compiled-branch200308180544283
  (assign continue (label after-call200308180544280))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544281
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544284
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544280
  (restore env)
  (restore continue)
  (comment (if (null? list) result (iter (cdr list) (cons (car list) result))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180544253))
true-branch200308180544254
  (comment result)
  (assign val (op lookup-variable-value) (const result) (reg env))
  (goto (reg continue))
false-branch200308180544253
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cons)
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save proc)
  (comment result)
  (assign val (op lookup-variable-value) (const result) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment list)
  (assign val (op lookup-variable-value) (const list) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544259))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544258))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544256))
compound-branch200308180544257
  (assign continue (label after-call200308180544255))
  (goto (label compound-apply-compiled))
compiled-branch200308180544258
  (assign continue (label after-call200308180544255))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544256
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544259
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544255
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544264))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544263))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544261))
compound-branch200308180544262
  (assign continue (label after-call200308180544260))
  (goto (label compound-apply-compiled))
compiled-branch200308180544263
  (assign continue (label after-call200308180544260))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544261
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544264
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544260
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment list)
  (assign val (op lookup-variable-value) (const list) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544269))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544268))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544266))
compound-branch200308180544267
  (assign continue (label after-call200308180544265))
  (goto (label compound-apply-compiled))
compiled-branch200308180544268
  (assign continue (label after-call200308180544265))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544266
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544269
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544265
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544274))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544273))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544271))
compound-branch200308180544272
  (goto (label compound-apply-compiled))
compiled-branch200308180544273
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544271
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180544274
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180544270
after-if200308180544252
after-lambda200308180544250
  (comment (set! iter (lambda (list result) (if (null? list) result (iter (cdr list) (cons (car list) result))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (comment list)
  (assign val (op lookup-variable-value) (const list) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544248))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544247))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544245))
compound-branch200308180544246
  (goto (label compound-apply-compiled))
compiled-branch200308180544247
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544245
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180544248
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180544244
after-lambda200308180544242
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544304))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544303))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544301))
compound-branch200308180544302
  (goto (label compound-apply-compiled))
compiled-branch200308180544303
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544301
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180544304
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180544300
after-lambda200308180544240
  (comment (define (reverse list) (define (iter list result) (if (null? list) result (iter (cdr list) (cons (car list) result)))) (iter list (quote ()))))
  (perform (op define-variable!) (const reverse) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (l k) (if (= k 0) l (list-tail (cdr l) (- k 1)))))
  (assign val (op make-compiled-procedure) (label entry200308180544171) (reg env))
  (goto (label after-lambda200308180544170))
  (comment (lambda (l k) (if (= k 0) l (list-tail (cdr l) (- k 1)))))
entry200308180544171
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (l k)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment =)
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (comment k)
  (assign val (op lookup-variable-value) (const k) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544204))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544203))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544201))
compound-branch200308180544202
  (assign continue (label after-call200308180544200))
  (goto (label compound-apply-compiled))
compiled-branch200308180544203
  (assign continue (label after-call200308180544200))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544201
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544204
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544200
  (restore env)
  (restore continue)
  (comment (if (= k 0) l (list-tail (cdr l) (- k 1))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180544173))
true-branch200308180544174
  (comment l)
  (assign val (op lookup-variable-value) (const l) (reg env))
  (goto (reg continue))
false-branch200308180544173
  (comment list-tail)
  (assign proc (op lookup-variable-value) (const list-tail) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment -)
  (assign proc (op lookup-variable-value) (const -) (reg env))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (comment k)
  (assign val (op lookup-variable-value) (const k) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544184))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544183))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544181))
compound-branch200308180544182
  (assign continue (label after-call200308180544180))
  (goto (label compound-apply-compiled))
compiled-branch200308180544183
  (assign continue (label after-call200308180544180))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544181
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544184
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544180
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment l)
  (assign val (op lookup-variable-value) (const l) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544194))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544193))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544191))
compound-branch200308180544192
  (assign continue (label after-call200308180544190))
  (goto (label compound-apply-compiled))
compiled-branch200308180544193
  (assign continue (label after-call200308180544190))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544191
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544194
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544190
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544199))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544198))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544196))
compound-branch200308180544197
  (goto (label compound-apply-compiled))
compiled-branch200308180544198
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544196
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180544199
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180544195
after-if200308180544172
after-lambda200308180544170
  (comment (define (list-tail l k) (if (= k 0) l (list-tail (cdr l) (- k 1)))))
  (perform (op define-variable!) (const list-tail) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (l k) (car (list-tail l k))))
  (assign val (op make-compiled-procedure) (label entry200308180544131) (reg env))
  (goto (label after-lambda200308180544130))
  (comment (lambda (l k) (car (list-tail l k))))
entry200308180544131
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (l k)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment list-tail)
  (assign proc (op lookup-variable-value) (const list-tail) (reg env))
  (comment k)
  (assign val (op lookup-variable-value) (const k) (reg env))
  (assign argl (op list) (reg val))
  (comment l)
  (assign val (op lookup-variable-value) (const l) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544144))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544143))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544141))
compound-branch200308180544142
  (assign continue (label after-call200308180544140))
  (goto (label compound-apply-compiled))
compiled-branch200308180544143
  (assign continue (label after-call200308180544140))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544141
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544144
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544140
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544149))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544148))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544146))
compound-branch200308180544147
  (goto (label compound-apply-compiled))
compiled-branch200308180544148
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544146
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180544149
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180544145
after-lambda200308180544130
  (comment (define (list-ref l k) (car (list-tail l k))))
  (perform (op define-variable!) (const list-ref) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (obj lst) (if (null? lst) false (if (eq? obj (car lst)) lst (memq obj (cdr lst))))))
  (assign val (op make-compiled-procedure) (label entry200308180544071) (reg env))
  (goto (label after-lambda200308180544070))
  (comment (lambda (obj lst) (if (null? lst) false (if (eq? obj (car lst)) lst (memq obj (cdr lst))))))
entry200308180544071
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj lst)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544104))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544103))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544101))
compound-branch200308180544102
  (assign continue (label after-call200308180544100))
  (goto (label compound-apply-compiled))
compiled-branch200308180544103
  (assign continue (label after-call200308180544100))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544101
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544104
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544100
  (restore env)
  (restore continue)
  (comment (if (null? lst) false (if (eq? obj (car lst)) lst (memq obj (cdr lst)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180544073))
true-branch200308180544074
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200308180544073
  (save continue)
  (save env)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544084))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544083))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544081))
compound-branch200308180544082
  (assign continue (label after-call200308180544080))
  (goto (label compound-apply-compiled))
compiled-branch200308180544083
  (assign continue (label after-call200308180544080))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544081
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544084
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544080
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544094))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544093))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544091))
compound-branch200308180544092
  (assign continue (label after-call200308180544090))
  (goto (label compound-apply-compiled))
compiled-branch200308180544093
  (assign continue (label after-call200308180544090))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544091
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544094
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544090
  (restore env)
  (restore continue)
  (comment (if (eq? obj (car lst)) lst (memq obj (cdr lst))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180544076))
true-branch200308180544077
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (goto (reg continue))
false-branch200308180544076
  (comment memq)
  (assign proc (op lookup-variable-value) (const memq) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805440712))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805440711))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544079))
compound-branch2003081805440710
  (assign continue (label after-call200308180544078))
  (goto (label compound-apply-compiled))
compiled-branch2003081805440711
  (assign continue (label after-call200308180544078))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544079
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805440712
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544078
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805440717))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805440716))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805440714))
compound-branch2003081805440715
  (goto (label compound-apply-compiled))
compiled-branch2003081805440716
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805440714
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2003081805440717
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2003081805440713
after-if200308180544075
after-if200308180544072
after-lambda200308180544070
  (comment (define (memq obj lst) (if (null? lst) false (if (eq? obj (car lst)) lst (memq obj (cdr lst))))))
  (perform (op define-variable!) (const memq) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (obj lst) (if (null? lst) false (if (eqv? obj (car lst)) lst (memv obj (cdr lst))))))
  (assign val (op make-compiled-procedure) (label entry200308180544001) (reg env))
  (goto (label after-lambda200308180544000))
  (comment (lambda (obj lst) (if (null? lst) false (if (eqv? obj (car lst)) lst (memv obj (cdr lst))))))
entry200308180544001
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj lst)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544034))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544033))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544031))
compound-branch200308180544032
  (assign continue (label after-call200308180544030))
  (goto (label compound-apply-compiled))
compiled-branch200308180544033
  (assign continue (label after-call200308180544030))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544031
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544034
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544030
  (restore env)
  (restore continue)
  (comment (if (null? lst) false (if (eqv? obj (car lst)) lst (memv obj (cdr lst)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180544003))
true-branch200308180544004
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200308180544003
  (save continue)
  (save env)
  (comment eqv?)
  (assign proc (op lookup-variable-value) (const eqv?) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544024))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544023))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544021))
compound-branch200308180544022
  (assign continue (label after-call200308180544020))
  (goto (label compound-apply-compiled))
compiled-branch200308180544023
  (assign continue (label after-call200308180544020))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544021
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544024
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544020
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544029))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544028))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544026))
compound-branch200308180544027
  (assign continue (label after-call200308180544025))
  (goto (label compound-apply-compiled))
compiled-branch200308180544028
  (assign continue (label after-call200308180544025))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544026
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180544029
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544025
  (restore env)
  (restore continue)
  (comment (if (eqv? obj (car lst)) lst (memv obj (cdr lst))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180544006))
true-branch200308180544007
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (goto (reg continue))
false-branch200308180544006
  (comment memv)
  (assign proc (op lookup-variable-value) (const memv) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805440012))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805440011))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544009))
compound-branch2003081805440010
  (assign continue (label after-call200308180544008))
  (goto (label compound-apply-compiled))
compiled-branch2003081805440011
  (assign continue (label after-call200308180544008))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544009
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805440012
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180544008
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180544014))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180544013))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180544011))
compound-branch200308180544012
  (goto (label compound-apply-compiled))
compiled-branch200308180544013
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180544011
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180544014
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180544010
after-if200308180544005
after-if200308180544002
after-lambda200308180544000
  (comment (define (memv obj lst) (if (null? lst) false (if (eqv? obj (car lst)) lst (memv obj (cdr lst))))))
  (perform (op define-variable!) (const memv) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (obj lst) (if (null? lst) false (if (equal? obj (car lst)) lst (member obj (cdr lst))))))
  (assign val (op make-compiled-procedure) (label entry200308180543541) (reg env))
  (goto (label after-lambda200308180543540))
  (comment (lambda (obj lst) (if (null? lst) false (if (equal? obj (car lst)) lst (member obj (cdr lst))))))
entry200308180543541
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj lst)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543574))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543573))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543571))
compound-branch200308180543572
  (assign continue (label after-call200308180543570))
  (goto (label compound-apply-compiled))
compiled-branch200308180543573
  (assign continue (label after-call200308180543570))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543571
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543574
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543570
  (restore env)
  (restore continue)
  (comment (if (null? lst) false (if (equal? obj (car lst)) lst (member obj (cdr lst)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180543543))
true-branch200308180543544
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200308180543543
  (save continue)
  (save env)
  (comment equal?)
  (assign proc (op lookup-variable-value) (const equal?) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543554))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543553))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543551))
compound-branch200308180543552
  (assign continue (label after-call200308180543550))
  (goto (label compound-apply-compiled))
compiled-branch200308180543553
  (assign continue (label after-call200308180543550))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543551
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543554
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543550
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543564))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543563))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543561))
compound-branch200308180543562
  (assign continue (label after-call200308180543560))
  (goto (label compound-apply-compiled))
compiled-branch200308180543563
  (assign continue (label after-call200308180543560))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543561
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543564
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543560
  (restore env)
  (restore continue)
  (comment (if (equal? obj (car lst)) lst (member obj (cdr lst))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180543546))
true-branch200308180543547
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (goto (reg continue))
false-branch200308180543546
  (comment member)
  (assign proc (op lookup-variable-value) (const member) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805435412))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805435411))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543549))
compound-branch2003081805435410
  (assign continue (label after-call200308180543548))
  (goto (label compound-apply-compiled))
compiled-branch2003081805435411
  (assign continue (label after-call200308180543548))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543549
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805435412
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543548
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805435417))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805435416))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805435414))
compound-branch2003081805435415
  (goto (label compound-apply-compiled))
compiled-branch2003081805435416
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805435414
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2003081805435417
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2003081805435413
after-if200308180543545
after-if200308180543542
after-lambda200308180543540
  (comment (define (member obj lst) (if (null? lst) false (if (equal? obj (car lst)) lst (member obj (cdr lst))))))
  (perform (op define-variable!) (const member) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (obj alist) (if (null? alist) false (let ((pair (car alist))) (if (eq? obj (car pair)) pair (assq obj (cdr alist)))))))
  (assign val (op make-compiled-procedure) (label entry200308180543461) (reg env))
  (goto (label after-lambda200308180543460))
  (comment (lambda (obj alist) (if (null? alist) false (let ((pair (car alist))) (if (eq? obj (car pair)) pair (assq obj (cdr alist)))))))
entry200308180543461
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj alist)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543509))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543508))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543506))
compound-branch200308180543507
  (assign continue (label after-call200308180543505))
  (goto (label compound-apply-compiled))
compiled-branch200308180543508
  (assign continue (label after-call200308180543505))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543506
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543509
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543505
  (restore env)
  (restore continue)
  (comment (if (null? alist) false (let ((pair (car alist))) (if (eq? obj (car pair)) pair (assq obj (cdr alist))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180543463))
true-branch200308180543464
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200308180543463
  (comment (lambda (pair) (if (eq? obj (car pair)) pair (assq obj (cdr alist)))))
  (assign proc (op make-compiled-procedure) (label entry2003081805434611) (reg env))
  (goto (label after-lambda2003081805434610))
  (comment (lambda (pair) (if (eq? obj (car pair)) pair (assq obj (cdr alist)))))
entry2003081805434611
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (pair)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment pair)
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543484))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543483))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543481))
compound-branch200308180543482
  (assign continue (label after-call200308180543480))
  (goto (label compound-apply-compiled))
compiled-branch200308180543483
  (assign continue (label after-call200308180543480))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543481
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543484
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543480
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543494))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543493))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543491))
compound-branch200308180543492
  (assign continue (label after-call200308180543490))
  (goto (label compound-apply-compiled))
compiled-branch200308180543493
  (assign continue (label after-call200308180543490))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543491
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543494
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543490
  (restore env)
  (restore continue)
  (comment (if (eq? obj (car pair)) pair (assq obj (cdr alist))))
  (test (op false?) (reg val))
  (branch (label false-branch2003081805434613))
true-branch2003081805434614
  (comment pair)
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (goto (reg continue))
false-branch2003081805434613
  (comment assq)
  (assign proc (op lookup-variable-value) (const assq) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805434619))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805434618))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805434616))
compound-branch2003081805434617
  (assign continue (label after-call2003081805434615))
  (goto (label compound-apply-compiled))
compiled-branch2003081805434618
  (assign continue (label after-call2003081805434615))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805434616
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805434619
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003081805434615
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543474))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543473))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543471))
compound-branch200308180543472
  (goto (label compound-apply-compiled))
compiled-branch200308180543473
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543471
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180543474
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180543470
after-if2003081805434612
after-lambda2003081805434610
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543469))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543468))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543466))
compound-branch200308180543467
  (assign continue (label after-call200308180543465))
  (goto (label compound-apply-compiled))
compiled-branch200308180543468
  (assign continue (label after-call200308180543465))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543466
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543469
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543465
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543504))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543503))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543501))
compound-branch200308180543502
  (goto (label compound-apply-compiled))
compiled-branch200308180543503
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543501
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180543504
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180543500
after-if200308180543462
after-lambda200308180543460
  (comment (define (assq obj alist) (if (null? alist) false (let ((pair (car alist))) (if (eq? obj (car pair)) pair (assq obj (cdr alist)))))))
  (perform (op define-variable!) (const assq) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (obj alist) (if (null? alist) false (let ((pair (car alist))) (if (eqv? obj (car pair)) pair (assv obj (cdr alist)))))))
  (assign val (op make-compiled-procedure) (label entry200308180543381) (reg env))
  (goto (label after-lambda200308180543380))
  (comment (lambda (obj alist) (if (null? alist) false (let ((pair (car alist))) (if (eqv? obj (car pair)) pair (assv obj (cdr alist)))))))
entry200308180543381
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj alist)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543434))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543433))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543431))
compound-branch200308180543432
  (assign continue (label after-call200308180543430))
  (goto (label compound-apply-compiled))
compiled-branch200308180543433
  (assign continue (label after-call200308180543430))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543431
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543434
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543430
  (restore env)
  (restore continue)
  (comment (if (null? alist) false (let ((pair (car alist))) (if (eqv? obj (car pair)) pair (assv obj (cdr alist))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180543383))
true-branch200308180543384
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200308180543383
  (comment (lambda (pair) (if (eqv? obj (car pair)) pair (assv obj (cdr alist)))))
  (assign proc (op make-compiled-procedure) (label entry200308180543391) (reg env))
  (goto (label after-lambda200308180543390))
  (comment (lambda (pair) (if (eqv? obj (car pair)) pair (assv obj (cdr alist)))))
entry200308180543391
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (pair)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment eqv?)
  (assign proc (op lookup-variable-value) (const eqv?) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment pair)
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543404))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543403))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543401))
compound-branch200308180543402
  (assign continue (label after-call200308180543400))
  (goto (label compound-apply-compiled))
compiled-branch200308180543403
  (assign continue (label after-call200308180543400))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543401
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543404
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543400
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543414))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543413))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543411))
compound-branch200308180543412
  (assign continue (label after-call200308180543410))
  (goto (label compound-apply-compiled))
compiled-branch200308180543413
  (assign continue (label after-call200308180543410))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543411
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543414
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543410
  (restore env)
  (restore continue)
  (comment (if (eqv? obj (car pair)) pair (assv obj (cdr alist))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180543393))
true-branch200308180543394
  (comment pair)
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (goto (reg continue))
false-branch200308180543393
  (comment assv)
  (assign proc (op lookup-variable-value) (const assv) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543399))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543398))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543396))
compound-branch200308180543397
  (assign continue (label after-call200308180543395))
  (goto (label compound-apply-compiled))
compiled-branch200308180543398
  (assign continue (label after-call200308180543395))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543396
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543399
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543395
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805433914))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805433913))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805433911))
compound-branch2003081805433912
  (goto (label compound-apply-compiled))
compiled-branch2003081805433913
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805433911
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2003081805433914
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2003081805433910
after-if200308180543392
after-lambda200308180543390
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543389))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543388))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543386))
compound-branch200308180543387
  (assign continue (label after-call200308180543385))
  (goto (label compound-apply-compiled))
compiled-branch200308180543388
  (assign continue (label after-call200308180543385))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543386
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543389
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543385
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543424))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543423))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543421))
compound-branch200308180543422
  (goto (label compound-apply-compiled))
compiled-branch200308180543423
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543421
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180543424
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180543420
after-if200308180543382
after-lambda200308180543380
  (comment (define (assv obj alist) (if (null? alist) false (let ((pair (car alist))) (if (eqv? obj (car pair)) pair (assv obj (cdr alist)))))))
  (perform (op define-variable!) (const assv) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (obj alist) (if (null? alist) false (let ((pair (car alist))) (if (equal? obj (car pair)) pair (assoc obj (cdr alist)))))))
  (assign val (op make-compiled-procedure) (label entry200308180543311) (reg env))
  (goto (label after-lambda200308180543310))
  (comment (lambda (obj alist) (if (null? alist) false (let ((pair (car alist))) (if (equal? obj (car pair)) pair (assoc obj (cdr alist)))))))
entry200308180543311
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj alist)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543354))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543353))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543351))
compound-branch200308180543352
  (assign continue (label after-call200308180543350))
  (goto (label compound-apply-compiled))
compiled-branch200308180543353
  (assign continue (label after-call200308180543350))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543351
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543354
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543350
  (restore env)
  (restore continue)
  (comment (if (null? alist) false (let ((pair (car alist))) (if (equal? obj (car pair)) pair (assoc obj (cdr alist))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180543313))
true-branch200308180543314
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200308180543313
  (comment (lambda (pair) (if (equal? obj (car pair)) pair (assoc obj (cdr alist)))))
  (assign proc (op make-compiled-procedure) (label entry2003081805433111) (reg env))
  (goto (label after-lambda2003081805433110))
  (comment (lambda (pair) (if (equal? obj (car pair)) pair (assoc obj (cdr alist)))))
entry2003081805433111
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (pair)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment equal?)
  (assign proc (op lookup-variable-value) (const equal?) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment pair)
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543334))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543333))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543331))
compound-branch200308180543332
  (assign continue (label after-call200308180543330))
  (goto (label compound-apply-compiled))
compiled-branch200308180543333
  (assign continue (label after-call200308180543330))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543331
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543334
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543330
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543339))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543338))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543336))
compound-branch200308180543337
  (assign continue (label after-call200308180543335))
  (goto (label compound-apply-compiled))
compiled-branch200308180543338
  (assign continue (label after-call200308180543335))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543336
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543339
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543335
  (restore env)
  (restore continue)
  (comment (if (equal? obj (car pair)) pair (assoc obj (cdr alist))))
  (test (op false?) (reg val))
  (branch (label false-branch2003081805433113))
true-branch2003081805433114
  (comment pair)
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (goto (reg continue))
false-branch2003081805433113
  (comment assoc)
  (assign proc (op lookup-variable-value) (const assoc) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805433119))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805433118))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805433116))
compound-branch2003081805433117
  (assign continue (label after-call2003081805433115))
  (goto (label compound-apply-compiled))
compiled-branch2003081805433118
  (assign continue (label after-call2003081805433115))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805433116
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805433119
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003081805433115
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543324))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543323))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543321))
compound-branch200308180543322
  (goto (label compound-apply-compiled))
compiled-branch200308180543323
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543321
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180543324
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180543320
after-if2003081805433112
after-lambda2003081805433110
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543319))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543318))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543316))
compound-branch200308180543317
  (assign continue (label after-call200308180543315))
  (goto (label compound-apply-compiled))
compiled-branch200308180543318
  (assign continue (label after-call200308180543315))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543316
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543319
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543315
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543344))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543343))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543341))
compound-branch200308180543342
  (goto (label compound-apply-compiled))
compiled-branch200308180543343
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543341
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180543344
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180543340
after-if200308180543312
after-lambda200308180543310
  (comment (define (assoc obj alist) (if (null? alist) false (let ((pair (car alist))) (if (equal? obj (car pair)) pair (assoc obj (cdr alist)))))))
  (perform (op define-variable!) (const assoc) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (proc seq) (if (null? seq) (quote ()) (cons (proc (car seq)) (simplemap proc (cdr seq))))))
  (assign val (op make-compiled-procedure) (label entry200308180543251) (reg env))
  (goto (label after-lambda200308180543250))
  (comment (lambda (proc seq) (if (null? seq) (quote ()) (cons (proc (car seq)) (simplemap proc (cdr seq))))))
entry200308180543251
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc seq)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543284))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543283))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543281))
compound-branch200308180543282
  (assign continue (label after-call200308180543280))
  (goto (label compound-apply-compiled))
compiled-branch200308180543283
  (assign continue (label after-call200308180543280))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543281
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543284
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543280
  (restore env)
  (restore continue)
  (comment (if (null? seq) (quote ()) (cons (proc (car seq)) (simplemap proc (cdr seq)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180543253))
true-branch200308180543254
  (comment (quote ()))
  (assign val  (const ()))
  (goto (reg continue))
false-branch200308180543253
  (comment cons)
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment simplemap)
  (assign proc (op lookup-variable-value) (const simplemap) (reg env))
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543259))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543258))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543256))
compound-branch200308180543257
  (assign continue (label after-call200308180543255))
  (goto (label compound-apply-compiled))
compiled-branch200308180543258
  (assign continue (label after-call200308180543255))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543256
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543259
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543255
  (assign argl (op list) (reg val))
  (restore env)
  (comment proc)
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543264))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543263))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543261))
compound-branch200308180543262
  (assign continue (label after-call200308180543260))
  (goto (label compound-apply-compiled))
compiled-branch200308180543263
  (assign continue (label after-call200308180543260))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543261
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543264
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543260
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment proc)
  (assign proc (op lookup-variable-value) (const proc) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543269))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543268))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543266))
compound-branch200308180543267
  (assign continue (label after-call200308180543265))
  (goto (label compound-apply-compiled))
compiled-branch200308180543268
  (assign continue (label after-call200308180543265))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543266
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543269
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543265
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543274))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543273))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543271))
compound-branch200308180543272
  (assign continue (label after-call200308180543270))
  (goto (label compound-apply-compiled))
compiled-branch200308180543273
  (assign continue (label after-call200308180543270))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543271
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543274
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543270
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543279))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543278))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543276))
compound-branch200308180543277
  (goto (label compound-apply-compiled))
compiled-branch200308180543278
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543276
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180543279
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180543275
after-if200308180543252
after-lambda200308180543250
  (comment (define (simplemap proc seq) (if (null? seq) (quote ()) (cons (proc (car seq)) (simplemap proc (cdr seq))))))
  (perform (op define-variable!) (const simplemap) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (seqs) (if (null? seqs) 0 (call-with-current-continuation (lambda (break) (define (iter seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))) (iter seqs (length (car seqs))))))))
  (assign val (op make-compiled-procedure) (label entry200308180543101) (reg env))
  (goto (label after-lambda200308180543100))
  (comment (lambda (seqs) (if (null? seqs) 0 (call-with-current-continuation (lambda (break) (define (iter seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))) (iter seqs (length (car seqs))))))))
entry200308180543101
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seqs)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543214))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543213))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543211))
compound-branch200308180543212
  (assign continue (label after-call200308180543210))
  (goto (label compound-apply-compiled))
compiled-branch200308180543213
  (assign continue (label after-call200308180543210))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543211
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543214
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543210
  (restore env)
  (restore continue)
  (comment (if (null? seqs) 0 (call-with-current-continuation (lambda (break) (define (iter seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))) (iter seqs (length (car seqs)))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180543103))
true-branch200308180543104
  (comment 0)
  (assign val  (const 0))
  (goto (reg continue))
false-branch200308180543103
  (comment call-with-current-continuation)
  (assign proc (op lookup-variable-value) (const call-with-current-continuation) (reg env))
  (comment (lambda (break) (define (iter seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))) (iter seqs (length (car seqs)))))
  (assign val (op make-compiled-procedure) (label entry200308180543106) (reg env))
  (goto (label after-lambda200308180543105))
  (comment (lambda (break) (define (iter seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))) (iter seqs (length (car seqs)))))
entry200308180543106
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (break)) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length))))) (iter seqs (length (car seqs)))))
  (assign proc (op make-compiled-procedure) (label entry200308180543108) (reg env))
  (goto (label after-lambda200308180543107))
  (comment (lambda (iter) (set! iter (lambda (seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length))))) (iter seqs (length (car seqs)))))
entry200308180543108
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))))
  (assign val (op make-compiled-procedure) (label entry200308180543121) (reg env))
  (goto (label after-lambda200308180543120))
  (comment (lambda (seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))))
entry200308180543121
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq initial-length)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543174))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543173))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543171))
compound-branch200308180543172
  (assign continue (label after-call200308180543170))
  (goto (label compound-apply-compiled))
compiled-branch200308180543173
  (assign continue (label after-call200308180543170))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543171
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543174
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543170
  (restore env)
  (restore continue)
  (comment (if (null? seq) initial-length (if (not (= (length (car seq)) initial-length)) (break false) (iter (cdr seq) initial-length))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180543123))
true-branch200308180543124
  (comment initial-length)
  (assign val (op lookup-variable-value) (const initial-length) (reg env))
  (goto (reg continue))
false-branch200308180543123
  (save continue)
  (save env)
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (save proc)
  (comment =)
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (save proc)
  (comment initial-length)
  (assign val (op lookup-variable-value) (const initial-length) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment length)
  (assign proc (op lookup-variable-value) (const length) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543144))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543143))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543141))
compound-branch200308180543142
  (assign continue (label after-call200308180543140))
  (goto (label compound-apply-compiled))
compiled-branch200308180543143
  (assign continue (label after-call200308180543140))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543141
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543144
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543140
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543149))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543148))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543146))
compound-branch200308180543147
  (assign continue (label after-call200308180543145))
  (goto (label compound-apply-compiled))
compiled-branch200308180543148
  (assign continue (label after-call200308180543145))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543146
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543149
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543145
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543154))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543153))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543151))
compound-branch200308180543152
  (assign continue (label after-call200308180543150))
  (goto (label compound-apply-compiled))
compiled-branch200308180543153
  (assign continue (label after-call200308180543150))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543151
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543154
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543150
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543164))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543163))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543161))
compound-branch200308180543162
  (assign continue (label after-call200308180543160))
  (goto (label compound-apply-compiled))
compiled-branch200308180543163
  (assign continue (label after-call200308180543160))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543161
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543164
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543160
  (restore env)
  (restore continue)
  (comment (if (not (= (length (car seq)) initial-length)) (break false) (iter (cdr seq) initial-length)))
  (test (op false?) (reg val))
  (branch (label false-branch200308180543126))
true-branch200308180543127
  (comment break)
  (assign proc (op lookup-variable-value) (const break) (reg env))
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543139))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543138))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543136))
compound-branch200308180543137
  (goto (label compound-apply-compiled))
compiled-branch200308180543138
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543136
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180543139
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180543135
false-branch200308180543126
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (comment initial-length)
  (assign val (op lookup-variable-value) (const initial-length) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805431212))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805431211))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543129))
compound-branch2003081805431210
  (assign continue (label after-call200308180543128))
  (goto (label compound-apply-compiled))
compiled-branch2003081805431211
  (assign continue (label after-call200308180543128))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543129
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805431212
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543128
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543134))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543133))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543131))
compound-branch200308180543132
  (goto (label compound-apply-compiled))
compiled-branch200308180543133
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543131
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180543134
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180543130
after-if200308180543125
after-if200308180543122
after-lambda200308180543120
  (comment (set! iter (lambda (seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment length)
  (assign proc (op lookup-variable-value) (const length) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805431013))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805431012))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805431010))
compound-branch2003081805431011
  (assign continue (label after-call200308180543109))
  (goto (label compound-apply-compiled))
compiled-branch2003081805431012
  (assign continue (label after-call200308180543109))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805431010
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805431013
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543109
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543114))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543113))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543111))
compound-branch200308180543112
  (assign continue (label after-call200308180543110))
  (goto (label compound-apply-compiled))
compiled-branch200308180543113
  (assign continue (label after-call200308180543110))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543111
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543114
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543110
  (assign argl (op list) (reg val))
  (restore env)
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543119))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543118))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543116))
compound-branch200308180543117
  (goto (label compound-apply-compiled))
compiled-branch200308180543118
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543116
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180543119
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180543115
after-lambda200308180543107
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543194))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543193))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543191))
compound-branch200308180543192
  (goto (label compound-apply-compiled))
compiled-branch200308180543193
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543191
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180543194
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180543190
after-lambda200308180543105
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543204))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543203))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543201))
compound-branch200308180543202
  (goto (label compound-apply-compiled))
compiled-branch200308180543203
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543201
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180543204
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180543200
after-if200308180543102
after-lambda200308180543100
  (comment (define (lengths-equal seqs) (if (null? seqs) 0 (call-with-current-continuation (lambda (break) (define (iter seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))) (iter seqs (length (car seqs))))))))
  (perform (op define-variable!) (const lengths-equal) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (proc len seqs) (if (= len 0) (quote ()) (let ((heads (simplemap car seqs)) (tails (simplemap cdr seqs))) (cons (apply proc heads) (apply map1 (list proc (- len 1) tails)))))))
  (assign val (op make-compiled-procedure) (label entry200308180543011) (reg env))
  (goto (label after-lambda200308180543010))
  (comment (lambda (proc len seqs) (if (= len 0) (quote ()) (let ((heads (simplemap car seqs)) (tails (simplemap cdr seqs))) (cons (apply proc heads) (apply map1 (list proc (- len 1) tails)))))))
entry200308180543011
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc len seqs)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment =)
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (comment len)
  (assign val (op lookup-variable-value) (const len) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543074))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543073))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543071))
compound-branch200308180543072
  (assign continue (label after-call200308180543070))
  (goto (label compound-apply-compiled))
compiled-branch200308180543073
  (assign continue (label after-call200308180543070))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543071
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543074
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543070
  (restore env)
  (restore continue)
  (comment (if (= len 0) (quote ()) (let ((heads (simplemap car seqs)) (tails (simplemap cdr seqs))) (cons (apply proc heads) (apply map1 (list proc (- len 1) tails))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180543013))
true-branch200308180543014
  (comment (quote ()))
  (assign val  (const ()))
  (goto (reg continue))
false-branch200308180543013
  (comment (lambda (heads tails) (cons (apply proc heads) (apply map1 (list proc (- len 1) tails)))))
  (assign proc (op make-compiled-procedure) (label entry200308180543026) (reg env))
  (goto (label after-lambda200308180543025))
  (comment (lambda (heads tails) (cons (apply proc heads) (apply map1 (list proc (- len 1) tails)))))
entry200308180543026
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (heads tails)) (reg argl) (reg env))
  (comment cons)
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment apply)
  (assign proc (op lookup-variable-value) (const apply) (reg env))
  (save proc)
  (save env)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment tails)
  (assign val (op lookup-variable-value) (const tails) (reg env))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment -)
  (assign proc (op lookup-variable-value) (const -) (reg env))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (comment len)
  (assign val (op lookup-variable-value) (const len) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805430211))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805430210))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543028))
compound-branch200308180543029
  (assign continue (label after-call200308180543027))
  (goto (label compound-apply-compiled))
compiled-branch2003081805430210
  (assign continue (label after-call200308180543027))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543028
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805430211
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543027
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (comment proc)
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543034))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543033))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543031))
compound-branch200308180543032
  (assign continue (label after-call200308180543030))
  (goto (label compound-apply-compiled))
compiled-branch200308180543033
  (assign continue (label after-call200308180543030))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543031
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543034
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543030
  (assign argl (op list) (reg val))
  (restore env)
  (comment map1)
  (assign val (op lookup-variable-value) (const map1) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543044))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543043))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543041))
compound-branch200308180543042
  (assign continue (label after-call200308180543040))
  (goto (label compound-apply-compiled))
compiled-branch200308180543043
  (assign continue (label after-call200308180543040))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543041
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543044
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543040
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment apply)
  (assign proc (op lookup-variable-value) (const apply) (reg env))
  (comment heads)
  (assign val (op lookup-variable-value) (const heads) (reg env))
  (assign argl (op list) (reg val))
  (comment proc)
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543054))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543053))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543051))
compound-branch200308180543052
  (assign continue (label after-call200308180543050))
  (goto (label compound-apply-compiled))
compiled-branch200308180543053
  (assign continue (label after-call200308180543050))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543051
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543054
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543050
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543059))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543058))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543056))
compound-branch200308180543057
  (goto (label compound-apply-compiled))
compiled-branch200308180543058
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543056
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180543059
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180543055
after-lambda200308180543025
  (save continue)
  (save proc)
  (save env)
  (comment simplemap)
  (assign proc (op lookup-variable-value) (const simplemap) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (comment cdr)
  (assign val (op lookup-variable-value) (const cdr) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543019))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543018))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543016))
compound-branch200308180543017
  (assign continue (label after-call200308180543015))
  (goto (label compound-apply-compiled))
compiled-branch200308180543018
  (assign continue (label after-call200308180543015))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543016
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543019
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543015
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment simplemap)
  (assign proc (op lookup-variable-value) (const simplemap) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (comment car)
  (assign val (op lookup-variable-value) (const car) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543024))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543023))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543021))
compound-branch200308180543022
  (assign continue (label after-call200308180543020))
  (goto (label compound-apply-compiled))
compiled-branch200308180543023
  (assign continue (label after-call200308180543020))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543021
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180543024
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180543020
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180543064))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180543063))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180543061))
compound-branch200308180543062
  (goto (label compound-apply-compiled))
compiled-branch200308180543063
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180543061
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180543064
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180543060
after-if200308180543012
after-lambda200308180543010
  (comment (define (map1 proc len seqs) (if (= len 0) (quote ()) (let ((heads (simplemap car seqs)) (tails (simplemap cdr seqs))) (cons (apply proc heads) (apply map1 (list proc (- len 1) tails)))))))
  (perform (op define-variable!) (const map1) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (proc . seqs) (let ((len (lengths-equal seqs))) (cond ((not len) (begin (display "map: length of the lists must be equal") (newline))) (else (map1 proc len seqs))))))
  (assign val (op make-compiled-procedure) (label entry200308180542551) (reg env))
  (goto (label after-lambda200308180542550))
  (comment (lambda (proc . seqs) (let ((len (lengths-equal seqs))) (cond ((not len) (begin (display "map: length of the lists must be equal") (newline))) (else (map1 proc len seqs))))))
entry200308180542551
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc . seqs)) (reg argl) (reg env))
  (comment (lambda (len) (cond ((not len) (begin (display "map: length of the lists must be equal") (newline))) (else (map1 proc len seqs)))))
  (assign proc (op make-compiled-procedure) (label entry200308180542566) (reg env))
  (goto (label after-lambda200308180542565))
  (comment (lambda (len) (cond ((not len) (begin (display "map: length of the lists must be equal") (newline))) (else (map1 proc len seqs)))))
entry200308180542566
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (len)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (comment len)
  (assign val (op lookup-variable-value) (const len) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180542589))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180542588))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180542586))
compound-branch200308180542587
  (assign continue (label after-call200308180542585))
  (goto (label compound-apply-compiled))
compiled-branch200308180542588
  (assign continue (label after-call200308180542585))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180542586
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180542589
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180542585
  (restore env)
  (restore continue)
  (comment (if (not len) (begin (display "map: length of the lists must be equal") (newline)) (map1 proc len seqs)))
  (test (op false?) (reg val))
  (branch (label false-branch200308180542568))
true-branch200308180542569
  (save continue)
  (save env)
  (comment display)
  (assign proc (op lookup-variable-value) (const display) (reg env))
  (comment "map: length of the lists must be equal")
  (assign val  (const "map: length of the lists must be equal"))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180542584))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180542583))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180542581))
compound-branch200308180542582
  (assign continue (label after-call200308180542580))
  (goto (label compound-apply-compiled))
compiled-branch200308180542583
  (assign continue (label after-call200308180542580))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180542581
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180542584
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180542580
  (restore env)
  (restore continue)
  (comment newline)
  (assign proc (op lookup-variable-value) (const newline) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180542574))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180542573))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180542571))
compound-branch200308180542572
  (goto (label compound-apply-compiled))
compiled-branch200308180542573
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180542571
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180542574
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180542570
false-branch200308180542568
  (comment map1)
  (assign proc (op lookup-variable-value) (const map1) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (comment len)
  (assign val (op lookup-variable-value) (const len) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment proc)
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805425614))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805425613))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081805425611))
compound-branch2003081805425612
  (goto (label compound-apply-compiled))
compiled-branch2003081805425613
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081805425611
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2003081805425614
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2003081805425610
after-if200308180542567
after-lambda200308180542565
  (save continue)
  (save proc)
  (comment lengths-equal)
  (assign proc (op lookup-variable-value) (const lengths-equal) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180542564))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180542563))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180542561))
compound-branch200308180542562
  (assign continue (label after-call200308180542560))
  (goto (label compound-apply-compiled))
compiled-branch200308180542563
  (assign continue (label after-call200308180542560))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180542561
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180542564
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180542560
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180542594))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180542593))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180542591))
compound-branch200308180542592
  (goto (label compound-apply-compiled))
compiled-branch200308180542593
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180542591
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180542594
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180542590
after-lambda200308180542550
  (comment (define (map proc . seqs) (let ((len (lengths-equal seqs))) (cond ((not len) (begin (display "map: length of the lists must be equal") (newline))) (else (map1 proc len seqs))))))
  (perform (op define-variable!) (const map) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (proc seq) (if (not (null? seq)) (begin (proc (car seq)) (for-each proc (cdr seq))))))
  (assign val (op make-compiled-procedure) (label entry200308180542511) (reg env))
  (goto (label after-lambda200308180542510))
  (comment (lambda (proc seq) (if (not (null? seq)) (begin (proc (car seq)) (for-each proc (cdr seq))))))
entry200308180542511
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc seq)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (save proc)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180542539))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180542538))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180542536))
compound-branch200308180542537
  (assign continue (label after-call200308180542535))
  (goto (label compound-apply-compiled))
compiled-branch200308180542538
  (assign continue (label after-call200308180542535))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180542536
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180542539
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180542535
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180542544))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180542543))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180542541))
compound-branch200308180542542
  (assign continue (label after-call200308180542540))
  (goto (label compound-apply-compiled))
compiled-branch200308180542543
  (assign continue (label after-call200308180542540))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180542541
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180542544
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180542540
  (restore env)
  (restore continue)
  (comment (if (not (null? seq)) (begin (proc (car seq)) (for-each proc (cdr seq)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180542513))
true-branch200308180542514
  (save continue)
  (save env)
  (comment proc)
  (assign proc (op lookup-variable-value) (const proc) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180542529))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180542528))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180542526))
compound-branch200308180542527
  (assign continue (label after-call200308180542525))
  (goto (label compound-apply-compiled))
compiled-branch200308180542528
  (assign continue (label after-call200308180542525))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180542526
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180542529
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180542525
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180542534))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180542533))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180542531))
compound-branch200308180542532
  (assign continue (label after-call200308180542530))
  (goto (label compound-apply-compiled))
compiled-branch200308180542533
  (assign continue (label after-call200308180542530))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180542531
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180542534
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180542530
  (restore env)
  (restore continue)
  (comment for-each)
  (assign proc (op lookup-variable-value) (const for-each) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180542519))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180542518))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180542516))
compound-branch200308180542517
  (assign continue (label after-call200308180542515))
  (goto (label compound-apply-compiled))
compiled-branch200308180542518
  (assign continue (label after-call200308180542515))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180542516
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308180542519
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180542515
  (assign argl (op list) (reg val))
  (restore env)
  (comment proc)
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180542524))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180542523))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180542521))
compound-branch200308180542522
  (goto (label compound-apply-compiled))
compiled-branch200308180542523
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180542521
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180542524
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180542520
false-branch200308180542513
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if200308180542512
after-lambda200308180542510
  (comment (define (for-each proc seq) (if (not (null? seq)) (begin (proc (car seq)) (for-each proc (cdr seq))))))
  (perform (op define-variable!) (const for-each) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (delayed-object) (delayed-object)))
  (assign val (op make-compiled-procedure) (label entry200308180542501) (reg env))
  (goto (label after-lambda200308180542500))
  (comment (lambda (delayed-object) (delayed-object)))
entry200308180542501
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (delayed-object)) (reg argl) (reg env))
  (comment delayed-object)
  (assign proc (op lookup-variable-value) (const delayed-object) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180542506))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180542505))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180542503))
compound-branch200308180542504
  (goto (label compound-apply-compiled))
compiled-branch200308180542505
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180542503
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180542506
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180542502
after-lambda200308180542500
  (comment (define (force delayed-object) (delayed-object)))
  (perform (op define-variable!) (const force) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (proc) (let ((result-ready? false) (result false)) (lambda () (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result))))))))
  (assign val (op make-compiled-procedure) (label entry200308180542461) (reg env))
  (goto (label after-lambda200308180542460))
  (comment (lambda (proc) (let ((result-ready? false) (result false)) (lambda () (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result))))))))
entry200308180542461
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc)) (reg argl) (reg env))
  (comment (lambda (result-ready? result) (lambda () (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result)))))))
  (assign proc (op make-compiled-procedure) (label entry200308180542471) (reg env))
  (goto (label after-lambda200308180542470))
  (comment (lambda (result-ready? result) (lambda () (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result)))))))
entry200308180542471
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (result-ready? result)) (reg argl) (reg env))
  (comment (lambda () (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result))))))
  (assign val (op make-compiled-procedure) (label entry200308180542473) (reg env))
  (goto (reg continue))
  (comment (lambda () (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result))))))
entry200308180542473
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const ()) (reg argl) (reg env))
  (comment result-ready?)
  (assign val (op lookup-variable-value) (const result-ready?) (reg env))
  (comment (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308180542475))
true-branch200308180542476
  (comment result)
  (assign val (op lookup-variable-value) (const result) (reg env))
  (goto (reg continue))
false-branch200308180542475
  (comment (lambda (x) (if result-ready? result (begin (set! result-ready? true) (set! result x) result))))
  (assign proc (op make-compiled-procedure) (label entry2003081805424713) (reg env))
  (goto (label after-lambda2003081805424712))
  (comment (lambda (x) (if result-ready? result (begin (set! result-ready? true) (set! result x) result))))
entry2003081805424713
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (x)) (reg argl) (reg env))
  (comment result-ready?)
  (assign val (op lookup-variable-value) (const result-ready?) (reg env))
  (comment (if result-ready? result (begin (set! result-ready? true) (set! result x) result)))
  (test (op false?) (reg val))
  (branch (label false-branch2003081805424715))
true-branch2003081805424716
  (comment result)
  (assign val (op lookup-variable-value) (const result) (reg env))
  (goto (reg continue))
false-branch2003081805424715
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (comment (set! result-ready? true))
  (perform (op set-variable-value!) (const result-ready?) (reg val) (reg env))
  (assign val  (const ok))
  (comment x)
  (assign val (op lookup-variable-value) (const x) (reg env))
  (comment (set! result x))
  (perform (op set-variable-value!) (const result) (reg val) (reg env))
  (assign val  (const ok))
  (comment result)
  (assign val (op lookup-variable-value) (const result) (reg env))
  (goto (reg continue))
after-if2003081805424714
after-lambda2003081805424712
  (save continue)
  (save proc)
  (comment proc)
  (assign proc (op lookup-variable-value) (const proc) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003081805424711))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003081805424710))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180542478))
compound-branch200308180542479
  (assign continue (label after-call200308180542477))
  (goto (label compound-apply-compiled))
compiled-branch2003081805424710
  (assign continue (label after-call200308180542477))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180542478
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003081805424711
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308180542477
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180542484))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180542483))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180542481))
compound-branch200308180542482
  (goto (label compound-apply-compiled))
compiled-branch200308180542483
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180542481
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180542484
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180542480
after-if200308180542474
after-lambda200308180542472
after-lambda200308180542470
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (assign argl (op list) (reg val))
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308180542494))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308180542493))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308180542491))
compound-branch200308180542492
  (goto (label compound-apply-compiled))
compiled-branch200308180542493
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308180542491
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308180542494
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308180542490
after-lambda200308180542460
  (comment (define make-promise (lambda (proc) (let ((result-ready? false) (result false)) (lambda () (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result)))))))))
  (perform (op define-variable!) (const make-promise) (reg val) (reg env))
  (assign val  (const ok))
))
