
; This file is generated by the pretty printer
; The needs- and modifies-registers are discarded
(()()
(
  (comment (lambda args (define (iter first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
  (assign val (op make-compiled-procedure) (label entry200402100758391) (reg env))
  (goto (label after-lambda200402100758390))
  (comment (lambda args (define (iter first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
entry200402100758391
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const args) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest)))))) (if (null? args) true (iter (car args) (cdr args)))))
  (assign proc (op make-compiled-procedure) (label entry200402100758393) (reg env))
  (goto (label after-lambda200402100758392))
  (comment (lambda (iter) (set! iter (lambda (first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest)))))) (if (null? args) true (iter (car args) (cdr args)))))
entry200402100758393
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest))))))
  (assign val (op make-compiled-procedure) (label entry200402100758416) (reg env))
  (goto (label after-lambda200402100758415))
  (comment (lambda (first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest))))))
entry200402100758416
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first rest)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758454))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758453))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758451))
compound-branch200402100758452
  (assign continue (label after-call200402100758450))
  (goto (label compound-apply-compiled))
compiled-branch200402100758453
  (assign continue (label after-call200402100758450))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758451
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758454
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758450
  (restore env)
  (restore continue)
  (comment (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest)))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100758418))
true-branch200402100758419
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200402100758418
  (save continue)
  (save env)
  (comment integer-equal)
  (assign proc (op lookup-variable-value) (const integer-equal) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758439))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758438))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758436))
compound-branch200402100758437
  (assign continue (label after-call200402100758435))
  (goto (label compound-apply-compiled))
compiled-branch200402100758438
  (assign continue (label after-call200402100758435))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758436
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758439
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758435
  (assign argl (op list) (reg val))
  (restore env)
  (comment first)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758444))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758443))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758441))
compound-branch200402100758442
  (assign continue (label after-call200402100758440))
  (goto (label compound-apply-compiled))
compiled-branch200402100758443
  (assign continue (label after-call200402100758440))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758441
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758444
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758440
  (restore env)
  (restore continue)
  (comment (if (integer-equal first (car rest)) (iter (car rest) (cdr rest))))
  (test (op false?) (reg val))
  (branch (label false-branch2004021007584111))
true-branch2004021007584112
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758424))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758423))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758421))
compound-branch200402100758422
  (assign continue (label after-call200402100758420))
  (goto (label compound-apply-compiled))
compiled-branch200402100758423
  (assign continue (label after-call200402100758420))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758421
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758424
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758420
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758429))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758428))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758426))
compound-branch200402100758427
  (assign continue (label after-call200402100758425))
  (goto (label compound-apply-compiled))
compiled-branch200402100758428
  (assign continue (label after-call200402100758425))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758426
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758429
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758425
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758434))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758433))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758431))
compound-branch200402100758432
  (goto (label compound-apply-compiled))
compiled-branch200402100758433
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758431
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100758434
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100758430
false-branch2004021007584111
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if2004021007584110
after-if200402100758417
after-lambda200402100758415
  (comment (set! iter (lambda (first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest)))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758414))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758413))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758411))
compound-branch200402100758412
  (assign continue (label after-call200402100758410))
  (goto (label compound-apply-compiled))
compiled-branch200402100758413
  (assign continue (label after-call200402100758410))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758411
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758414
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758410
  (restore env)
  (restore continue)
  (comment (if (null? args) true (iter (car args) (cdr args))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100758395))
true-branch200402100758396
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200402100758395
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007583911))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007583910))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758398))
compound-branch200402100758399
  (assign continue (label after-call200402100758397))
  (goto (label compound-apply-compiled))
compiled-branch2004021007583910
  (assign continue (label after-call200402100758397))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758398
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007583911
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758397
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007583916))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007583915))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007583913))
compound-branch2004021007583914
  (assign continue (label after-call2004021007583912))
  (goto (label compound-apply-compiled))
compiled-branch2004021007583915
  (assign continue (label after-call2004021007583912))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007583913
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007583916
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2004021007583912
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758404))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758403))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758401))
compound-branch200402100758402
  (goto (label compound-apply-compiled))
compiled-branch200402100758403
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758401
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100758404
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100758400
after-if200402100758394
after-lambda200402100758392
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758474))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758473))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758471))
compound-branch200402100758472
  (goto (label compound-apply-compiled))
compiled-branch200402100758473
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758471
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100758474
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100758470
after-lambda200402100758390
  (comment (define (= . args) (define (iter first rest) (if (null? rest) true (if (integer-equal first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
  (perform (op define-variable!) (const =) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda args (define (iter first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
  (assign val (op make-compiled-procedure) (label entry200402100758221) (reg env))
  (goto (label after-lambda200402100758220))
  (comment (lambda args (define (iter first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
entry200402100758221
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const args) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest)))))) (if (null? args) true (iter (car args) (cdr args)))))
  (assign proc (op make-compiled-procedure) (label entry200402100758231) (reg env))
  (goto (label after-lambda200402100758230))
  (comment (lambda (iter) (set! iter (lambda (first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest)))))) (if (null? args) true (iter (car args) (cdr args)))))
entry200402100758231
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest))))))
  (assign val (op make-compiled-procedure) (label entry200402100758251) (reg env))
  (goto (label after-lambda200402100758250))
  (comment (lambda (first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest))))))
entry200402100758251
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first rest)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758289))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758288))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758286))
compound-branch200402100758287
  (assign continue (label after-call200402100758285))
  (goto (label compound-apply-compiled))
compiled-branch200402100758288
  (assign continue (label after-call200402100758285))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758286
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758289
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758285
  (restore env)
  (restore continue)
  (comment (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest)))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100758253))
true-branch200402100758254
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200402100758253
  (save continue)
  (save env)
  (comment integer-less-than)
  (assign proc (op lookup-variable-value) (const integer-less-than) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758274))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758273))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758271))
compound-branch200402100758272
  (assign continue (label after-call200402100758270))
  (goto (label compound-apply-compiled))
compiled-branch200402100758273
  (assign continue (label after-call200402100758270))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758271
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758274
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758270
  (assign argl (op list) (reg val))
  (restore env)
  (comment first)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758284))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758283))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758281))
compound-branch200402100758282
  (assign continue (label after-call200402100758280))
  (goto (label compound-apply-compiled))
compiled-branch200402100758283
  (assign continue (label after-call200402100758280))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758281
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758284
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758280
  (restore env)
  (restore continue)
  (comment (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100758256))
true-branch200402100758257
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758264))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758263))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758261))
compound-branch200402100758262
  (assign continue (label after-call200402100758260))
  (goto (label compound-apply-compiled))
compiled-branch200402100758263
  (assign continue (label after-call200402100758260))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758261
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758264
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758260
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758269))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758268))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758266))
compound-branch200402100758267
  (assign continue (label after-call200402100758265))
  (goto (label compound-apply-compiled))
compiled-branch200402100758268
  (assign continue (label after-call200402100758265))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758266
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758269
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758265
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007582614))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007582613))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007582611))
compound-branch2004021007582612
  (goto (label compound-apply-compiled))
compiled-branch2004021007582613
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007582611
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007582614
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2004021007582610
false-branch200402100758256
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if200402100758255
after-if200402100758252
after-lambda200402100758250
  (comment (set! iter (lambda (first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest)))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758249))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758248))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758246))
compound-branch200402100758247
  (assign continue (label after-call200402100758245))
  (goto (label compound-apply-compiled))
compiled-branch200402100758248
  (assign continue (label after-call200402100758245))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758246
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758249
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758245
  (restore env)
  (restore continue)
  (comment (if (null? args) true (iter (car args) (cdr args))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100758233))
true-branch200402100758234
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200402100758233
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758239))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758238))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758236))
compound-branch200402100758237
  (assign continue (label after-call200402100758235))
  (goto (label compound-apply-compiled))
compiled-branch200402100758238
  (assign continue (label after-call200402100758235))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758236
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758239
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758235
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007582314))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007582313))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007582311))
compound-branch2004021007582312
  (assign continue (label after-call2004021007582310))
  (goto (label compound-apply-compiled))
compiled-branch2004021007582313
  (assign continue (label after-call2004021007582310))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007582311
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007582314
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2004021007582310
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758244))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758243))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758241))
compound-branch200402100758242
  (goto (label compound-apply-compiled))
compiled-branch200402100758243
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758241
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100758244
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100758240
after-if200402100758232
after-lambda200402100758230
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758314))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758313))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758311))
compound-branch200402100758312
  (goto (label compound-apply-compiled))
compiled-branch200402100758313
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758311
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100758314
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100758310
after-lambda200402100758220
  (comment (define (< . args) (define (iter first rest) (if (null? rest) true (if (integer-less-than first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
  (perform (op define-variable!) (const <) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda args (define (iter first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
  (assign val (op make-compiled-procedure) (label entry200402100758061) (reg env))
  (goto (label after-lambda200402100758060))
  (comment (lambda args (define (iter first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
entry200402100758061
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const args) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest)))))) (if (null? args) true (iter (car args) (cdr args)))))
  (assign proc (op make-compiled-procedure) (label entry200402100758071) (reg env))
  (goto (label after-lambda200402100758070))
  (comment (lambda (iter) (set! iter (lambda (first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest)))))) (if (null? args) true (iter (car args) (cdr args)))))
entry200402100758071
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest))))))
  (assign val (op make-compiled-procedure) (label entry200402100758091) (reg env))
  (goto (label after-lambda200402100758090))
  (comment (lambda (first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest))))))
entry200402100758091
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first rest)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758124))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758123))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758121))
compound-branch200402100758122
  (assign continue (label after-call200402100758120))
  (goto (label compound-apply-compiled))
compiled-branch200402100758123
  (assign continue (label after-call200402100758120))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758121
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758124
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758120
  (restore env)
  (restore continue)
  (comment (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest)))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100758093))
true-branch200402100758094
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200402100758093
  (save continue)
  (save env)
  (comment integer-greater-than)
  (assign proc (op lookup-variable-value) (const integer-greater-than) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758114))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758113))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758111))
compound-branch200402100758112
  (assign continue (label after-call200402100758110))
  (goto (label compound-apply-compiled))
compiled-branch200402100758113
  (assign continue (label after-call200402100758110))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758111
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758114
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758110
  (assign argl (op list) (reg val))
  (restore env)
  (comment first)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758119))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758118))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758116))
compound-branch200402100758117
  (assign continue (label after-call200402100758115))
  (goto (label compound-apply-compiled))
compiled-branch200402100758118
  (assign continue (label after-call200402100758115))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758116
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758119
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758115
  (restore env)
  (restore continue)
  (comment (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100758096))
true-branch200402100758097
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007580912))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007580911))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758099))
compound-branch2004021007580910
  (assign continue (label after-call200402100758098))
  (goto (label compound-apply-compiled))
compiled-branch2004021007580911
  (assign continue (label after-call200402100758098))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758099
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007580912
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758098
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758104))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758103))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758101))
compound-branch200402100758102
  (assign continue (label after-call200402100758100))
  (goto (label compound-apply-compiled))
compiled-branch200402100758103
  (assign continue (label after-call200402100758100))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758101
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758104
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758100
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758109))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758108))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758106))
compound-branch200402100758107
  (goto (label compound-apply-compiled))
compiled-branch200402100758108
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758106
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100758109
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100758105
false-branch200402100758096
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if200402100758095
after-if200402100758092
after-lambda200402100758090
  (comment (set! iter (lambda (first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest)))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758084))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758083))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758081))
compound-branch200402100758082
  (assign continue (label after-call200402100758080))
  (goto (label compound-apply-compiled))
compiled-branch200402100758083
  (assign continue (label after-call200402100758080))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758081
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758084
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758080
  (restore env)
  (restore continue)
  (comment (if (null? args) true (iter (car args) (cdr args))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100758073))
true-branch200402100758074
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200402100758073
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758079))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758078))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758076))
compound-branch200402100758077
  (assign continue (label after-call200402100758075))
  (goto (label compound-apply-compiled))
compiled-branch200402100758078
  (assign continue (label after-call200402100758075))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758076
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100758079
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100758075
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007580714))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007580713))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007580711))
compound-branch2004021007580712
  (assign continue (label after-call2004021007580710))
  (goto (label compound-apply-compiled))
compiled-branch2004021007580713
  (assign continue (label after-call2004021007580710))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007580711
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007580714
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2004021007580710
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007580719))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007580718))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007580716))
compound-branch2004021007580717
  (goto (label compound-apply-compiled))
compiled-branch2004021007580718
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007580716
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007580719
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2004021007580715
after-if200402100758072
after-lambda200402100758070
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758154))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758153))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758151))
compound-branch200402100758152
  (goto (label compound-apply-compiled))
compiled-branch200402100758153
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758151
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100758154
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100758150
after-lambda200402100758060
  (comment (define (> . args) (define (iter first rest) (if (null? rest) true (if (integer-greater-than first (car rest)) (iter (car rest) (cdr rest))))) (if (null? args) true (iter (car args) (cdr args)))))
  (perform (op define-variable!) (const >) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (x) (= x 0)))
  (assign val (op make-compiled-procedure) (label entry200402100758001) (reg env))
  (goto (label after-lambda200402100758000))
  (comment (lambda (x) (= x 0)))
entry200402100758001
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (x)) (reg argl) (reg env))
  (comment =)
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (comment x)
  (assign val (op lookup-variable-value) (const x) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100758006))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100758005))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100758003))
compound-branch200402100758004
  (goto (label compound-apply-compiled))
compiled-branch200402100758005
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100758003
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100758006
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100758002
after-lambda200402100758000
  (comment (define (zero? x) (= x 0)))
  (perform (op define-variable!) (const zero?) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (x) (> x 0)))
  (assign val (op make-compiled-procedure) (label entry200402100757521) (reg env))
  (goto (label after-lambda200402100757520))
  (comment (lambda (x) (> x 0)))
entry200402100757521
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (x)) (reg argl) (reg env))
  (comment >)
  (assign proc (op lookup-variable-value) (const >) (reg env))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (comment x)
  (assign val (op lookup-variable-value) (const x) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757534))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757533))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757531))
compound-branch200402100757532
  (goto (label compound-apply-compiled))
compiled-branch200402100757533
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757531
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100757534
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100757530
after-lambda200402100757520
  (comment (define (positive? x) (> x 0)))
  (perform (op define-variable!) (const positive?) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (x) (< x 0)))
  (assign val (op make-compiled-procedure) (label entry200402100757461) (reg env))
  (goto (label after-lambda200402100757460))
  (comment (lambda (x) (< x 0)))
entry200402100757461
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (x)) (reg argl) (reg env))
  (comment <)
  (assign proc (op lookup-variable-value) (const <) (reg env))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (comment x)
  (assign val (op lookup-variable-value) (const x) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757466))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757465))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757463))
compound-branch200402100757464
  (goto (label compound-apply-compiled))
compiled-branch200402100757465
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757463
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100757466
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100757462
after-lambda200402100757460
  (comment (define (negative? x) (< x 0)))
  (perform (op define-variable!) (const negative?) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (n) (= (remainder n 2) 1)))
  (assign val (op make-compiled-procedure) (label entry200402100757381) (reg env))
  (goto (label after-lambda200402100757380))
  (comment (lambda (n) (= (remainder n 2) 1)))
entry200402100757381
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (n)) (reg argl) (reg env))
  (comment =)
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (save continue)
  (save proc)
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (save argl)
  (comment remainder)
  (assign proc (op lookup-variable-value) (const remainder) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757386))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757385))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757383))
compound-branch200402100757384
  (assign continue (label after-call200402100757382))
  (goto (label compound-apply-compiled))
compiled-branch200402100757385
  (assign continue (label after-call200402100757382))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757383
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100757386
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100757382
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757394))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757393))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757391))
compound-branch200402100757392
  (goto (label compound-apply-compiled))
compiled-branch200402100757393
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757391
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100757394
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100757390
after-lambda200402100757380
  (comment (define (odd? n) (= (remainder n 2) 1)))
  (perform (op define-variable!) (const odd?) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (n) (= (remainder n 2) 0)))
  (assign val (op make-compiled-procedure) (label entry200402100757311) (reg env))
  (goto (label after-lambda200402100757310))
  (comment (lambda (n) (= (remainder n 2) 0)))
entry200402100757311
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (n)) (reg argl) (reg env))
  (comment =)
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (save continue)
  (save proc)
  (comment 0)
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (save argl)
  (comment remainder)
  (assign proc (op lookup-variable-value) (const remainder) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757316))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757315))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757313))
compound-branch200402100757314
  (assign continue (label after-call200402100757312))
  (goto (label compound-apply-compiled))
compiled-branch200402100757315
  (assign continue (label after-call200402100757312))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757313
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100757316
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100757312
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007573111))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007573110))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757318))
compound-branch200402100757319
  (goto (label compound-apply-compiled))
compiled-branch2004021007573110
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757318
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007573111
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100757317
after-lambda200402100757310
  (comment (define (even? n) (= (remainder n 2) 0)))
  (perform (op define-variable!) (const even?) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (first . rest) (define (iter smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq))))) (iter first rest)))
  (assign val (op make-compiled-procedure) (label entry200402100757161) (reg env))
  (goto (label after-lambda200402100757160))
  (comment (lambda (first . rest) (define (iter smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq))))) (iter first rest)))
entry200402100757161
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first . rest)) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq)))))) (iter first rest)))
  (assign proc (op make-compiled-procedure) (label entry200402100757163) (reg env))
  (goto (label after-lambda200402100757162))
  (comment (lambda (iter) (set! iter (lambda (smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq)))))) (iter first rest)))
entry200402100757163
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq))))))
  (assign val (op make-compiled-procedure) (label entry200402100757171) (reg env))
  (goto (label after-lambda200402100757170))
  (comment (lambda (smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq))))))
entry200402100757171
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (smallest seq)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757214))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757213))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757211))
compound-branch200402100757212
  (assign continue (label after-call200402100757210))
  (goto (label compound-apply-compiled))
compiled-branch200402100757213
  (assign continue (label after-call200402100757210))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757211
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100757214
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100757210
  (restore env)
  (restore continue)
  (comment (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq)))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100757173))
true-branch200402100757174
  (comment smallest)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (goto (reg continue))
false-branch200402100757173
  (save continue)
  (save env)
  (comment <)
  (assign proc (op lookup-variable-value) (const <) (reg env))
  (save proc)
  (comment smallest)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757204))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757203))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757201))
compound-branch200402100757202
  (assign continue (label after-call200402100757200))
  (goto (label compound-apply-compiled))
compiled-branch200402100757203
  (assign continue (label after-call200402100757200))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757201
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100757204
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100757200
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757209))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757208))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757206))
compound-branch200402100757207
  (assign continue (label after-call200402100757205))
  (goto (label compound-apply-compiled))
compiled-branch200402100757208
  (assign continue (label after-call200402100757205))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757206
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100757209
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100757205
  (restore env)
  (restore continue)
  (comment (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100757176))
true-branch200402100757177
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757184))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757183))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757181))
compound-branch200402100757182
  (assign continue (label after-call200402100757180))
  (goto (label compound-apply-compiled))
compiled-branch200402100757183
  (assign continue (label after-call200402100757180))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757181
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100757184
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100757180
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757189))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757188))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757186))
compound-branch200402100757187
  (assign continue (label after-call200402100757185))
  (goto (label compound-apply-compiled))
compiled-branch200402100757188
  (assign continue (label after-call200402100757185))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757186
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100757189
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100757185
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757194))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757193))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757191))
compound-branch200402100757192
  (goto (label compound-apply-compiled))
compiled-branch200402100757193
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757191
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100757194
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100757190
false-branch200402100757176
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007571712))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007571711))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757179))
compound-branch2004021007571710
  (assign continue (label after-call200402100757178))
  (goto (label compound-apply-compiled))
compiled-branch2004021007571711
  (assign continue (label after-call200402100757178))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757179
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007571712
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100757178
  (assign argl (op list) (reg val))
  (restore env)
  (comment smallest)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007571717))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007571716))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007571714))
compound-branch2004021007571715
  (goto (label compound-apply-compiled))
compiled-branch2004021007571716
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007571714
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007571717
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2004021007571713
after-if200402100757175
after-if200402100757172
after-lambda200402100757170
  (comment (set! iter (lambda (smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq)))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (comment first)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757168))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757167))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757165))
compound-branch200402100757166
  (goto (label compound-apply-compiled))
compiled-branch200402100757167
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757165
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100757168
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100757164
after-lambda200402100757162
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757244))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757243))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757241))
compound-branch200402100757242
  (goto (label compound-apply-compiled))
compiled-branch200402100757243
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757241
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100757244
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100757240
after-lambda200402100757160
  (comment (define (min first . rest) (define (iter smallest seq) (if (null? seq) smallest (if (< (car seq) smallest) (iter (car seq) (cdr seq)) (iter smallest (cdr seq))))) (iter first rest)))
  (perform (op define-variable!) (const min) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (first . rest) (define (iter smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest))))) (iter first rest)))
  (assign val (op make-compiled-procedure) (label entry200402100757011) (reg env))
  (goto (label after-lambda200402100757010))
  (comment (lambda (first . rest) (define (iter smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest))))) (iter first rest)))
entry200402100757011
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first . rest)) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest)))))) (iter first rest)))
  (assign proc (op make-compiled-procedure) (label entry200402100757021) (reg env))
  (goto (label after-lambda200402100757020))
  (comment (lambda (iter) (set! iter (lambda (smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest)))))) (iter first rest)))
entry200402100757021
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest))))))
  (assign val (op make-compiled-procedure) (label entry200402100757028) (reg env))
  (goto (label after-lambda200402100757027))
  (comment (lambda (smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest))))))
entry200402100757028
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (smallest rest)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757074))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757073))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757071))
compound-branch200402100757072
  (assign continue (label after-call200402100757070))
  (goto (label compound-apply-compiled))
compiled-branch200402100757073
  (assign continue (label after-call200402100757070))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757071
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100757074
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100757070
  (restore env)
  (restore continue)
  (comment (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest)))))
  (test (op false?) (reg val))
  (branch (label false-branch2004021007570210))
true-branch2004021007570211
  (comment smallest)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (goto (reg continue))
false-branch2004021007570210
  (save continue)
  (save env)
  (comment >)
  (assign proc (op lookup-variable-value) (const >) (reg env))
  (save proc)
  (comment smallest)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757054))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757053))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757051))
compound-branch200402100757052
  (assign continue (label after-call200402100757050))
  (goto (label compound-apply-compiled))
compiled-branch200402100757053
  (assign continue (label after-call200402100757050))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757051
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100757054
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100757050
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757064))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757063))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757061))
compound-branch200402100757062
  (assign continue (label after-call200402100757060))
  (goto (label compound-apply-compiled))
compiled-branch200402100757063
  (assign continue (label after-call200402100757060))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757061
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100757064
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100757060
  (restore env)
  (restore continue)
  (comment (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest))))
  (test (op false?) (reg val))
  (branch (label false-branch2004021007570213))
true-branch2004021007570214
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757044))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757043))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757041))
compound-branch200402100757042
  (assign continue (label after-call200402100757040))
  (goto (label compound-apply-compiled))
compiled-branch200402100757043
  (assign continue (label after-call200402100757040))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757041
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100757044
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100757040
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757049))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757048))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757046))
compound-branch200402100757047
  (assign continue (label after-call200402100757045))
  (goto (label compound-apply-compiled))
compiled-branch200402100757048
  (assign continue (label after-call200402100757045))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757046
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100757049
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100757045
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007570414))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007570413))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007570411))
compound-branch2004021007570412
  (goto (label compound-apply-compiled))
compiled-branch2004021007570413
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007570411
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007570414
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2004021007570410
false-branch2004021007570213
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007570219))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007570218))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007570216))
compound-branch2004021007570217
  (assign continue (label after-call2004021007570215))
  (goto (label compound-apply-compiled))
compiled-branch2004021007570218
  (assign continue (label after-call2004021007570215))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007570216
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007570219
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2004021007570215
  (assign argl (op list) (reg val))
  (restore env)
  (comment smallest)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757034))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757033))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757031))
compound-branch200402100757032
  (goto (label compound-apply-compiled))
compiled-branch200402100757033
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757031
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100757034
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100757030
after-if2004021007570212
after-if200402100757029
after-lambda200402100757027
  (comment (set! iter (lambda (smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest)))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (comment first)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757026))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757025))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757023))
compound-branch200402100757024
  (goto (label compound-apply-compiled))
compiled-branch200402100757025
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757023
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100757026
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100757022
after-lambda200402100757020
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100757094))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100757093))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100757091))
compound-branch200402100757092
  (goto (label compound-apply-compiled))
compiled-branch200402100757093
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100757091
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100757094
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100757090
after-lambda200402100757010
  (comment (define (max first . rest) (define (iter smallest rest) (if (null? rest) smallest (if (> (car rest) smallest) (iter (car rest) (cdr rest)) (iter smallest (cdr rest))))) (iter first rest)))
  (perform (op define-variable!) (const max) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda args (accumulate integer-add 0 args)))
  (assign val (op make-compiled-procedure) (label entry200402100756551) (reg env))
  (goto (label after-lambda200402100756550))
  (comment (lambda args (accumulate integer-add 0 args)))
entry200402100756551
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const args) (reg argl) (reg env))
  (comment accumulate)
  (assign proc (op lookup-variable-value) (const accumulate) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op cons) (reg val) (reg argl))
  (comment integer-add)
  (assign val (op lookup-variable-value) (const integer-add) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756556))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756555))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756553))
compound-branch200402100756554
  (goto (label compound-apply-compiled))
compiled-branch200402100756555
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756553
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100756556
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100756552
after-lambda200402100756550
  (comment (define (+ . args) (accumulate integer-add 0 args)))
  (perform (op define-variable!) (const +) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda args (accumulate integer-mul 1 args)))
  (assign val (op make-compiled-procedure) (label entry200402100756491) (reg env))
  (goto (label after-lambda200402100756490))
  (comment (lambda args (accumulate integer-mul 1 args)))
entry200402100756491
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const args) (reg argl) (reg env))
  (comment accumulate)
  (assign proc (op lookup-variable-value) (const accumulate) (reg env))
  (comment args)
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op cons) (reg val) (reg argl))
  (comment integer-mul)
  (assign val (op lookup-variable-value) (const integer-mul) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756496))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756495))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756493))
compound-branch200402100756494
  (goto (label compound-apply-compiled))
compiled-branch200402100756495
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756493
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100756496
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100756492
after-lambda200402100756490
  (comment (define (* . args) (accumulate integer-mul 1 args)))
  (perform (op define-variable!) (const *) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (first . rest) (if (null? rest) (integer-minus 0 first) (fold-left integer-minus first rest))))
  (assign val (op make-compiled-procedure) (label entry200402100756411) (reg env))
  (goto (label after-lambda200402100756410))
  (comment (lambda (first . rest) (if (null? rest) (integer-minus 0 first) (fold-left integer-minus first rest))))
entry200402100756411
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first . rest)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756434))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756433))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756431))
compound-branch200402100756432
  (assign continue (label after-call200402100756430))
  (goto (label compound-apply-compiled))
compiled-branch200402100756433
  (assign continue (label after-call200402100756430))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756431
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100756434
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100756430
  (restore env)
  (restore continue)
  (comment (if (null? rest) (integer-minus 0 first) (fold-left integer-minus first rest)))
  (test (op false?) (reg val))
  (branch (label false-branch200402100756413))
true-branch200402100756414
  (comment integer-minus)
  (assign proc (op lookup-variable-value) (const integer-minus) (reg env))
  (comment first)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op list) (reg val))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756424))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756423))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756421))
compound-branch200402100756422
  (goto (label compound-apply-compiled))
compiled-branch200402100756423
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756421
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100756424
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100756420
false-branch200402100756413
  (comment fold-left)
  (assign proc (op lookup-variable-value) (const fold-left) (reg env))
  (comment rest)
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (comment first)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment integer-minus)
  (assign val (op lookup-variable-value) (const integer-minus) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756419))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756418))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756416))
compound-branch200402100756417
  (goto (label compound-apply-compiled))
compiled-branch200402100756418
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756416
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100756419
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100756415
after-if200402100756412
after-lambda200402100756410
  (comment (define (- first . rest) (if (null? rest) (integer-minus 0 first) (fold-left integer-minus first rest))))
  (perform (op define-variable!) (const -) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (car p))))
  (assign val (op make-compiled-procedure) (label entry200402100756351) (reg env))
  (goto (label after-lambda200402100756350))
  (comment (lambda (p) (car (car p))))
entry200402100756351
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756356))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756355))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756353))
compound-branch200402100756354
  (assign continue (label after-call200402100756352))
  (goto (label compound-apply-compiled))
compiled-branch200402100756355
  (assign continue (label after-call200402100756352))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756353
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100756356
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100756352
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007563511))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007563510))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756358))
compound-branch200402100756359
  (goto (label compound-apply-compiled))
compiled-branch2004021007563510
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756358
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007563511
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100756357
after-lambda200402100756350
  (comment (define (caar p) (car (car p))))
  (perform (op define-variable!) (const caar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (cdr p))))
  (assign val (op make-compiled-procedure) (label entry200402100756281) (reg env))
  (goto (label after-lambda200402100756280))
  (comment (lambda (p) (car (cdr p))))
entry200402100756281
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756286))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756285))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756283))
compound-branch200402100756284
  (assign continue (label after-call200402100756282))
  (goto (label compound-apply-compiled))
compiled-branch200402100756285
  (assign continue (label after-call200402100756282))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756283
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100756286
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100756282
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756294))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756293))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756291))
compound-branch200402100756292
  (goto (label compound-apply-compiled))
compiled-branch200402100756293
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756291
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100756294
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100756290
after-lambda200402100756280
  (comment (define (cadr p) (car (cdr p))))
  (perform (op define-variable!) (const cadr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (car p))))
  (assign val (op make-compiled-procedure) (label entry200402100756221) (reg env))
  (goto (label after-lambda200402100756220))
  (comment (lambda (p) (cdr (car p))))
entry200402100756221
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756226))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756225))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756223))
compound-branch200402100756224
  (assign continue (label after-call200402100756222))
  (goto (label compound-apply-compiled))
compiled-branch200402100756225
  (assign continue (label after-call200402100756222))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756223
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100756226
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100756222
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756234))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756233))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756231))
compound-branch200402100756232
  (goto (label compound-apply-compiled))
compiled-branch200402100756233
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756231
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100756234
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100756230
after-lambda200402100756220
  (comment (define (cdar p) (cdr (car p))))
  (perform (op define-variable!) (const cdar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (cdr p))))
  (assign val (op make-compiled-procedure) (label entry200402100756161) (reg env))
  (goto (label after-lambda200402100756160))
  (comment (lambda (p) (cdr (cdr p))))
entry200402100756161
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756166))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756165))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756163))
compound-branch200402100756164
  (assign continue (label after-call200402100756162))
  (goto (label compound-apply-compiled))
compiled-branch200402100756165
  (assign continue (label after-call200402100756162))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756163
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100756166
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100756162
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007561611))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007561610))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756168))
compound-branch200402100756169
  (goto (label compound-apply-compiled))
compiled-branch2004021007561610
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756168
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007561611
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100756167
after-lambda200402100756160
  (comment (define (cddr p) (cdr (cdr p))))
  (perform (op define-variable!) (const cddr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (car (car p)))))
  (assign val (op make-compiled-procedure) (label entry200402100756091) (reg env))
  (goto (label after-lambda200402100756090))
  (comment (lambda (p) (car (car (car p)))))
entry200402100756091
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756096))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756095))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756093))
compound-branch200402100756094
  (assign continue (label after-call200402100756092))
  (goto (label compound-apply-compiled))
compiled-branch200402100756095
  (assign continue (label after-call200402100756092))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756093
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100756096
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100756092
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007560911))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007560910))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756098))
compound-branch200402100756099
  (assign continue (label after-call200402100756097))
  (goto (label compound-apply-compiled))
compiled-branch2004021007560910
  (assign continue (label after-call200402100756097))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756098
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007560911
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100756097
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756104))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756103))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756101))
compound-branch200402100756102
  (goto (label compound-apply-compiled))
compiled-branch200402100756103
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756101
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100756104
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100756100
after-lambda200402100756090
  (comment (define (caaar p) (car (car (car p)))))
  (perform (op define-variable!) (const caaar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (car (cdr p)))))
  (assign val (op make-compiled-procedure) (label entry200402100756021) (reg env))
  (goto (label after-lambda200402100756020))
  (comment (lambda (p) (car (car (cdr p)))))
entry200402100756021
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756026))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756025))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756023))
compound-branch200402100756024
  (assign continue (label after-call200402100756022))
  (goto (label compound-apply-compiled))
compiled-branch200402100756025
  (assign continue (label after-call200402100756022))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756023
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100756026
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100756022
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756034))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756033))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756031))
compound-branch200402100756032
  (assign continue (label after-call200402100756030))
  (goto (label compound-apply-compiled))
compiled-branch200402100756033
  (assign continue (label after-call200402100756030))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756031
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100756034
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100756030
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100756039))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100756038))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100756036))
compound-branch200402100756037
  (goto (label compound-apply-compiled))
compiled-branch200402100756038
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100756036
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100756039
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100756035
after-lambda200402100756020
  (comment (define (caadr p) (car (car (cdr p)))))
  (perform (op define-variable!) (const caadr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (cdr (car p)))))
  (assign val (op make-compiled-procedure) (label entry200402100755561) (reg env))
  (goto (label after-lambda200402100755560))
  (comment (lambda (p) (car (cdr (car p)))))
entry200402100755561
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755566))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755565))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755563))
compound-branch200402100755564
  (assign continue (label after-call200402100755562))
  (goto (label compound-apply-compiled))
compiled-branch200402100755565
  (assign continue (label after-call200402100755562))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755563
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755566
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755562
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007555611))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007555610))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755568))
compound-branch200402100755569
  (assign continue (label after-call200402100755567))
  (goto (label compound-apply-compiled))
compiled-branch2004021007555610
  (assign continue (label after-call200402100755567))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755568
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007555611
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755567
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755574))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755573))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755571))
compound-branch200402100755572
  (goto (label compound-apply-compiled))
compiled-branch200402100755573
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755571
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100755574
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100755570
after-lambda200402100755560
  (comment (define (cadar p) (car (cdr (car p)))))
  (perform (op define-variable!) (const cadar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (cdr (cdr p)))))
  (assign val (op make-compiled-procedure) (label entry200402100755491) (reg env))
  (goto (label after-lambda200402100755490))
  (comment (lambda (p) (car (cdr (cdr p)))))
entry200402100755491
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755496))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755495))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755493))
compound-branch200402100755494
  (assign continue (label after-call200402100755492))
  (goto (label compound-apply-compiled))
compiled-branch200402100755495
  (assign continue (label after-call200402100755492))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755493
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755496
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755492
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755504))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755503))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755501))
compound-branch200402100755502
  (assign continue (label after-call200402100755500))
  (goto (label compound-apply-compiled))
compiled-branch200402100755503
  (assign continue (label after-call200402100755500))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755501
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755504
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755500
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755509))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755508))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755506))
compound-branch200402100755507
  (goto (label compound-apply-compiled))
compiled-branch200402100755508
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755506
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100755509
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100755505
after-lambda200402100755490
  (comment (define (caddr p) (car (cdr (cdr p)))))
  (perform (op define-variable!) (const caddr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (car (car p)))))
  (assign val (op make-compiled-procedure) (label entry200402100755431) (reg env))
  (goto (label after-lambda200402100755430))
  (comment (lambda (p) (cdr (car (car p)))))
entry200402100755431
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755436))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755435))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755433))
compound-branch200402100755434
  (assign continue (label after-call200402100755432))
  (goto (label compound-apply-compiled))
compiled-branch200402100755435
  (assign continue (label after-call200402100755432))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755433
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755436
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755432
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007554311))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007554310))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755438))
compound-branch200402100755439
  (assign continue (label after-call200402100755437))
  (goto (label compound-apply-compiled))
compiled-branch2004021007554310
  (assign continue (label after-call200402100755437))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755438
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007554311
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755437
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755444))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755443))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755441))
compound-branch200402100755442
  (goto (label compound-apply-compiled))
compiled-branch200402100755443
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755441
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100755444
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100755440
after-lambda200402100755430
  (comment (define (cdaar p) (cdr (car (car p)))))
  (perform (op define-variable!) (const cdaar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (car (cdr p)))))
  (assign val (op make-compiled-procedure) (label entry200402100755361) (reg env))
  (goto (label after-lambda200402100755360))
  (comment (lambda (p) (cdr (car (cdr p)))))
entry200402100755361
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755366))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755365))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755363))
compound-branch200402100755364
  (assign continue (label after-call200402100755362))
  (goto (label compound-apply-compiled))
compiled-branch200402100755365
  (assign continue (label after-call200402100755362))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755363
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755366
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755362
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755374))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755373))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755371))
compound-branch200402100755372
  (assign continue (label after-call200402100755370))
  (goto (label compound-apply-compiled))
compiled-branch200402100755373
  (assign continue (label after-call200402100755370))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755371
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755374
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755370
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755379))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755378))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755376))
compound-branch200402100755377
  (goto (label compound-apply-compiled))
compiled-branch200402100755378
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755376
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100755379
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100755375
after-lambda200402100755360
  (comment (define (cdadr p) (cdr (car (cdr p)))))
  (perform (op define-variable!) (const cdadr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (cdr (car p)))))
  (assign val (op make-compiled-procedure) (label entry200402100755301) (reg env))
  (goto (label after-lambda200402100755300))
  (comment (lambda (p) (cdr (cdr (car p)))))
entry200402100755301
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755306))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755305))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755303))
compound-branch200402100755304
  (assign continue (label after-call200402100755302))
  (goto (label compound-apply-compiled))
compiled-branch200402100755305
  (assign continue (label after-call200402100755302))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755303
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755306
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755302
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755314))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755313))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755311))
compound-branch200402100755312
  (assign continue (label after-call200402100755310))
  (goto (label compound-apply-compiled))
compiled-branch200402100755313
  (assign continue (label after-call200402100755310))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755311
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755314
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755310
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755319))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755318))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755316))
compound-branch200402100755317
  (goto (label compound-apply-compiled))
compiled-branch200402100755318
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755316
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100755319
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100755315
after-lambda200402100755300
  (comment (define (cddar p) (cdr (cdr (car p)))))
  (perform (op define-variable!) (const cddar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (cdr (cdr p)))))
  (assign val (op make-compiled-procedure) (label entry200402100755241) (reg env))
  (goto (label after-lambda200402100755240))
  (comment (lambda (p) (cdr (cdr (cdr p)))))
entry200402100755241
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755246))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755245))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755243))
compound-branch200402100755244
  (assign continue (label after-call200402100755242))
  (goto (label compound-apply-compiled))
compiled-branch200402100755245
  (assign continue (label after-call200402100755242))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755243
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755246
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755242
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007552411))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007552410))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755248))
compound-branch200402100755249
  (assign continue (label after-call200402100755247))
  (goto (label compound-apply-compiled))
compiled-branch2004021007552410
  (assign continue (label after-call200402100755247))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755248
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007552411
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755247
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755254))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755253))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755251))
compound-branch200402100755252
  (goto (label compound-apply-compiled))
compiled-branch200402100755253
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755251
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100755254
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100755250
after-lambda200402100755240
  (comment (define (cdddr p) (cdr (cdr (cdr p)))))
  (perform (op define-variable!) (const cdddr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (car (car (car p))))))
  (assign val (op make-compiled-procedure) (label entry200402100755171) (reg env))
  (goto (label after-lambda200402100755170))
  (comment (lambda (p) (car (car (car (car p))))))
entry200402100755171
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755176))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755175))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755173))
compound-branch200402100755174
  (assign continue (label after-call200402100755172))
  (goto (label compound-apply-compiled))
compiled-branch200402100755175
  (assign continue (label after-call200402100755172))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755173
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755176
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755172
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007551711))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007551710))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755178))
compound-branch200402100755179
  (assign continue (label after-call200402100755177))
  (goto (label compound-apply-compiled))
compiled-branch2004021007551710
  (assign continue (label after-call200402100755177))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755178
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007551711
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755177
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755184))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755183))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755181))
compound-branch200402100755182
  (assign continue (label after-call200402100755180))
  (goto (label compound-apply-compiled))
compiled-branch200402100755183
  (assign continue (label after-call200402100755180))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755181
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755184
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755180
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755194))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755193))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755191))
compound-branch200402100755192
  (goto (label compound-apply-compiled))
compiled-branch200402100755193
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755191
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100755194
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100755190
after-lambda200402100755170
  (comment (define (caaaar p) (car (car (car (car p))))))
  (perform (op define-variable!) (const caaaar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (car (car (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200402100755101) (reg env))
  (goto (label after-lambda200402100755100))
  (comment (lambda (p) (car (car (car (cdr p))))))
entry200402100755101
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755106))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755105))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755103))
compound-branch200402100755104
  (assign continue (label after-call200402100755102))
  (goto (label compound-apply-compiled))
compiled-branch200402100755105
  (assign continue (label after-call200402100755102))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755103
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755106
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755102
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755114))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755113))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755111))
compound-branch200402100755112
  (assign continue (label after-call200402100755110))
  (goto (label compound-apply-compiled))
compiled-branch200402100755113
  (assign continue (label after-call200402100755110))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755111
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755114
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755110
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755119))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755118))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755116))
compound-branch200402100755117
  (assign continue (label after-call200402100755115))
  (goto (label compound-apply-compiled))
compiled-branch200402100755118
  (assign continue (label after-call200402100755115))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755116
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755119
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755115
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755124))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755123))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755121))
compound-branch200402100755122
  (goto (label compound-apply-compiled))
compiled-branch200402100755123
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755121
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100755124
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100755120
after-lambda200402100755100
  (comment (define (caaadr p) (car (car (car (cdr p))))))
  (perform (op define-variable!) (const caaadr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (car (cdr (car p))))))
  (assign val (op make-compiled-procedure) (label entry200402100755041) (reg env))
  (goto (label after-lambda200402100755040))
  (comment (lambda (p) (car (car (cdr (car p))))))
entry200402100755041
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755046))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755045))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755043))
compound-branch200402100755044
  (assign continue (label after-call200402100755042))
  (goto (label compound-apply-compiled))
compiled-branch200402100755045
  (assign continue (label after-call200402100755042))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755043
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755046
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755042
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007550411))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007550410))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755048))
compound-branch200402100755049
  (assign continue (label after-call200402100755047))
  (goto (label compound-apply-compiled))
compiled-branch2004021007550410
  (assign continue (label after-call200402100755047))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755048
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007550411
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755047
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755054))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755053))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755051))
compound-branch200402100755052
  (assign continue (label after-call200402100755050))
  (goto (label compound-apply-compiled))
compiled-branch200402100755053
  (assign continue (label after-call200402100755050))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755051
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100755054
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100755050
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100755059))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100755058))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100755056))
compound-branch200402100755057
  (goto (label compound-apply-compiled))
compiled-branch200402100755058
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100755056
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100755059
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100755055
after-lambda200402100755040
  (comment (define (caadar p) (car (car (cdr (car p))))))
  (perform (op define-variable!) (const caadar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (car (cdr (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200402100754571) (reg env))
  (goto (label after-lambda200402100754570))
  (comment (lambda (p) (car (car (cdr (cdr p))))))
entry200402100754571
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754576))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754575))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754573))
compound-branch200402100754574
  (assign continue (label after-call200402100754572))
  (goto (label compound-apply-compiled))
compiled-branch200402100754575
  (assign continue (label after-call200402100754572))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754573
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754576
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754572
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007545711))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007545710))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754578))
compound-branch200402100754579
  (assign continue (label after-call200402100754577))
  (goto (label compound-apply-compiled))
compiled-branch2004021007545710
  (assign continue (label after-call200402100754577))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754578
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007545711
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754577
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754584))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754583))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754581))
compound-branch200402100754582
  (assign continue (label after-call200402100754580))
  (goto (label compound-apply-compiled))
compiled-branch200402100754583
  (assign continue (label after-call200402100754580))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754581
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754584
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754580
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754589))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754588))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754586))
compound-branch200402100754587
  (goto (label compound-apply-compiled))
compiled-branch200402100754588
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754586
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100754589
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100754585
after-lambda200402100754570
  (comment (define (caaddr p) (car (car (cdr (cdr p))))))
  (perform (op define-variable!) (const caaddr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (cdr (car (car p))))))
  (assign val (op make-compiled-procedure) (label entry200402100754501) (reg env))
  (goto (label after-lambda200402100754500))
  (comment (lambda (p) (car (cdr (car (car p))))))
entry200402100754501
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754514))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754513))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754511))
compound-branch200402100754512
  (assign continue (label after-call200402100754510))
  (goto (label compound-apply-compiled))
compiled-branch200402100754513
  (assign continue (label after-call200402100754510))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754511
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754514
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754510
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754519))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754518))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754516))
compound-branch200402100754517
  (assign continue (label after-call200402100754515))
  (goto (label compound-apply-compiled))
compiled-branch200402100754518
  (assign continue (label after-call200402100754515))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754516
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754519
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754515
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007545114))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007545113))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007545111))
compound-branch2004021007545112
  (assign continue (label after-call2004021007545110))
  (goto (label compound-apply-compiled))
compiled-branch2004021007545113
  (assign continue (label after-call2004021007545110))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007545111
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007545114
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2004021007545110
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754524))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754523))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754521))
compound-branch200402100754522
  (goto (label compound-apply-compiled))
compiled-branch200402100754523
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754521
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100754524
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100754520
after-lambda200402100754500
  (comment (define (cadaar p) (car (cdr (car (car p))))))
  (perform (op define-variable!) (const cadaar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (cdr (car (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200402100754441) (reg env))
  (goto (label after-lambda200402100754440))
  (comment (lambda (p) (car (cdr (car (cdr p))))))
entry200402100754441
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754446))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754445))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754443))
compound-branch200402100754444
  (assign continue (label after-call200402100754442))
  (goto (label compound-apply-compiled))
compiled-branch200402100754445
  (assign continue (label after-call200402100754442))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754443
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754446
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754442
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754454))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754453))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754451))
compound-branch200402100754452
  (assign continue (label after-call200402100754450))
  (goto (label compound-apply-compiled))
compiled-branch200402100754453
  (assign continue (label after-call200402100754450))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754451
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754454
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754450
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754459))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754458))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754456))
compound-branch200402100754457
  (assign continue (label after-call200402100754455))
  (goto (label compound-apply-compiled))
compiled-branch200402100754458
  (assign continue (label after-call200402100754455))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754456
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754459
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754455
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754464))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754463))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754461))
compound-branch200402100754462
  (goto (label compound-apply-compiled))
compiled-branch200402100754463
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754461
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100754464
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100754460
after-lambda200402100754440
  (comment (define (cadadr p) (car (cdr (car (cdr p))))))
  (perform (op define-variable!) (const cadadr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (cdr (cdr (car p))))))
  (assign val (op make-compiled-procedure) (label entry200402100754381) (reg env))
  (goto (label after-lambda200402100754380))
  (comment (lambda (p) (car (cdr (cdr (car p))))))
entry200402100754381
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754386))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754385))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754383))
compound-branch200402100754384
  (assign continue (label after-call200402100754382))
  (goto (label compound-apply-compiled))
compiled-branch200402100754385
  (assign continue (label after-call200402100754382))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754383
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754386
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754382
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007543811))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007543810))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754388))
compound-branch200402100754389
  (assign continue (label after-call200402100754387))
  (goto (label compound-apply-compiled))
compiled-branch2004021007543810
  (assign continue (label after-call200402100754387))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754388
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007543811
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754387
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754394))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754393))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754391))
compound-branch200402100754392
  (assign continue (label after-call200402100754390))
  (goto (label compound-apply-compiled))
compiled-branch200402100754393
  (assign continue (label after-call200402100754390))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754391
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754394
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754390
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754399))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754398))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754396))
compound-branch200402100754397
  (goto (label compound-apply-compiled))
compiled-branch200402100754398
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754396
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100754399
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100754395
after-lambda200402100754380
  (comment (define (caddar p) (car (cdr (cdr (car p))))))
  (perform (op define-variable!) (const caddar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (car (cdr (cdr (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200402100754321) (reg env))
  (goto (label after-lambda200402100754320))
  (comment (lambda (p) (car (cdr (cdr (cdr p))))))
entry200402100754321
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754326))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754325))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754323))
compound-branch200402100754324
  (assign continue (label after-call200402100754322))
  (goto (label compound-apply-compiled))
compiled-branch200402100754325
  (assign continue (label after-call200402100754322))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754323
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754326
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754322
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007543211))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007543210))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754328))
compound-branch200402100754329
  (assign continue (label after-call200402100754327))
  (goto (label compound-apply-compiled))
compiled-branch2004021007543210
  (assign continue (label after-call200402100754327))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754328
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007543211
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754327
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754334))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754333))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754331))
compound-branch200402100754332
  (assign continue (label after-call200402100754330))
  (goto (label compound-apply-compiled))
compiled-branch200402100754333
  (assign continue (label after-call200402100754330))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754331
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754334
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754330
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754339))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754338))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754336))
compound-branch200402100754337
  (goto (label compound-apply-compiled))
compiled-branch200402100754338
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754336
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100754339
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100754335
after-lambda200402100754320
  (comment (define (cadddr p) (car (cdr (cdr (cdr p))))))
  (perform (op define-variable!) (const cadddr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (car (car (car p))))))
  (assign val (op make-compiled-procedure) (label entry200402100754251) (reg env))
  (goto (label after-lambda200402100754250))
  (comment (lambda (p) (cdr (car (car (car p))))))
entry200402100754251
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754264))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754263))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754261))
compound-branch200402100754262
  (assign continue (label after-call200402100754260))
  (goto (label compound-apply-compiled))
compiled-branch200402100754263
  (assign continue (label after-call200402100754260))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754261
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754264
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754260
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754269))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754268))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754266))
compound-branch200402100754267
  (assign continue (label after-call200402100754265))
  (goto (label compound-apply-compiled))
compiled-branch200402100754268
  (assign continue (label after-call200402100754265))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754266
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754269
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754265
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754274))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754273))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754271))
compound-branch200402100754272
  (assign continue (label after-call200402100754270))
  (goto (label compound-apply-compiled))
compiled-branch200402100754273
  (assign continue (label after-call200402100754270))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754271
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754274
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754270
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754279))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754278))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754276))
compound-branch200402100754277
  (goto (label compound-apply-compiled))
compiled-branch200402100754278
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754276
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100754279
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100754275
after-lambda200402100754250
  (comment (define (cdaaar p) (cdr (car (car (car p))))))
  (perform (op define-variable!) (const cdaaar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (car (car (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200402100754201) (reg env))
  (goto (label after-lambda200402100754200))
  (comment (lambda (p) (cdr (car (car (cdr p))))))
entry200402100754201
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754206))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754205))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754203))
compound-branch200402100754204
  (assign continue (label after-call200402100754202))
  (goto (label compound-apply-compiled))
compiled-branch200402100754205
  (assign continue (label after-call200402100754202))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754203
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754206
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754202
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007542011))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007542010))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754208))
compound-branch200402100754209
  (assign continue (label after-call200402100754207))
  (goto (label compound-apply-compiled))
compiled-branch2004021007542010
  (assign continue (label after-call200402100754207))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754208
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007542011
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754207
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754214))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754213))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754211))
compound-branch200402100754212
  (assign continue (label after-call200402100754210))
  (goto (label compound-apply-compiled))
compiled-branch200402100754213
  (assign continue (label after-call200402100754210))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754211
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754214
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754210
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754219))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754218))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754216))
compound-branch200402100754217
  (goto (label compound-apply-compiled))
compiled-branch200402100754218
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754216
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100754219
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100754215
after-lambda200402100754200
  (comment (define (cdaadr p) (cdr (car (car (cdr p))))))
  (perform (op define-variable!) (const cdaadr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (car (cdr (car p))))))
  (assign val (op make-compiled-procedure) (label entry200402100754141) (reg env))
  (goto (label after-lambda200402100754140))
  (comment (lambda (p) (cdr (car (cdr (car p))))))
entry200402100754141
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754146))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754145))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754143))
compound-branch200402100754144
  (assign continue (label after-call200402100754142))
  (goto (label compound-apply-compiled))
compiled-branch200402100754145
  (assign continue (label after-call200402100754142))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754143
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754146
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754142
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007541411))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007541410))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754148))
compound-branch200402100754149
  (assign continue (label after-call200402100754147))
  (goto (label compound-apply-compiled))
compiled-branch2004021007541410
  (assign continue (label after-call200402100754147))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754148
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007541411
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754147
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754154))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754153))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754151))
compound-branch200402100754152
  (assign continue (label after-call200402100754150))
  (goto (label compound-apply-compiled))
compiled-branch200402100754153
  (assign continue (label after-call200402100754150))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754151
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754154
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754150
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754164))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754163))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754161))
compound-branch200402100754162
  (goto (label compound-apply-compiled))
compiled-branch200402100754163
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754161
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100754164
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100754160
after-lambda200402100754140
  (comment (define (cdadar p) (cdr (car (cdr (car p))))))
  (perform (op define-variable!) (const cdadar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (car (cdr (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200402100754081) (reg env))
  (goto (label after-lambda200402100754080))
  (comment (lambda (p) (cdr (car (cdr (cdr p))))))
entry200402100754081
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754086))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754085))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754083))
compound-branch200402100754084
  (assign continue (label after-call200402100754082))
  (goto (label compound-apply-compiled))
compiled-branch200402100754085
  (assign continue (label after-call200402100754082))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754083
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754086
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754082
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754094))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754093))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754091))
compound-branch200402100754092
  (assign continue (label after-call200402100754090))
  (goto (label compound-apply-compiled))
compiled-branch200402100754093
  (assign continue (label after-call200402100754090))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754091
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754094
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754090
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754099))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754098))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754096))
compound-branch200402100754097
  (assign continue (label after-call200402100754095))
  (goto (label compound-apply-compiled))
compiled-branch200402100754098
  (assign continue (label after-call200402100754095))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754096
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754099
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754095
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007540914))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007540913))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007540911))
compound-branch2004021007540912
  (goto (label compound-apply-compiled))
compiled-branch2004021007540913
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007540911
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007540914
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2004021007540910
after-lambda200402100754080
  (comment (define (cdaddr p) (cdr (car (cdr (cdr p))))))
  (perform (op define-variable!) (const cdaddr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (cdr (car (car p))))))
  (assign val (op make-compiled-procedure) (label entry200402100754021) (reg env))
  (goto (label after-lambda200402100754020))
  (comment (lambda (p) (cdr (cdr (car (car p))))))
entry200402100754021
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754034))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754033))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754031))
compound-branch200402100754032
  (assign continue (label after-call200402100754030))
  (goto (label compound-apply-compiled))
compiled-branch200402100754033
  (assign continue (label after-call200402100754030))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754031
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754034
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754030
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754039))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754038))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754036))
compound-branch200402100754037
  (assign continue (label after-call200402100754035))
  (goto (label compound-apply-compiled))
compiled-branch200402100754038
  (assign continue (label after-call200402100754035))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754036
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100754039
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100754035
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007540314))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007540313))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007540311))
compound-branch2004021007540312
  (assign continue (label after-call2004021007540310))
  (goto (label compound-apply-compiled))
compiled-branch2004021007540313
  (assign continue (label after-call2004021007540310))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007540311
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007540314
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2004021007540310
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100754044))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100754043))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100754041))
compound-branch200402100754042
  (goto (label compound-apply-compiled))
compiled-branch200402100754043
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100754041
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100754044
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100754040
after-lambda200402100754020
  (comment (define (cddaar p) (cdr (cdr (car (car p))))))
  (perform (op define-variable!) (const cddaar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (cdr (car (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200402100753571) (reg env))
  (goto (label after-lambda200402100753570))
  (comment (lambda (p) (cdr (cdr (car (cdr p))))))
entry200402100753571
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753576))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753575))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753573))
compound-branch200402100753574
  (assign continue (label after-call200402100753572))
  (goto (label compound-apply-compiled))
compiled-branch200402100753575
  (assign continue (label after-call200402100753572))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753573
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753576
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753572
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007535711))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007535710))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753578))
compound-branch200402100753579
  (assign continue (label after-call200402100753577))
  (goto (label compound-apply-compiled))
compiled-branch2004021007535710
  (assign continue (label after-call200402100753577))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753578
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007535711
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753577
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753584))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753583))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753581))
compound-branch200402100753582
  (assign continue (label after-call200402100753580))
  (goto (label compound-apply-compiled))
compiled-branch200402100753583
  (assign continue (label after-call200402100753580))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753581
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753584
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753580
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753589))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753588))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753586))
compound-branch200402100753587
  (goto (label compound-apply-compiled))
compiled-branch200402100753588
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753586
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753589
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753585
after-lambda200402100753570
  (comment (define (cddadr p) (cdr (cdr (car (cdr p))))))
  (perform (op define-variable!) (const cddadr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (cdr (cdr (car p))))))
  (assign val (op make-compiled-procedure) (label entry200402100753521) (reg env))
  (goto (label after-lambda200402100753520))
  (comment (lambda (p) (cdr (cdr (cdr (car p))))))
entry200402100753521
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753526))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753525))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753523))
compound-branch200402100753524
  (assign continue (label after-call200402100753522))
  (goto (label compound-apply-compiled))
compiled-branch200402100753525
  (assign continue (label after-call200402100753522))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753523
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753526
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753522
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007535211))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007535210))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753528))
compound-branch200402100753529
  (assign continue (label after-call200402100753527))
  (goto (label compound-apply-compiled))
compiled-branch2004021007535210
  (assign continue (label after-call200402100753527))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753528
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007535211
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753527
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753534))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753533))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753531))
compound-branch200402100753532
  (assign continue (label after-call200402100753530))
  (goto (label compound-apply-compiled))
compiled-branch200402100753533
  (assign continue (label after-call200402100753530))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753531
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753534
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753530
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753539))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753538))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753536))
compound-branch200402100753537
  (goto (label compound-apply-compiled))
compiled-branch200402100753538
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753536
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753539
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753535
after-lambda200402100753520
  (comment (define (cdddar p) (cdr (cdr (cdr (car p))))))
  (perform (op define-variable!) (const cdddar) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (p) (cdr (cdr (cdr (cdr p))))))
  (assign val (op make-compiled-procedure) (label entry200402100753461) (reg env))
  (goto (label after-lambda200402100753460))
  (comment (lambda (p) (cdr (cdr (cdr (cdr p))))))
entry200402100753461
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p)) (reg argl) (reg env))
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment p)
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753466))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753465))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753463))
compound-branch200402100753464
  (assign continue (label after-call200402100753462))
  (goto (label compound-apply-compiled))
compiled-branch200402100753465
  (assign continue (label after-call200402100753462))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753463
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753466
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753462
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753474))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753473))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753471))
compound-branch200402100753472
  (assign continue (label after-call200402100753470))
  (goto (label compound-apply-compiled))
compiled-branch200402100753473
  (assign continue (label after-call200402100753470))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753471
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753474
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753470
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753479))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753478))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753476))
compound-branch200402100753477
  (assign continue (label after-call200402100753475))
  (goto (label compound-apply-compiled))
compiled-branch200402100753478
  (assign continue (label after-call200402100753475))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753476
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753479
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753475
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753484))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753483))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753481))
compound-branch200402100753482
  (goto (label compound-apply-compiled))
compiled-branch200402100753483
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753481
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753484
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753480
after-lambda200402100753460
  (comment (define (cddddr p) (cdr (cdr (cdr (cdr p))))))
  (perform (op define-variable!) (const cddddr) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (lst) (let ((hare lst) (tortoise lst) (tortoise-advance true)) (define (iter) (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false))) (iter))))
  (assign val (op make-compiled-procedure) (label entry200402100753331) (reg env))
  (goto (label after-lambda200402100753330))
  (comment (lambda (lst) (let ((hare lst) (tortoise lst) (tortoise-advance true)) (define (iter) (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false))) (iter))))
entry200402100753331
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (lst)) (reg argl) (reg env))
  (comment (lambda (hare tortoise tortoise-advance) (define (iter) (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false))) (iter)))
  (assign proc (op make-compiled-procedure) (label entry200402100753333) (reg env))
  (goto (label after-lambda200402100753332))
  (comment (lambda (hare tortoise tortoise-advance) (define (iter) (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false))) (iter)))
entry200402100753333
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (hare tortoise tortoise-advance)) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda () (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false)))) (iter)))
  (assign proc (op make-compiled-procedure) (label entry200402100753335) (reg env))
  (goto (label after-lambda200402100753334))
  (comment (lambda (iter) (set! iter (lambda () (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false)))) (iter)))
entry200402100753335
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda () (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false))))
  (assign val (op make-compiled-procedure) (label entry200402100753341) (reg env))
  (goto (label after-lambda200402100753340))
  (comment (lambda () (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false))))
entry200402100753341
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const ()) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment hare)
  (assign val (op lookup-variable-value) (const hare) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753394))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753393))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753391))
compound-branch200402100753392
  (assign continue (label after-call200402100753390))
  (goto (label compound-apply-compiled))
compiled-branch200402100753393
  (assign continue (label after-call200402100753390))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753391
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753394
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753390
  (restore env)
  (restore continue)
  (comment (if (null? hare) true (if (pair? hare) (begin (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) false)))
  (test (op false?) (reg val))
  (branch (label false-branch200402100753343))
true-branch200402100753344
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200402100753343
  (save continue)
  (save env)
  (comment pair?)
  (assign proc (op lookup-variable-value) (const pair?) (reg env))
  (comment hare)
  (assign val (op lookup-variable-value) (const hare) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753379))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753378))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753376))
compound-branch200402100753377
  (assign continue (label after-call200402100753375))
  (goto (label compound-apply-compiled))
compiled-branch200402100753378
  (assign continue (label after-call200402100753375))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753376
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753379
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753375
  (restore env)
  (restore continue)
  (comment (if (pair? hare) (begin (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) false))
  (test (op false?) (reg val))
  (branch (label false-branch200402100753346))
true-branch200402100753347
  (save continue)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment hare)
  (assign val (op lookup-variable-value) (const hare) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753374))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753373))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753371))
compound-branch200402100753372
  (assign continue (label after-call200402100753370))
  (goto (label compound-apply-compiled))
compiled-branch200402100753373
  (assign continue (label after-call200402100753370))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753371
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753374
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753370
  (restore env)
  (comment (set! hare (cdr hare)))
  (perform (op set-variable-value!) (const hare) (reg val) (reg env))
  (assign val  (const ok))
  (restore continue)
  (save continue)
  (save env)
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (comment tortoise-advance)
  (assign val (op lookup-variable-value) (const tortoise-advance) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753364))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753363))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753361))
compound-branch200402100753362
  (assign continue (label after-call200402100753360))
  (goto (label compound-apply-compiled))
compiled-branch200402100753363
  (assign continue (label after-call200402100753360))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753361
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753364
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753360
  (restore env)
  (comment (set! tortoise-advance (not tortoise-advance)))
  (perform (op set-variable-value!) (const tortoise-advance) (reg val) (reg env))
  (assign val  (const ok))
  (restore continue)
  (save continue)
  (comment tortoise-advance)
  (assign val (op lookup-variable-value) (const tortoise-advance) (reg env))
  (comment (if tortoise-advance (set! tortoise (cdr tortoise))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100753351))
true-branch200402100753352
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment tortoise)
  (assign val (op lookup-variable-value) (const tortoise) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753357))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753356))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753354))
compound-branch200402100753355
  (assign continue (label after-call200402100753353))
  (goto (label compound-apply-compiled))
compiled-branch200402100753356
  (assign continue (label after-call200402100753353))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753354
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753357
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753353
  (restore env)
  (comment (set! tortoise (cdr tortoise)))
  (perform (op set-variable-value!) (const tortoise) (reg val) (reg env))
  (assign val  (const ok))
  (goto (label after-if200402100753350))
false-branch200402100753351
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
after-if200402100753350
  (restore continue)
  (save continue)
  (save env)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment tortoise)
  (assign val (op lookup-variable-value) (const tortoise) (reg env))
  (assign argl (op list) (reg val))
  (comment hare)
  (assign val (op lookup-variable-value) (const hare) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007533420))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007533419))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007533417))
compound-branch2004021007533418
  (assign continue (label after-call2004021007533416))
  (goto (label compound-apply-compiled))
compiled-branch2004021007533419
  (assign continue (label after-call2004021007533416))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007533417
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007533420
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2004021007533416
  (restore env)
  (restore continue)
  (comment (if (eq? hare tortoise) false (iter)))
  (test (op false?) (reg val))
  (branch (label false-branch200402100753349))
true-branch2004021007533410
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200402100753349
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007533415))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007533414))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007533412))
compound-branch2004021007533413
  (goto (label compound-apply-compiled))
compiled-branch2004021007533414
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007533412
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007533415
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2004021007533411
after-if200402100753348
false-branch200402100753346
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if200402100753345
after-if200402100753342
after-lambda200402100753340
  (comment (set! iter (lambda () (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false)))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007533310))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753339))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753337))
compound-branch200402100753338
  (goto (label compound-apply-compiled))
compiled-branch200402100753339
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753337
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007533310
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753336
after-lambda200402100753334
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753414))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753413))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753411))
compound-branch200402100753412
  (goto (label compound-apply-compiled))
compiled-branch200402100753413
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753411
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753414
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753410
after-lambda200402100753332
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (assign argl (op list) (reg val))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753424))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753423))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753421))
compound-branch200402100753422
  (goto (label compound-apply-compiled))
compiled-branch200402100753423
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753421
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753424
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753420
after-lambda200402100753330
  (comment (define (list? lst) (let ((hare lst) (tortoise lst) (tortoise-advance true)) (define (iter) (cond ((null? hare) true) ((pair? hare) (set! hare (cdr hare)) (set! tortoise-advance (not tortoise-advance)) (if tortoise-advance (set! tortoise (cdr tortoise))) (if (eq? hare tortoise) false (iter))) (else false))) (iter))))
  (perform (op define-variable!) (const list?) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda seq (accumulate cons (quote ()) seq)))
  (assign val (op make-compiled-procedure) (label entry200402100753291) (reg env))
  (goto (label after-lambda200402100753290))
  (comment (lambda seq (accumulate cons (quote ()) seq)))
entry200402100753291
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const seq) (reg argl) (reg env))
  (comment accumulate)
  (assign proc (op lookup-variable-value) (const accumulate) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (comment cons)
  (assign val (op lookup-variable-value) (const cons) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753296))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753295))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753293))
compound-branch200402100753294
  (goto (label compound-apply-compiled))
compiled-branch200402100753295
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753293
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753296
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753292
after-lambda200402100753290
  (comment (define (list . seq) (accumulate cons (quote ()) seq)))
  (perform (op define-variable!) (const list) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (lst) (define (iter result lst) (if (null? lst) result (iter (+ result 1) (cdr lst)))) (iter 0 lst)))
  (assign val (op make-compiled-procedure) (label entry200402100753211) (reg env))
  (goto (label after-lambda200402100753210))
  (comment (lambda (lst) (define (iter result lst) (if (null? lst) result (iter (+ result 1) (cdr lst)))) (iter 0 lst)))
entry200402100753211
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (lst)) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (result lst) (if (null? lst) result (iter (+ result 1) (cdr lst))))) (iter 0 lst)))
  (assign proc (op make-compiled-procedure) (label entry200402100753213) (reg env))
  (goto (label after-lambda200402100753212))
  (comment (lambda (iter) (set! iter (lambda (result lst) (if (null? lst) result (iter (+ result 1) (cdr lst))))) (iter 0 lst)))
entry200402100753213
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (result lst) (if (null? lst) result (iter (+ result 1) (cdr lst)))))
  (assign val (op make-compiled-procedure) (label entry200402100753226) (reg env))
  (goto (label after-lambda200402100753225))
  (comment (lambda (result lst) (if (null? lst) result (iter (+ result 1) (cdr lst)))))
entry200402100753226
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (result lst)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753244))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753243))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753241))
compound-branch200402100753242
  (assign continue (label after-call200402100753240))
  (goto (label compound-apply-compiled))
compiled-branch200402100753243
  (assign continue (label after-call200402100753240))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753241
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753244
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753240
  (restore env)
  (restore continue)
  (comment (if (null? lst) result (iter (+ result 1) (cdr lst))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100753228))
true-branch200402100753229
  (comment result)
  (assign val (op lookup-variable-value) (const result) (reg env))
  (goto (reg continue))
false-branch200402100753228
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007532214))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007532213))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007532211))
compound-branch2004021007532212
  (assign continue (label after-call2004021007532210))
  (goto (label compound-apply-compiled))
compiled-branch2004021007532213
  (assign continue (label after-call2004021007532210))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007532211
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007532214
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2004021007532210
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment +)
  (assign proc (op lookup-variable-value) (const +) (reg env))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (comment result)
  (assign val (op lookup-variable-value) (const result) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753234))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753233))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753231))
compound-branch200402100753232
  (assign continue (label after-call200402100753230))
  (goto (label compound-apply-compiled))
compiled-branch200402100753233
  (assign continue (label after-call200402100753230))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753231
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753234
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753230
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753239))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753238))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753236))
compound-branch200402100753237
  (goto (label compound-apply-compiled))
compiled-branch200402100753238
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753236
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753239
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753235
after-if200402100753227
after-lambda200402100753225
  (comment (set! iter (lambda (result lst) (if (null? lst) result (iter (+ result 1) (cdr lst))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753224))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753223))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753221))
compound-branch200402100753222
  (goto (label compound-apply-compiled))
compiled-branch200402100753223
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753221
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753224
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753220
after-lambda200402100753212
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753264))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753263))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753261))
compound-branch200402100753262
  (goto (label compound-apply-compiled))
compiled-branch200402100753263
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753261
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753264
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753260
after-lambda200402100753210
  (comment (define (length lst) (define (iter result lst) (if (null? lst) result (iter (+ result 1) (cdr lst)))) (iter 0 lst)))
  (perform (op define-variable!) (const length) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda seqs (define (append-2 a b) (accumulate cons b a)) (define (append-seq-list seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs))))) (append-seq-list seqs)))
  (assign val (op make-compiled-procedure) (label entry200402100753121) (reg env))
  (goto (label after-lambda200402100753120))
  (comment (lambda seqs (define (append-2 a b) (accumulate cons b a)) (define (append-seq-list seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs))))) (append-seq-list seqs)))
entry200402100753121
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const seqs) (reg argl) (reg env))
  (comment (lambda (append-2 append-seq-list) (set! append-2 (lambda (a b) (accumulate cons b a))) (set! append-seq-list (lambda (seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs)))))) (append-seq-list seqs)))
  (assign proc (op make-compiled-procedure) (label entry200402100753123) (reg env))
  (goto (label after-lambda200402100753122))
  (comment (lambda (append-2 append-seq-list) (set! append-2 (lambda (a b) (accumulate cons b a))) (set! append-seq-list (lambda (seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs)))))) (append-seq-list seqs)))
entry200402100753123
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (append-2 append-seq-list)) (reg argl) (reg env))
  (comment (lambda (a b) (accumulate cons b a)))
  (assign val (op make-compiled-procedure) (label entry200402100753161) (reg env))
  (goto (label after-lambda200402100753160))
  (comment (lambda (a b) (accumulate cons b a)))
entry200402100753161
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (a b)) (reg argl) (reg env))
  (comment accumulate)
  (assign proc (op lookup-variable-value) (const accumulate) (reg env))
  (comment a)
  (assign val (op lookup-variable-value) (const a) (reg env))
  (assign argl (op list) (reg val))
  (comment b)
  (assign val (op lookup-variable-value) (const b) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment cons)
  (assign val (op lookup-variable-value) (const cons) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753174))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753173))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753171))
compound-branch200402100753172
  (goto (label compound-apply-compiled))
compiled-branch200402100753173
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753171
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753174
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753170
after-lambda200402100753160
  (comment (set! append-2 (lambda (a b) (accumulate cons b a))))
  (perform (op set-variable-value!) (const append-2) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs))))))
  (assign val (op make-compiled-procedure) (label entry200402100753131) (reg env))
  (goto (label after-lambda200402100753130))
  (comment (lambda (seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs))))))
entry200402100753131
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seqs)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753154))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753153))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753151))
compound-branch200402100753152
  (assign continue (label after-call200402100753150))
  (goto (label compound-apply-compiled))
compiled-branch200402100753153
  (assign continue (label after-call200402100753150))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753151
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753154
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753150
  (restore env)
  (restore continue)
  (comment (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs)))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100753133))
true-branch200402100753134
  (comment (quote ()))
  (assign val  (const ()))
  (goto (reg continue))
false-branch200402100753133
  (comment append-2)
  (assign proc (op lookup-variable-value) (const append-2) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment append-seq-list)
  (assign proc (op lookup-variable-value) (const append-seq-list) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753139))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753138))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753136))
compound-branch200402100753137
  (assign continue (label after-call200402100753135))
  (goto (label compound-apply-compiled))
compiled-branch200402100753138
  (assign continue (label after-call200402100753135))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753136
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753139
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753135
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007531314))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007531313))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007531311))
compound-branch2004021007531312
  (assign continue (label after-call2004021007531310))
  (goto (label compound-apply-compiled))
compiled-branch2004021007531313
  (assign continue (label after-call2004021007531310))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007531311
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007531314
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2004021007531310
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753144))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753143))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753141))
compound-branch200402100753142
  (assign continue (label after-call200402100753140))
  (goto (label compound-apply-compiled))
compiled-branch200402100753143
  (assign continue (label after-call200402100753140))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753141
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753144
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753140
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753149))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753148))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753146))
compound-branch200402100753147
  (goto (label compound-apply-compiled))
compiled-branch200402100753148
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753146
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753149
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753145
after-if200402100753132
after-lambda200402100753130
  (comment (set! append-seq-list (lambda (seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs)))))))
  (perform (op set-variable-value!) (const append-seq-list) (reg val) (reg env))
  (assign val  (const ok))
  (comment append-seq-list)
  (assign proc (op lookup-variable-value) (const append-seq-list) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753128))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753127))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753125))
compound-branch200402100753126
  (goto (label compound-apply-compiled))
compiled-branch200402100753127
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753125
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753128
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753124
after-lambda200402100753122
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753184))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753183))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753181))
compound-branch200402100753182
  (goto (label compound-apply-compiled))
compiled-branch200402100753183
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753181
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753184
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753180
after-lambda200402100753120
  (comment (define (append . seqs) (define (append-2 a b) (accumulate cons b a)) (define (append-seq-list seqs) (if (null? seqs) (quote ()) (append-2 (car seqs) (append-seq-list (cdr seqs))))) (append-seq-list seqs)))
  (perform (op define-variable!) (const append) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (list) (define (iter list result) (if (null? list) result (iter (cdr list) (cons (car list) result)))) (iter list (quote ()))))
  (assign val (op make-compiled-procedure) (label entry200402100753041) (reg env))
  (goto (label after-lambda200402100753040))
  (comment (lambda (list) (define (iter list result) (if (null? list) result (iter (cdr list) (cons (car list) result)))) (iter list (quote ()))))
entry200402100753041
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (list)) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (list result) (if (null? list) result (iter (cdr list) (cons (car list) result))))) (iter list (quote ()))))
  (assign proc (op make-compiled-procedure) (label entry200402100753043) (reg env))
  (goto (label after-lambda200402100753042))
  (comment (lambda (iter) (set! iter (lambda (list result) (if (null? list) result (iter (cdr list) (cons (car list) result))))) (iter list (quote ()))))
entry200402100753043
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (list result) (if (null? list) result (iter (cdr list) (cons (car list) result)))))
  (assign val (op make-compiled-procedure) (label entry2004021007530410) (reg env))
  (goto (label after-lambda200402100753049))
  (comment (lambda (list result) (if (null? list) result (iter (cdr list) (cons (car list) result)))))
entry2004021007530410
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (list result)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment list)
  (assign val (op lookup-variable-value) (const list) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753074))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753073))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753071))
compound-branch200402100753072
  (assign continue (label after-call200402100753070))
  (goto (label compound-apply-compiled))
compiled-branch200402100753073
  (assign continue (label after-call200402100753070))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753071
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753074
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753070
  (restore env)
  (restore continue)
  (comment (if (null? list) result (iter (cdr list) (cons (car list) result))))
  (test (op false?) (reg val))
  (branch (label false-branch2004021007530412))
true-branch2004021007530413
  (comment result)
  (assign val (op lookup-variable-value) (const result) (reg env))
  (goto (reg continue))
false-branch2004021007530412
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cons)
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save proc)
  (comment result)
  (assign val (op lookup-variable-value) (const result) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment list)
  (assign val (op lookup-variable-value) (const list) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007530418))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007530417))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007530415))
compound-branch2004021007530416
  (assign continue (label after-call2004021007530414))
  (goto (label compound-apply-compiled))
compiled-branch2004021007530417
  (assign continue (label after-call2004021007530414))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007530415
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007530418
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2004021007530414
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753054))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753053))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753051))
compound-branch200402100753052
  (assign continue (label after-call200402100753050))
  (goto (label compound-apply-compiled))
compiled-branch200402100753053
  (assign continue (label after-call200402100753050))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753051
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753054
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753050
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment list)
  (assign val (op lookup-variable-value) (const list) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753064))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753063))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753061))
compound-branch200402100753062
  (assign continue (label after-call200402100753060))
  (goto (label compound-apply-compiled))
compiled-branch200402100753063
  (assign continue (label after-call200402100753060))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753061
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753064
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753060
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753069))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753068))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753066))
compound-branch200402100753067
  (goto (label compound-apply-compiled))
compiled-branch200402100753068
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753066
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753069
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753065
after-if2004021007530411
after-lambda200402100753049
  (comment (set! iter (lambda (list result) (if (null? list) result (iter (cdr list) (cons (car list) result))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (comment list)
  (assign val (op lookup-variable-value) (const list) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753048))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753047))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753045))
compound-branch200402100753046
  (goto (label compound-apply-compiled))
compiled-branch200402100753047
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753045
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753048
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753044
after-lambda200402100753042
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753084))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753083))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753081))
compound-branch200402100753082
  (goto (label compound-apply-compiled))
compiled-branch200402100753083
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753081
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100753084
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100753080
after-lambda200402100753040
  (comment (define (reverse list) (define (iter list result) (if (null? list) result (iter (cdr list) (cons (car list) result)))) (iter list (quote ()))))
  (perform (op define-variable!) (const reverse) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (l k) (if (= k 0) l (list-tail (cdr l) (- k 1)))))
  (assign val (op make-compiled-procedure) (label entry200402100752581) (reg env))
  (goto (label after-lambda200402100752580))
  (comment (lambda (l k) (if (= k 0) l (list-tail (cdr l) (- k 1)))))
entry200402100752581
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (l k)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment =)
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (comment k)
  (assign val (op lookup-variable-value) (const k) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100753004))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100753003))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100753001))
compound-branch200402100753002
  (assign continue (label after-call200402100753000))
  (goto (label compound-apply-compiled))
compiled-branch200402100753003
  (assign continue (label after-call200402100753000))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100753001
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100753004
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100753000
  (restore env)
  (restore continue)
  (comment (if (= k 0) l (list-tail (cdr l) (- k 1))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100752583))
true-branch200402100752584
  (comment l)
  (assign val (op lookup-variable-value) (const l) (reg env))
  (goto (reg continue))
false-branch200402100752583
  (comment list-tail)
  (assign proc (op lookup-variable-value) (const list-tail) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment -)
  (assign proc (op lookup-variable-value) (const -) (reg env))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (comment k)
  (assign val (op lookup-variable-value) (const k) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752589))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752588))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752586))
compound-branch200402100752587
  (assign continue (label after-call200402100752585))
  (goto (label compound-apply-compiled))
compiled-branch200402100752588
  (assign continue (label after-call200402100752585))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752586
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752589
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752585
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment l)
  (assign val (op lookup-variable-value) (const l) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752594))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752593))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752591))
compound-branch200402100752592
  (assign continue (label after-call200402100752590))
  (goto (label compound-apply-compiled))
compiled-branch200402100752593
  (assign continue (label after-call200402100752590))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752591
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752594
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752590
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752599))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752598))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752596))
compound-branch200402100752597
  (goto (label compound-apply-compiled))
compiled-branch200402100752598
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752596
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100752599
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100752595
after-if200402100752582
after-lambda200402100752580
  (comment (define (list-tail l k) (if (= k 0) l (list-tail (cdr l) (- k 1)))))
  (perform (op define-variable!) (const list-tail) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (l k) (car (list-tail l k))))
  (assign val (op make-compiled-procedure) (label entry200402100752551) (reg env))
  (goto (label after-lambda200402100752550))
  (comment (lambda (l k) (car (list-tail l k))))
entry200402100752551
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (l k)) (reg argl) (reg env))
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (comment list-tail)
  (assign proc (op lookup-variable-value) (const list-tail) (reg env))
  (comment k)
  (assign val (op lookup-variable-value) (const k) (reg env))
  (assign argl (op list) (reg val))
  (comment l)
  (assign val (op lookup-variable-value) (const l) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752556))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752555))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752553))
compound-branch200402100752554
  (assign continue (label after-call200402100752552))
  (goto (label compound-apply-compiled))
compiled-branch200402100752555
  (assign continue (label after-call200402100752552))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752553
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752556
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752552
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007525511))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007525510))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752558))
compound-branch200402100752559
  (goto (label compound-apply-compiled))
compiled-branch2004021007525510
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752558
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007525511
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100752557
after-lambda200402100752550
  (comment (define (list-ref l k) (car (list-tail l k))))
  (perform (op define-variable!) (const list-ref) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (obj lst) (if (null? lst) false (if (eq? obj (car lst)) lst (memq obj (cdr lst))))))
  (assign val (op make-compiled-procedure) (label entry200402100752491) (reg env))
  (goto (label after-lambda200402100752490))
  (comment (lambda (obj lst) (if (null? lst) false (if (eq? obj (car lst)) lst (memq obj (cdr lst))))))
entry200402100752491
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj lst)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752524))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752523))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752521))
compound-branch200402100752522
  (assign continue (label after-call200402100752520))
  (goto (label compound-apply-compiled))
compiled-branch200402100752523
  (assign continue (label after-call200402100752520))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752521
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752524
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752520
  (restore env)
  (restore continue)
  (comment (if (null? lst) false (if (eq? obj (car lst)) lst (memq obj (cdr lst)))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100752493))
true-branch200402100752494
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200402100752493
  (save continue)
  (save env)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752509))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752508))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752506))
compound-branch200402100752507
  (assign continue (label after-call200402100752505))
  (goto (label compound-apply-compiled))
compiled-branch200402100752508
  (assign continue (label after-call200402100752505))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752506
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752509
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752505
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752514))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752513))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752511))
compound-branch200402100752512
  (assign continue (label after-call200402100752510))
  (goto (label compound-apply-compiled))
compiled-branch200402100752513
  (assign continue (label after-call200402100752510))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752511
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752514
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752510
  (restore env)
  (restore continue)
  (comment (if (eq? obj (car lst)) lst (memq obj (cdr lst))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100752496))
true-branch200402100752497
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (goto (reg continue))
false-branch200402100752496
  (comment memq)
  (assign proc (op lookup-variable-value) (const memq) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007524912))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007524911))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752499))
compound-branch2004021007524910
  (assign continue (label after-call200402100752498))
  (goto (label compound-apply-compiled))
compiled-branch2004021007524911
  (assign continue (label after-call200402100752498))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752499
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007524912
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752498
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752504))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752503))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752501))
compound-branch200402100752502
  (goto (label compound-apply-compiled))
compiled-branch200402100752503
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752501
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100752504
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100752500
after-if200402100752495
after-if200402100752492
after-lambda200402100752490
  (comment (define (memq obj lst) (if (null? lst) false (if (eq? obj (car lst)) lst (memq obj (cdr lst))))))
  (perform (op define-variable!) (const memq) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (obj lst) (if (null? lst) false (if (eqv? obj (car lst)) lst (memv obj (cdr lst))))))
  (assign val (op make-compiled-procedure) (label entry200402100752431) (reg env))
  (goto (label after-lambda200402100752430))
  (comment (lambda (obj lst) (if (null? lst) false (if (eqv? obj (car lst)) lst (memv obj (cdr lst))))))
entry200402100752431
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj lst)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752464))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752463))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752461))
compound-branch200402100752462
  (assign continue (label after-call200402100752460))
  (goto (label compound-apply-compiled))
compiled-branch200402100752463
  (assign continue (label after-call200402100752460))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752461
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752464
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752460
  (restore env)
  (restore continue)
  (comment (if (null? lst) false (if (eqv? obj (car lst)) lst (memv obj (cdr lst)))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100752433))
true-branch200402100752434
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200402100752433
  (save continue)
  (save env)
  (comment eqv?)
  (assign proc (op lookup-variable-value) (const eqv?) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752449))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752448))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752446))
compound-branch200402100752447
  (assign continue (label after-call200402100752445))
  (goto (label compound-apply-compiled))
compiled-branch200402100752448
  (assign continue (label after-call200402100752445))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752446
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752449
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752445
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752454))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752453))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752451))
compound-branch200402100752452
  (assign continue (label after-call200402100752450))
  (goto (label compound-apply-compiled))
compiled-branch200402100752453
  (assign continue (label after-call200402100752450))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752451
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752454
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752450
  (restore env)
  (restore continue)
  (comment (if (eqv? obj (car lst)) lst (memv obj (cdr lst))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100752436))
true-branch200402100752437
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (goto (reg continue))
false-branch200402100752436
  (comment memv)
  (assign proc (op lookup-variable-value) (const memv) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007524312))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007524311))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752439))
compound-branch2004021007524310
  (assign continue (label after-call200402100752438))
  (goto (label compound-apply-compiled))
compiled-branch2004021007524311
  (assign continue (label after-call200402100752438))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752439
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007524312
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752438
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752444))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752443))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752441))
compound-branch200402100752442
  (goto (label compound-apply-compiled))
compiled-branch200402100752443
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752441
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100752444
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100752440
after-if200402100752435
after-if200402100752432
after-lambda200402100752430
  (comment (define (memv obj lst) (if (null? lst) false (if (eqv? obj (car lst)) lst (memv obj (cdr lst))))))
  (perform (op define-variable!) (const memv) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (obj lst) (if (null? lst) false (if (equal? obj (car lst)) lst (member obj (cdr lst))))))
  (assign val (op make-compiled-procedure) (label entry200402100752371) (reg env))
  (goto (label after-lambda200402100752370))
  (comment (lambda (obj lst) (if (null? lst) false (if (equal? obj (car lst)) lst (member obj (cdr lst))))))
entry200402100752371
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj lst)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752404))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752403))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752401))
compound-branch200402100752402
  (assign continue (label after-call200402100752400))
  (goto (label compound-apply-compiled))
compiled-branch200402100752403
  (assign continue (label after-call200402100752400))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752401
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752404
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752400
  (restore env)
  (restore continue)
  (comment (if (null? lst) false (if (equal? obj (car lst)) lst (member obj (cdr lst)))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100752373))
true-branch200402100752374
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200402100752373
  (save continue)
  (save env)
  (comment equal?)
  (assign proc (op lookup-variable-value) (const equal?) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752394))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752393))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752391))
compound-branch200402100752392
  (assign continue (label after-call200402100752390))
  (goto (label compound-apply-compiled))
compiled-branch200402100752393
  (assign continue (label after-call200402100752390))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752391
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752394
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752390
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752399))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752398))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752396))
compound-branch200402100752397
  (assign continue (label after-call200402100752395))
  (goto (label compound-apply-compiled))
compiled-branch200402100752398
  (assign continue (label after-call200402100752395))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752396
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752399
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752395
  (restore env)
  (restore continue)
  (comment (if (equal? obj (car lst)) lst (member obj (cdr lst))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100752376))
true-branch200402100752377
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (goto (reg continue))
false-branch200402100752376
  (comment member)
  (assign proc (op lookup-variable-value) (const member) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment lst)
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752384))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752383))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752381))
compound-branch200402100752382
  (assign continue (label after-call200402100752380))
  (goto (label compound-apply-compiled))
compiled-branch200402100752383
  (assign continue (label after-call200402100752380))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752381
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752384
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752380
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752389))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752388))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752386))
compound-branch200402100752387
  (goto (label compound-apply-compiled))
compiled-branch200402100752388
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752386
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100752389
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100752385
after-if200402100752375
after-if200402100752372
after-lambda200402100752370
  (comment (define (member obj lst) (if (null? lst) false (if (equal? obj (car lst)) lst (member obj (cdr lst))))))
  (perform (op define-variable!) (const member) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (obj alist) (if (null? alist) false (let ((pair (car alist))) (if (eq? obj (car pair)) pair (assq obj (cdr alist)))))))
  (assign val (op make-compiled-procedure) (label entry200402100752311) (reg env))
  (goto (label after-lambda200402100752310))
  (comment (lambda (obj alist) (if (null? alist) false (let ((pair (car alist))) (if (eq? obj (car pair)) pair (assq obj (cdr alist)))))))
entry200402100752311
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj alist)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752354))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752353))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752351))
compound-branch200402100752352
  (assign continue (label after-call200402100752350))
  (goto (label compound-apply-compiled))
compiled-branch200402100752353
  (assign continue (label after-call200402100752350))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752351
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752354
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752350
  (restore env)
  (restore continue)
  (comment (if (null? alist) false (let ((pair (car alist))) (if (eq? obj (car pair)) pair (assq obj (cdr alist))))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100752313))
true-branch200402100752314
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200402100752313
  (comment (lambda (pair) (if (eq? obj (car pair)) pair (assq obj (cdr alist)))))
  (assign proc (op make-compiled-procedure) (label entry2004021007523111) (reg env))
  (goto (label after-lambda2004021007523110))
  (comment (lambda (pair) (if (eq? obj (car pair)) pair (assq obj (cdr alist)))))
entry2004021007523111
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (pair)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment pair)
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752324))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752323))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752321))
compound-branch200402100752322
  (assign continue (label after-call200402100752320))
  (goto (label compound-apply-compiled))
compiled-branch200402100752323
  (assign continue (label after-call200402100752320))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752321
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752324
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752320
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752334))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752333))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752331))
compound-branch200402100752332
  (assign continue (label after-call200402100752330))
  (goto (label compound-apply-compiled))
compiled-branch200402100752333
  (assign continue (label after-call200402100752330))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752331
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752334
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752330
  (restore env)
  (restore continue)
  (comment (if (eq? obj (car pair)) pair (assq obj (cdr alist))))
  (test (op false?) (reg val))
  (branch (label false-branch2004021007523113))
true-branch2004021007523114
  (comment pair)
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (goto (reg continue))
false-branch2004021007523113
  (comment assq)
  (assign proc (op lookup-variable-value) (const assq) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007523119))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007523118))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007523116))
compound-branch2004021007523117
  (assign continue (label after-call2004021007523115))
  (goto (label compound-apply-compiled))
compiled-branch2004021007523118
  (assign continue (label after-call2004021007523115))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007523116
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007523119
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2004021007523115
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007523124))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007523123))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007523121))
compound-branch2004021007523122
  (goto (label compound-apply-compiled))
compiled-branch2004021007523123
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007523121
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007523124
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2004021007523120
after-if2004021007523112
after-lambda2004021007523110
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752319))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752318))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752316))
compound-branch200402100752317
  (assign continue (label after-call200402100752315))
  (goto (label compound-apply-compiled))
compiled-branch200402100752318
  (assign continue (label after-call200402100752315))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752316
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752319
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752315
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752344))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752343))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752341))
compound-branch200402100752342
  (goto (label compound-apply-compiled))
compiled-branch200402100752343
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752341
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100752344
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100752340
after-if200402100752312
after-lambda200402100752310
  (comment (define (assq obj alist) (if (null? alist) false (let ((pair (car alist))) (if (eq? obj (car pair)) pair (assq obj (cdr alist)))))))
  (perform (op define-variable!) (const assq) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (obj alist) (if (null? alist) false (let ((pair (car alist))) (if (eqv? obj (car pair)) pair (assv obj (cdr alist)))))))
  (assign val (op make-compiled-procedure) (label entry200402100752241) (reg env))
  (goto (label after-lambda200402100752240))
  (comment (lambda (obj alist) (if (null? alist) false (let ((pair (car alist))) (if (eqv? obj (car pair)) pair (assv obj (cdr alist)))))))
entry200402100752241
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj alist)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752284))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752283))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752281))
compound-branch200402100752282
  (assign continue (label after-call200402100752280))
  (goto (label compound-apply-compiled))
compiled-branch200402100752283
  (assign continue (label after-call200402100752280))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752281
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752284
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752280
  (restore env)
  (restore continue)
  (comment (if (null? alist) false (let ((pair (car alist))) (if (eqv? obj (car pair)) pair (assv obj (cdr alist))))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100752243))
true-branch200402100752244
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200402100752243
  (comment (lambda (pair) (if (eqv? obj (car pair)) pair (assv obj (cdr alist)))))
  (assign proc (op make-compiled-procedure) (label entry2004021007522411) (reg env))
  (goto (label after-lambda2004021007522410))
  (comment (lambda (pair) (if (eqv? obj (car pair)) pair (assv obj (cdr alist)))))
entry2004021007522411
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (pair)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment eqv?)
  (assign proc (op lookup-variable-value) (const eqv?) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment pair)
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752254))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752253))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752251))
compound-branch200402100752252
  (assign continue (label after-call200402100752250))
  (goto (label compound-apply-compiled))
compiled-branch200402100752253
  (assign continue (label after-call200402100752250))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752251
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752254
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752250
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752264))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752263))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752261))
compound-branch200402100752262
  (assign continue (label after-call200402100752260))
  (goto (label compound-apply-compiled))
compiled-branch200402100752263
  (assign continue (label after-call200402100752260))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752261
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752264
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752260
  (restore env)
  (restore continue)
  (comment (if (eqv? obj (car pair)) pair (assv obj (cdr alist))))
  (test (op false?) (reg val))
  (branch (label false-branch2004021007522413))
true-branch2004021007522414
  (comment pair)
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (goto (reg continue))
false-branch2004021007522413
  (comment assv)
  (assign proc (op lookup-variable-value) (const assv) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007522419))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007522418))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007522416))
compound-branch2004021007522417
  (assign continue (label after-call2004021007522415))
  (goto (label compound-apply-compiled))
compiled-branch2004021007522418
  (assign continue (label after-call2004021007522415))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007522416
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007522419
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2004021007522415
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007522424))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007522423))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007522421))
compound-branch2004021007522422
  (goto (label compound-apply-compiled))
compiled-branch2004021007522423
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007522421
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007522424
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2004021007522420
after-if2004021007522412
after-lambda2004021007522410
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752249))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752248))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752246))
compound-branch200402100752247
  (assign continue (label after-call200402100752245))
  (goto (label compound-apply-compiled))
compiled-branch200402100752248
  (assign continue (label after-call200402100752245))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752246
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752249
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752245
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752274))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752273))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752271))
compound-branch200402100752272
  (goto (label compound-apply-compiled))
compiled-branch200402100752273
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752271
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100752274
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100752270
after-if200402100752242
after-lambda200402100752240
  (comment (define (assv obj alist) (if (null? alist) false (let ((pair (car alist))) (if (eqv? obj (car pair)) pair (assv obj (cdr alist)))))))
  (perform (op define-variable!) (const assv) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (obj alist) (if (null? alist) false (let ((pair (car alist))) (if (equal? obj (car pair)) pair (assoc obj (cdr alist)))))))
  (assign val (op make-compiled-procedure) (label entry200402100752171) (reg env))
  (goto (label after-lambda200402100752170))
  (comment (lambda (obj alist) (if (null? alist) false (let ((pair (car alist))) (if (equal? obj (car pair)) pair (assoc obj (cdr alist)))))))
entry200402100752171
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj alist)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752214))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752213))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752211))
compound-branch200402100752212
  (assign continue (label after-call200402100752210))
  (goto (label compound-apply-compiled))
compiled-branch200402100752213
  (assign continue (label after-call200402100752210))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752211
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752214
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752210
  (restore env)
  (restore continue)
  (comment (if (null? alist) false (let ((pair (car alist))) (if (equal? obj (car pair)) pair (assoc obj (cdr alist))))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100752173))
true-branch200402100752174
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200402100752173
  (comment (lambda (pair) (if (equal? obj (car pair)) pair (assoc obj (cdr alist)))))
  (assign proc (op make-compiled-procedure) (label entry2004021007521711) (reg env))
  (goto (label after-lambda2004021007521710))
  (comment (lambda (pair) (if (equal? obj (car pair)) pair (assoc obj (cdr alist)))))
entry2004021007521711
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (pair)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment equal?)
  (assign proc (op lookup-variable-value) (const equal?) (reg env))
  (save proc)
  (save env)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment pair)
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007521814))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007521813))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007521811))
compound-branch2004021007521812
  (assign continue (label after-call2004021007521810))
  (goto (label compound-apply-compiled))
compiled-branch2004021007521813
  (assign continue (label after-call2004021007521810))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007521811
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007521814
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2004021007521810
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752194))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752193))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752191))
compound-branch200402100752192
  (assign continue (label after-call200402100752190))
  (goto (label compound-apply-compiled))
compiled-branch200402100752193
  (assign continue (label after-call200402100752190))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752191
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752194
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752190
  (restore env)
  (restore continue)
  (comment (if (equal? obj (car pair)) pair (assoc obj (cdr alist))))
  (test (op false?) (reg val))
  (branch (label false-branch2004021007521713))
true-branch2004021007521714
  (comment pair)
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (goto (reg continue))
false-branch2004021007521713
  (comment assoc)
  (assign proc (op lookup-variable-value) (const assoc) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752184))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752183))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752181))
compound-branch200402100752182
  (assign continue (label after-call200402100752180))
  (goto (label compound-apply-compiled))
compiled-branch200402100752183
  (assign continue (label after-call200402100752180))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752181
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752184
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752180
  (assign argl (op list) (reg val))
  (restore env)
  (comment obj)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752189))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752188))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752186))
compound-branch200402100752187
  (goto (label compound-apply-compiled))
compiled-branch200402100752188
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752186
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100752189
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100752185
after-if2004021007521712
after-lambda2004021007521710
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment alist)
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752179))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752178))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752176))
compound-branch200402100752177
  (assign continue (label after-call200402100752175))
  (goto (label compound-apply-compiled))
compiled-branch200402100752178
  (assign continue (label after-call200402100752175))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752176
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752179
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752175
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752204))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752203))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752201))
compound-branch200402100752202
  (goto (label compound-apply-compiled))
compiled-branch200402100752203
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752201
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100752204
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100752200
after-if200402100752172
after-lambda200402100752170
  (comment (define (assoc obj alist) (if (null? alist) false (let ((pair (car alist))) (if (equal? obj (car pair)) pair (assoc obj (cdr alist)))))))
  (perform (op define-variable!) (const assoc) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (proc seq) (if (null? seq) (quote ()) (cons (proc (car seq)) (simplemap proc (cdr seq))))))
  (assign val (op make-compiled-procedure) (label entry200402100752111) (reg env))
  (goto (label after-lambda200402100752110))
  (comment (lambda (proc seq) (if (null? seq) (quote ()) (cons (proc (car seq)) (simplemap proc (cdr seq))))))
entry200402100752111
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc seq)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752144))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752143))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752141))
compound-branch200402100752142
  (assign continue (label after-call200402100752140))
  (goto (label compound-apply-compiled))
compiled-branch200402100752143
  (assign continue (label after-call200402100752140))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752141
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752144
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752140
  (restore env)
  (restore continue)
  (comment (if (null? seq) (quote ()) (cons (proc (car seq)) (simplemap proc (cdr seq)))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100752113))
true-branch200402100752114
  (comment (quote ()))
  (assign val  (const ()))
  (goto (reg continue))
false-branch200402100752113
  (comment cons)
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment simplemap)
  (assign proc (op lookup-variable-value) (const simplemap) (reg env))
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752119))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752118))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752116))
compound-branch200402100752117
  (assign continue (label after-call200402100752115))
  (goto (label compound-apply-compiled))
compiled-branch200402100752118
  (assign continue (label after-call200402100752115))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752116
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752119
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752115
  (assign argl (op list) (reg val))
  (restore env)
  (comment proc)
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752124))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752123))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752121))
compound-branch200402100752122
  (assign continue (label after-call200402100752120))
  (goto (label compound-apply-compiled))
compiled-branch200402100752123
  (assign continue (label after-call200402100752120))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752121
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752124
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752120
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment proc)
  (assign proc (op lookup-variable-value) (const proc) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752134))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752133))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752131))
compound-branch200402100752132
  (assign continue (label after-call200402100752130))
  (goto (label compound-apply-compiled))
compiled-branch200402100752133
  (assign continue (label after-call200402100752130))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752131
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752134
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752130
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752139))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752138))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752136))
compound-branch200402100752137
  (assign continue (label after-call200402100752135))
  (goto (label compound-apply-compiled))
compiled-branch200402100752138
  (assign continue (label after-call200402100752135))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752136
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752139
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752135
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007521314))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007521313))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007521311))
compound-branch2004021007521312
  (goto (label compound-apply-compiled))
compiled-branch2004021007521313
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007521311
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007521314
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2004021007521310
after-if200402100752112
after-lambda200402100752110
  (comment (define (simplemap proc seq) (if (null? seq) (quote ()) (cons (proc (car seq)) (simplemap proc (cdr seq))))))
  (perform (op define-variable!) (const simplemap) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (seqs) (if (null? seqs) 0 (call-with-current-continuation (lambda (break) (define (iter seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))) (iter seqs (length (car seqs))))))))
  (assign val (op make-compiled-procedure) (label entry200402100751571) (reg env))
  (goto (label after-lambda200402100751570))
  (comment (lambda (seqs) (if (null? seqs) 0 (call-with-current-continuation (lambda (break) (define (iter seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))) (iter seqs (length (car seqs))))))))
entry200402100751571
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seqs)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752084))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752083))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752081))
compound-branch200402100752082
  (assign continue (label after-call200402100752080))
  (goto (label compound-apply-compiled))
compiled-branch200402100752083
  (assign continue (label after-call200402100752080))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752081
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752084
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752080
  (restore env)
  (restore continue)
  (comment (if (null? seqs) 0 (call-with-current-continuation (lambda (break) (define (iter seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))) (iter seqs (length (car seqs)))))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100751573))
true-branch200402100751574
  (comment 0)
  (assign val  (const 0))
  (goto (reg continue))
false-branch200402100751573
  (comment call-with-current-continuation)
  (assign proc (op lookup-variable-value) (const call-with-current-continuation) (reg env))
  (comment (lambda (break) (define (iter seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))) (iter seqs (length (car seqs)))))
  (assign val (op make-compiled-procedure) (label entry200402100751576) (reg env))
  (goto (label after-lambda200402100751575))
  (comment (lambda (break) (define (iter seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))) (iter seqs (length (car seqs)))))
entry200402100751576
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (break)) (reg argl) (reg env))
  (comment (lambda (iter) (set! iter (lambda (seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length))))) (iter seqs (length (car seqs)))))
  (assign proc (op make-compiled-procedure) (label entry200402100751581) (reg env))
  (goto (label after-lambda200402100751580))
  (comment (lambda (iter) (set! iter (lambda (seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length))))) (iter seqs (length (car seqs)))))
entry200402100751581
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (iter)) (reg argl) (reg env))
  (comment (lambda (seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))))
  (assign val (op make-compiled-procedure) (label entry200402100751596) (reg env))
  (goto (label after-lambda200402100751595))
  (comment (lambda (seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))))
entry200402100751596
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq initial-length)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752044))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752043))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752041))
compound-branch200402100752042
  (assign continue (label after-call200402100752040))
  (goto (label compound-apply-compiled))
compiled-branch200402100752043
  (assign continue (label after-call200402100752040))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752041
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752044
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752040
  (restore env)
  (restore continue)
  (comment (if (null? seq) initial-length (if (not (= (length (car seq)) initial-length)) (break false) (iter (cdr seq) initial-length))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100751598))
true-branch200402100751599
  (comment initial-length)
  (assign val (op lookup-variable-value) (const initial-length) (reg env))
  (goto (reg continue))
false-branch200402100751598
  (save continue)
  (save env)
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (save proc)
  (comment =)
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (save proc)
  (comment initial-length)
  (assign val (op lookup-variable-value) (const initial-length) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment length)
  (assign proc (op lookup-variable-value) (const length) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752014))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752013))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752011))
compound-branch200402100752012
  (assign continue (label after-call200402100752010))
  (goto (label compound-apply-compiled))
compiled-branch200402100752013
  (assign continue (label after-call200402100752010))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752011
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752014
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752010
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752024))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752023))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752021))
compound-branch200402100752022
  (assign continue (label after-call200402100752020))
  (goto (label compound-apply-compiled))
compiled-branch200402100752023
  (assign continue (label after-call200402100752020))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752021
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752024
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752020
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752029))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752028))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752026))
compound-branch200402100752027
  (assign continue (label after-call200402100752025))
  (goto (label compound-apply-compiled))
compiled-branch200402100752028
  (assign continue (label after-call200402100752025))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752026
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752029
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752025
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007520214))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007520213))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007520211))
compound-branch2004021007520212
  (assign continue (label after-call2004021007520210))
  (goto (label compound-apply-compiled))
compiled-branch2004021007520213
  (assign continue (label after-call2004021007520210))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007520211
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007520214
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2004021007520210
  (restore env)
  (restore continue)
  (comment (if (not (= (length (car seq)) initial-length)) (break false) (iter (cdr seq) initial-length)))
  (test (op false?) (reg val))
  (branch (label false-branch2004021007515911))
true-branch2004021007515912
  (comment break)
  (assign proc (op lookup-variable-value) (const break) (reg env))
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007520014))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007520013))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007520011))
compound-branch2004021007520012
  (goto (label compound-apply-compiled))
compiled-branch2004021007520013
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007520011
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007520014
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2004021007520010
false-branch2004021007515911
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (comment initial-length)
  (assign val (op lookup-variable-value) (const initial-length) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752004))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752003))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752001))
compound-branch200402100752002
  (assign continue (label after-call200402100752000))
  (goto (label compound-apply-compiled))
compiled-branch200402100752003
  (assign continue (label after-call200402100752000))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752001
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100752004
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100752000
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752009))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752008))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752006))
compound-branch200402100752007
  (goto (label compound-apply-compiled))
compiled-branch200402100752008
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752006
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100752009
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100752005
after-if2004021007515910
after-if200402100751597
after-lambda200402100751595
  (comment (set! iter (lambda (seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length))))))
  (perform (op set-variable-value!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (comment iter)
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment length)
  (assign proc (op lookup-variable-value) (const length) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751586))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751585))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751583))
compound-branch200402100751584
  (assign continue (label after-call200402100751582))
  (goto (label compound-apply-compiled))
compiled-branch200402100751585
  (assign continue (label after-call200402100751582))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751583
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100751586
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751582
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007515811))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007515810))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751588))
compound-branch200402100751589
  (assign continue (label after-call200402100751587))
  (goto (label compound-apply-compiled))
compiled-branch2004021007515810
  (assign continue (label after-call200402100751587))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751588
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007515811
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751587
  (assign argl (op list) (reg val))
  (restore env)
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751594))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751593))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751591))
compound-branch200402100751592
  (goto (label compound-apply-compiled))
compiled-branch200402100751593
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751591
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100751594
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100751590
after-lambda200402100751580
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752064))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752063))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752061))
compound-branch200402100752062
  (goto (label compound-apply-compiled))
compiled-branch200402100752063
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752061
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100752064
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100752060
after-lambda200402100751575
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100752074))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100752073))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100752071))
compound-branch200402100752072
  (goto (label compound-apply-compiled))
compiled-branch200402100752073
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100752071
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100752074
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100752070
after-if200402100751572
after-lambda200402100751570
  (comment (define (lengths-equal seqs) (if (null? seqs) 0 (call-with-current-continuation (lambda (break) (define (iter seq initial-length) (cond ((null? seq) initial-length) ((not (= (length (car seq)) initial-length)) (break false)) (else (iter (cdr seq) initial-length)))) (iter seqs (length (car seqs))))))))
  (perform (op define-variable!) (const lengths-equal) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (proc len seqs) (if (= len 0) (quote ()) (let ((heads (simplemap car seqs)) (tails (simplemap cdr seqs))) (cons (apply proc heads) (apply map1 (list proc (- len 1) tails)))))))
  (assign val (op make-compiled-procedure) (label entry200402100751491) (reg env))
  (goto (label after-lambda200402100751490))
  (comment (lambda (proc len seqs) (if (= len 0) (quote ()) (let ((heads (simplemap car seqs)) (tails (simplemap cdr seqs))) (cons (apply proc heads) (apply map1 (list proc (- len 1) tails)))))))
entry200402100751491
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc len seqs)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment =)
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (comment 0)
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (comment len)
  (assign val (op lookup-variable-value) (const len) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751554))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751553))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751551))
compound-branch200402100751552
  (assign continue (label after-call200402100751550))
  (goto (label compound-apply-compiled))
compiled-branch200402100751553
  (assign continue (label after-call200402100751550))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751551
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100751554
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751550
  (restore env)
  (restore continue)
  (comment (if (= len 0) (quote ()) (let ((heads (simplemap car seqs)) (tails (simplemap cdr seqs))) (cons (apply proc heads) (apply map1 (list proc (- len 1) tails))))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100751493))
true-branch200402100751494
  (comment (quote ()))
  (assign val  (const ()))
  (goto (reg continue))
false-branch200402100751493
  (comment (lambda (heads tails) (cons (apply proc heads) (apply map1 (list proc (- len 1) tails)))))
  (assign proc (op make-compiled-procedure) (label entry200402100751506) (reg env))
  (goto (label after-lambda200402100751505))
  (comment (lambda (heads tails) (cons (apply proc heads) (apply map1 (list proc (- len 1) tails)))))
entry200402100751506
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (heads tails)) (reg argl) (reg env))
  (comment cons)
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment apply)
  (assign proc (op lookup-variable-value) (const apply) (reg env))
  (save proc)
  (save env)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment tails)
  (assign val (op lookup-variable-value) (const tails) (reg env))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment -)
  (assign proc (op lookup-variable-value) (const -) (reg env))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (comment len)
  (assign val (op lookup-variable-value) (const len) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751514))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751513))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751511))
compound-branch200402100751512
  (assign continue (label after-call200402100751510))
  (goto (label compound-apply-compiled))
compiled-branch200402100751513
  (assign continue (label after-call200402100751510))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751511
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100751514
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751510
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (comment proc)
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751519))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751518))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751516))
compound-branch200402100751517
  (assign continue (label after-call200402100751515))
  (goto (label compound-apply-compiled))
compiled-branch200402100751518
  (assign continue (label after-call200402100751515))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751516
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100751519
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751515
  (assign argl (op list) (reg val))
  (restore env)
  (comment map1)
  (assign val (op lookup-variable-value) (const map1) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751524))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751523))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751521))
compound-branch200402100751522
  (assign continue (label after-call200402100751520))
  (goto (label compound-apply-compiled))
compiled-branch200402100751523
  (assign continue (label after-call200402100751520))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751521
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100751524
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751520
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment apply)
  (assign proc (op lookup-variable-value) (const apply) (reg env))
  (comment heads)
  (assign val (op lookup-variable-value) (const heads) (reg env))
  (assign argl (op list) (reg val))
  (comment proc)
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751529))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751528))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751526))
compound-branch200402100751527
  (assign continue (label after-call200402100751525))
  (goto (label compound-apply-compiled))
compiled-branch200402100751528
  (assign continue (label after-call200402100751525))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751526
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100751529
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751525
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751534))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751533))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751531))
compound-branch200402100751532
  (goto (label compound-apply-compiled))
compiled-branch200402100751533
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751531
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100751534
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100751530
after-lambda200402100751505
  (save continue)
  (save proc)
  (save env)
  (comment simplemap)
  (assign proc (op lookup-variable-value) (const simplemap) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (comment cdr)
  (assign val (op lookup-variable-value) (const cdr) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751499))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751498))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751496))
compound-branch200402100751497
  (assign continue (label after-call200402100751495))
  (goto (label compound-apply-compiled))
compiled-branch200402100751498
  (assign continue (label after-call200402100751495))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751496
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100751499
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751495
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment simplemap)
  (assign proc (op lookup-variable-value) (const simplemap) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (comment car)
  (assign val (op lookup-variable-value) (const car) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751504))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751503))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751501))
compound-branch200402100751502
  (assign continue (label after-call200402100751500))
  (goto (label compound-apply-compiled))
compiled-branch200402100751503
  (assign continue (label after-call200402100751500))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751501
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100751504
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751500
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751544))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751543))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751541))
compound-branch200402100751542
  (goto (label compound-apply-compiled))
compiled-branch200402100751543
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751541
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100751544
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100751540
after-if200402100751492
after-lambda200402100751490
  (comment (define (map1 proc len seqs) (if (= len 0) (quote ()) (let ((heads (simplemap car seqs)) (tails (simplemap cdr seqs))) (cons (apply proc heads) (apply map1 (list proc (- len 1) tails)))))))
  (perform (op define-variable!) (const map1) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (proc . seqs) (let ((len (lengths-equal seqs))) (cond ((not len) (begin (display "map: length of the lists must be equal") (newline))) (else (map1 proc len seqs))))))
  (assign val (op make-compiled-procedure) (label entry200402100751451) (reg env))
  (goto (label after-lambda200402100751450))
  (comment (lambda (proc . seqs) (let ((len (lengths-equal seqs))) (cond ((not len) (begin (display "map: length of the lists must be equal") (newline))) (else (map1 proc len seqs))))))
entry200402100751451
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc . seqs)) (reg argl) (reg env))
  (comment (lambda (len) (cond ((not len) (begin (display "map: length of the lists must be equal") (newline))) (else (map1 proc len seqs)))))
  (assign proc (op make-compiled-procedure) (label entry200402100751458) (reg env))
  (goto (label after-lambda200402100751457))
  (comment (lambda (len) (cond ((not len) (begin (display "map: length of the lists must be equal") (newline))) (else (map1 proc len seqs)))))
entry200402100751458
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (len)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (comment len)
  (assign val (op lookup-variable-value) (const len) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751474))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751473))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751471))
compound-branch200402100751472
  (assign continue (label after-call200402100751470))
  (goto (label compound-apply-compiled))
compiled-branch200402100751473
  (assign continue (label after-call200402100751470))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751471
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100751474
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751470
  (restore env)
  (restore continue)
  (comment (if (not len) (begin (display "map: length of the lists must be equal") (newline)) (map1 proc len seqs)))
  (test (op false?) (reg val))
  (branch (label false-branch2004021007514510))
true-branch2004021007514511
  (save continue)
  (save env)
  (comment display)
  (assign proc (op lookup-variable-value) (const display) (reg env))
  (comment "map: length of the lists must be equal")
  (assign val  (const "map: length of the lists must be equal"))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751469))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751468))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751466))
compound-branch200402100751467
  (assign continue (label after-call200402100751465))
  (goto (label compound-apply-compiled))
compiled-branch200402100751468
  (assign continue (label after-call200402100751465))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751466
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100751469
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751465
  (restore env)
  (restore continue)
  (comment newline)
  (assign proc (op lookup-variable-value) (const newline) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751464))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751463))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751461))
compound-branch200402100751462
  (goto (label compound-apply-compiled))
compiled-branch200402100751463
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751461
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100751464
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100751460
false-branch2004021007514510
  (comment map1)
  (assign proc (op lookup-variable-value) (const map1) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (comment len)
  (assign val (op lookup-variable-value) (const len) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment proc)
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007514516))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007514515))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007514513))
compound-branch2004021007514514
  (goto (label compound-apply-compiled))
compiled-branch2004021007514515
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007514513
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch2004021007514516
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call2004021007514512
after-if200402100751459
after-lambda200402100751457
  (save continue)
  (save proc)
  (comment lengths-equal)
  (assign proc (op lookup-variable-value) (const lengths-equal) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751456))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751455))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751453))
compound-branch200402100751454
  (assign continue (label after-call200402100751452))
  (goto (label compound-apply-compiled))
compiled-branch200402100751455
  (assign continue (label after-call200402100751452))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751453
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100751456
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751452
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751484))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751483))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751481))
compound-branch200402100751482
  (goto (label compound-apply-compiled))
compiled-branch200402100751483
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751481
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100751484
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100751480
after-lambda200402100751450
  (comment (define (map proc . seqs) (let ((len (lengths-equal seqs))) (cond ((not len) (begin (display "map: length of the lists must be equal") (newline))) (else (map1 proc len seqs))))))
  (perform (op define-variable!) (const map) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (proc seq) (if (not (null? seq)) (begin (proc (car seq)) (for-each proc (cdr seq))))))
  (assign val (op make-compiled-procedure) (label entry200402100751408) (reg env))
  (goto (label after-lambda200402100751407))
  (comment (lambda (proc seq) (if (not (null? seq)) (begin (proc (car seq)) (for-each proc (cdr seq))))))
entry200402100751408
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc seq)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (save proc)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751434))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751433))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751431))
compound-branch200402100751432
  (assign continue (label after-call200402100751430))
  (goto (label compound-apply-compiled))
compiled-branch200402100751433
  (assign continue (label after-call200402100751430))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751431
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100751434
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751430
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751439))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751438))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751436))
compound-branch200402100751437
  (assign continue (label after-call200402100751435))
  (goto (label compound-apply-compiled))
compiled-branch200402100751438
  (assign continue (label after-call200402100751435))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751436
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100751439
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751435
  (restore env)
  (restore continue)
  (comment (if (not (null? seq)) (begin (proc (car seq)) (for-each proc (cdr seq)))))
  (test (op false?) (reg val))
  (branch (label false-branch2004021007514010))
true-branch2004021007514011
  (save continue)
  (save env)
  (comment proc)
  (assign proc (op lookup-variable-value) (const proc) (reg env))
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007514114))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007514113))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007514111))
compound-branch2004021007514112
  (assign continue (label after-call2004021007514110))
  (goto (label compound-apply-compiled))
compiled-branch2004021007514113
  (assign continue (label after-call2004021007514110))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007514111
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007514114
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2004021007514110
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751424))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751423))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751421))
compound-branch200402100751422
  (assign continue (label after-call200402100751420))
  (goto (label compound-apply-compiled))
compiled-branch200402100751423
  (assign continue (label after-call200402100751420))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751421
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100751424
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751420
  (restore env)
  (restore continue)
  (comment for-each)
  (assign proc (op lookup-variable-value) (const for-each) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751414))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751413))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751411))
compound-branch200402100751412
  (assign continue (label after-call200402100751410))
  (goto (label compound-apply-compiled))
compiled-branch200402100751413
  (assign continue (label after-call200402100751410))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751411
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200402100751414
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751410
  (assign argl (op list) (reg val))
  (restore env)
  (comment proc)
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751419))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751418))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751416))
compound-branch200402100751417
  (goto (label compound-apply-compiled))
compiled-branch200402100751418
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751416
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100751419
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100751415
false-branch2004021007514010
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if200402100751409
after-lambda200402100751407
  (comment (define (for-each proc seq) (if (not (null? seq)) (begin (proc (car seq)) (for-each proc (cdr seq))))))
  (perform (op define-variable!) (const for-each) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (delayed-object) (delayed-object)))
  (assign val (op make-compiled-procedure) (label entry200402100751401) (reg env))
  (goto (label after-lambda200402100751400))
  (comment (lambda (delayed-object) (delayed-object)))
entry200402100751401
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (delayed-object)) (reg argl) (reg env))
  (comment delayed-object)
  (assign proc (op lookup-variable-value) (const delayed-object) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751406))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751405))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751403))
compound-branch200402100751404
  (goto (label compound-apply-compiled))
compiled-branch200402100751405
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751403
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100751406
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100751402
after-lambda200402100751400
  (comment (define (force delayed-object) (delayed-object)))
  (perform (op define-variable!) (const force) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (proc) (let ((result-ready? false) (result false)) (lambda () (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result))))))))
  (assign val (op make-compiled-procedure) (label entry200402100751361) (reg env))
  (goto (label after-lambda200402100751360))
  (comment (lambda (proc) (let ((result-ready? false) (result false)) (lambda () (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result))))))))
entry200402100751361
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc)) (reg argl) (reg env))
  (comment (lambda (result-ready? result) (lambda () (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result)))))))
  (assign proc (op make-compiled-procedure) (label entry200402100751363) (reg env))
  (goto (label after-lambda200402100751362))
  (comment (lambda (result-ready? result) (lambda () (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result)))))))
entry200402100751363
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (result-ready? result)) (reg argl) (reg env))
  (comment (lambda () (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result))))))
  (assign val (op make-compiled-procedure) (label entry200402100751365) (reg env))
  (goto (reg continue))
  (comment (lambda () (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result))))))
entry200402100751365
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const ()) (reg argl) (reg env))
  (comment result-ready?)
  (assign val (op lookup-variable-value) (const result-ready?) (reg env))
  (comment (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result)))))
  (test (op false?) (reg val))
  (branch (label false-branch200402100751367))
true-branch200402100751368
  (comment result)
  (assign val (op lookup-variable-value) (const result) (reg env))
  (goto (reg continue))
false-branch200402100751367
  (comment (lambda (x) (if result-ready? result (begin (set! result-ready? true) (set! result x) result))))
  (assign proc (op make-compiled-procedure) (label entry200402100751371) (reg env))
  (goto (label after-lambda200402100751370))
  (comment (lambda (x) (if result-ready? result (begin (set! result-ready? true) (set! result x) result))))
entry200402100751371
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (x)) (reg argl) (reg env))
  (comment result-ready?)
  (assign val (op lookup-variable-value) (const result-ready?) (reg env))
  (comment (if result-ready? result (begin (set! result-ready? true) (set! result x) result)))
  (test (op false?) (reg val))
  (branch (label false-branch200402100751373))
true-branch200402100751374
  (comment result)
  (assign val (op lookup-variable-value) (const result) (reg env))
  (goto (reg continue))
false-branch200402100751373
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (comment (set! result-ready? true))
  (perform (op set-variable-value!) (const result-ready?) (reg val) (reg env))
  (assign val  (const ok))
  (comment x)
  (assign val (op lookup-variable-value) (const x) (reg env))
  (comment (set! result x))
  (perform (op set-variable-value!) (const result) (reg val) (reg env))
  (assign val  (const ok))
  (comment result)
  (assign val (op lookup-variable-value) (const result) (reg env))
  (goto (reg continue))
after-if200402100751372
after-lambda200402100751370
  (save continue)
  (save proc)
  (comment proc)
  (assign proc (op lookup-variable-value) (const proc) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2004021007513613))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2004021007513612))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2004021007513610))
compound-branch2004021007513611
  (assign continue (label after-call200402100751369))
  (goto (label compound-apply-compiled))
compiled-branch2004021007513612
  (assign continue (label after-call200402100751369))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2004021007513610
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2004021007513613
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200402100751369
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751379))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751378))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751376))
compound-branch200402100751377
  (goto (label compound-apply-compiled))
compiled-branch200402100751378
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751376
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100751379
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100751375
after-if200402100751366
after-lambda200402100751364
after-lambda200402100751362
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (assign argl (op list) (reg val))
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200402100751394))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200402100751393))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200402100751391))
compound-branch200402100751392
  (goto (label compound-apply-compiled))
compiled-branch200402100751393
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200402100751391
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200402100751394
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200402100751390
after-lambda200402100751360
  (comment (define make-promise (lambda (proc) (let ((result-ready? false) (result false)) (lambda () (if result-ready? result (let ((x (proc))) (if result-ready? result (begin (set! result-ready? true) (set! result x) result)))))))))
  (perform (op define-variable!) (const make-promise) (reg val) (reg env))
  (assign val  (const ok))
))
