
; This file is generated by the pretty printer
; The needs- and modifies-registers are discarded
(()()
(
  (comment (lambda (exp target linkage) (cond ((self-evaluating? exp) (compile-self-evaluating exp target linkage)) ((quoted? exp) (compile-quoted exp target linkage)) ((variable? exp) (compile-variable exp target linkage)) ((assignment? exp) (compile-assignment exp target linkage)) ((definition? exp) (compile-definition exp target linkage)) ((if? exp) (compile-if exp target linkage)) ((lambda? exp) (compile-lambda exp target linkage)) ((begin? exp) (compile-sequence (begin-actions exp) target linkage)) ((cond? exp) (compile (cond->if exp) target linkage)) ((let? exp) (compile (let->combination exp) target linkage)) ((let*? exp) (compile (let*->nested-lets exp) target linkage)) ((letrec? exp) (compile (letrec->let exp) target linkage)) ((and? exp) (compile-and (and-expressions exp) target linkage)) ((or? exp) (compile-or (or-expressions exp) target linkage)) ((application? exp) (compile-application exp target linkage)) (else (error "Unknown expression type -- COMPILE" exp)))))
  (assign val (op make-compiled-procedure) (label entry200308172125440) (reg env))
  (goto (label after-lambda200308172125441))
  (comment (lambda (exp target linkage) (cond ((self-evaluating? exp) (compile-self-evaluating exp target linkage)) ((quoted? exp) (compile-quoted exp target linkage)) ((variable? exp) (compile-variable exp target linkage)) ((assignment? exp) (compile-assignment exp target linkage)) ((definition? exp) (compile-definition exp target linkage)) ((if? exp) (compile-if exp target linkage)) ((lambda? exp) (compile-lambda exp target linkage)) ((begin? exp) (compile-sequence (begin-actions exp) target linkage)) ((cond? exp) (compile (cond->if exp) target linkage)) ((let? exp) (compile (let->combination exp) target linkage)) ((let*? exp) (compile (let*->nested-lets exp) target linkage)) ((letrec? exp) (compile (letrec->let exp) target linkage)) ((and? exp) (compile-and (and-expressions exp) target linkage)) ((or? exp) (compile-or (or-expressions exp) target linkage)) ((application? exp) (compile-application exp target linkage)) (else (error "Unknown expression type -- COMPILE" exp)))))
entry200308172125440
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp target linkage)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment self-evaluating?)
  (assign proc (op lookup-variable-value) (const self-evaluating?) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172125445))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172125446))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172125448))
compound-branch200308172125447
  (assign continue (label after-call200308172125449))
  (goto (label compound-apply-compiled))
compiled-branch200308172125446
  (assign continue (label after-call200308172125449))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172125448
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172125445
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172125449
  (restore env)
  (restore continue)
  (comment (if (self-evaluating? exp) (compile-self-evaluating exp target linkage) (if (quoted? exp) (compile-quoted exp target linkage) (if (variable? exp) (compile-variable exp target linkage) (if (assignment? exp) (compile-assignment exp target linkage) (if (definition? exp) (compile-definition exp target linkage) (if (if? exp) (compile-if exp target linkage) (if (lambda? exp) (compile-lambda exp target linkage) (if (begin? exp) (compile-sequence (begin-actions exp) target linkage) (if (cond? exp) (compile (cond->if exp) target linkage) (if (let? exp) (compile (let->combination exp) target linkage) (if (let*? exp) (compile (let*->nested-lets exp) target linkage) (if (letrec? exp) (compile (letrec->let exp) target linkage) (if (and? exp) (compile-and (and-expressions exp) target linkage) (if (or? exp) (compile-or (or-expressions exp) target linkage) (if (application? exp) (compile-application exp target linkage) (error "Unknown expression type -- COMPILE" exp)))))))))))))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172125443))
true-branch200308172125442
  (comment compile-self-evaluating)
  (assign proc (op lookup-variable-value) (const compile-self-evaluating) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172125460))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172125461))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172125463))
compound-branch200308172125462
  (goto (label compound-apply-compiled))
compiled-branch200308172125461
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172125463
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172125460
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172125464
false-branch200308172125443
  (save continue)
  (save env)
  (comment quoted?)
  (assign proc (op lookup-variable-value) (const quoted?) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172125473))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172125474))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172125476))
compound-branch200308172125475
  (assign continue (label after-call200308172125477))
  (goto (label compound-apply-compiled))
compiled-branch200308172125474
  (assign continue (label after-call200308172125477))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172125476
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172125473
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172125477
  (restore env)
  (restore continue)
  (comment (if (quoted? exp) (compile-quoted exp target linkage) (if (variable? exp) (compile-variable exp target linkage) (if (assignment? exp) (compile-assignment exp target linkage) (if (definition? exp) (compile-definition exp target linkage) (if (if? exp) (compile-if exp target linkage) (if (lambda? exp) (compile-lambda exp target linkage) (if (begin? exp) (compile-sequence (begin-actions exp) target linkage) (if (cond? exp) (compile (cond->if exp) target linkage) (if (let? exp) (compile (let->combination exp) target linkage) (if (let*? exp) (compile (let*->nested-lets exp) target linkage) (if (letrec? exp) (compile (letrec->let exp) target linkage) (if (and? exp) (compile-and (and-expressions exp) target linkage) (if (or? exp) (compile-or (or-expressions exp) target linkage) (if (application? exp) (compile-application exp target linkage) (error "Unknown expression type -- COMPILE" exp))))))))))))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172125471))
true-branch200308172125470
  (comment compile-quoted)
  (assign proc (op lookup-variable-value) (const compile-quoted) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172125490))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172125491))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172125493))
compound-branch200308172125492
  (goto (label compound-apply-compiled))
compiled-branch200308172125491
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172125493
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172125490
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172125494
false-branch200308172125471
  (save continue)
  (save env)
  (comment variable?)
  (assign proc (op lookup-variable-value) (const variable?) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172125510))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172125511))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172125513))
compound-branch200308172125512
  (assign continue (label after-call200308172125514))
  (goto (label compound-apply-compiled))
compiled-branch200308172125511
  (assign continue (label after-call200308172125514))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172125513
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172125510
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172125514
  (restore env)
  (restore continue)
  (comment (if (variable? exp) (compile-variable exp target linkage) (if (assignment? exp) (compile-assignment exp target linkage) (if (definition? exp) (compile-definition exp target linkage) (if (if? exp) (compile-if exp target linkage) (if (lambda? exp) (compile-lambda exp target linkage) (if (begin? exp) (compile-sequence (begin-actions exp) target linkage) (if (cond? exp) (compile (cond->if exp) target linkage) (if (let? exp) (compile (let->combination exp) target linkage) (if (let*? exp) (compile (let*->nested-lets exp) target linkage) (if (letrec? exp) (compile (letrec->let exp) target linkage) (if (and? exp) (compile-and (and-expressions exp) target linkage) (if (or? exp) (compile-or (or-expressions exp) target linkage) (if (application? exp) (compile-application exp target linkage) (error "Unknown expression type -- COMPILE" exp)))))))))))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172125501))
true-branch200308172125500
  (comment compile-variable)
  (assign proc (op lookup-variable-value) (const compile-variable) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172125530))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172125531))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172125533))
compound-branch200308172125532
  (goto (label compound-apply-compiled))
compiled-branch200308172125531
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172125533
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172125530
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172125534
false-branch200308172125501
  (save continue)
  (save env)
  (comment assignment?)
  (assign proc (op lookup-variable-value) (const assignment?) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172125543))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172125544))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172125546))
compound-branch200308172125545
  (assign continue (label after-call200308172125547))
  (goto (label compound-apply-compiled))
compiled-branch200308172125544
  (assign continue (label after-call200308172125547))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172125546
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172125543
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172125547
  (restore env)
  (restore continue)
  (comment (if (assignment? exp) (compile-assignment exp target linkage) (if (definition? exp) (compile-definition exp target linkage) (if (if? exp) (compile-if exp target linkage) (if (lambda? exp) (compile-lambda exp target linkage) (if (begin? exp) (compile-sequence (begin-actions exp) target linkage) (if (cond? exp) (compile (cond->if exp) target linkage) (if (let? exp) (compile (let->combination exp) target linkage) (if (let*? exp) (compile (let*->nested-lets exp) target linkage) (if (letrec? exp) (compile (letrec->let exp) target linkage) (if (and? exp) (compile-and (and-expressions exp) target linkage) (if (or? exp) (compile-or (or-expressions exp) target linkage) (if (application? exp) (compile-application exp target linkage) (error "Unknown expression type -- COMPILE" exp))))))))))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172125541))
true-branch200308172125540
  (comment compile-assignment)
  (assign proc (op lookup-variable-value) (const compile-assignment) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172125560))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172125561))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172125563))
compound-branch200308172125562
  (goto (label compound-apply-compiled))
compiled-branch200308172125561
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172125563
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172125560
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172125564
false-branch200308172125541
  (save continue)
  (save env)
  (comment definition?)
  (assign proc (op lookup-variable-value) (const definition?) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172125580))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172125581))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172125583))
compound-branch200308172125582
  (assign continue (label after-call200308172125584))
  (goto (label compound-apply-compiled))
compiled-branch200308172125581
  (assign continue (label after-call200308172125584))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172125583
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172125580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172125584
  (restore env)
  (restore continue)
  (comment (if (definition? exp) (compile-definition exp target linkage) (if (if? exp) (compile-if exp target linkage) (if (lambda? exp) (compile-lambda exp target linkage) (if (begin? exp) (compile-sequence (begin-actions exp) target linkage) (if (cond? exp) (compile (cond->if exp) target linkage) (if (let? exp) (compile (let->combination exp) target linkage) (if (let*? exp) (compile (let*->nested-lets exp) target linkage) (if (letrec? exp) (compile (letrec->let exp) target linkage) (if (and? exp) (compile-and (and-expressions exp) target linkage) (if (or? exp) (compile-or (or-expressions exp) target linkage) (if (application? exp) (compile-application exp target linkage) (error "Unknown expression type -- COMPILE" exp)))))))))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172125571))
true-branch200308172125570
  (comment compile-definition)
  (assign proc (op lookup-variable-value) (const compile-definition) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172125590))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172125591))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172125593))
compound-branch200308172125592
  (goto (label compound-apply-compiled))
compiled-branch200308172125591
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172125593
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172125590
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172125594
false-branch200308172125571
  (save continue)
  (save env)
  (comment if?)
  (assign proc (op lookup-variable-value) (const if?) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126013))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126014))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126016))
compound-branch200308172126015
  (assign continue (label after-call200308172126017))
  (goto (label compound-apply-compiled))
compiled-branch200308172126014
  (assign continue (label after-call200308172126017))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126016
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126013
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126017
  (restore env)
  (restore continue)
  (comment (if (if? exp) (compile-if exp target linkage) (if (lambda? exp) (compile-lambda exp target linkage) (if (begin? exp) (compile-sequence (begin-actions exp) target linkage) (if (cond? exp) (compile (cond->if exp) target linkage) (if (let? exp) (compile (let->combination exp) target linkage) (if (let*? exp) (compile (let*->nested-lets exp) target linkage) (if (letrec? exp) (compile (letrec->let exp) target linkage) (if (and? exp) (compile-and (and-expressions exp) target linkage) (if (or? exp) (compile-or (or-expressions exp) target linkage) (if (application? exp) (compile-application exp target linkage) (error "Unknown expression type -- COMPILE" exp))))))))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172126011))
true-branch200308172126010
  (comment compile-if)
  (assign proc (op lookup-variable-value) (const compile-if) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126030))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126031))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126033))
compound-branch200308172126032
  (goto (label compound-apply-compiled))
compiled-branch200308172126031
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126033
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172126030
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172126034
false-branch200308172126011
  (save continue)
  (save env)
  (comment lambda?)
  (assign proc (op lookup-variable-value) (const lambda?) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126043))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126044))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126046))
compound-branch200308172126045
  (assign continue (label after-call200308172126047))
  (goto (label compound-apply-compiled))
compiled-branch200308172126044
  (assign continue (label after-call200308172126047))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126046
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126043
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126047
  (restore env)
  (restore continue)
  (comment (if (lambda? exp) (compile-lambda exp target linkage) (if (begin? exp) (compile-sequence (begin-actions exp) target linkage) (if (cond? exp) (compile (cond->if exp) target linkage) (if (let? exp) (compile (let->combination exp) target linkage) (if (let*? exp) (compile (let*->nested-lets exp) target linkage) (if (letrec? exp) (compile (letrec->let exp) target linkage) (if (and? exp) (compile-and (and-expressions exp) target linkage) (if (or? exp) (compile-or (or-expressions exp) target linkage) (if (application? exp) (compile-application exp target linkage) (error "Unknown expression type -- COMPILE" exp)))))))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172126041))
true-branch200308172126040
  (comment compile-lambda)
  (assign proc (op lookup-variable-value) (const compile-lambda) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126060))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126061))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126063))
compound-branch200308172126062
  (goto (label compound-apply-compiled))
compiled-branch200308172126061
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126063
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172126060
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172126064
false-branch200308172126041
  (save continue)
  (save env)
  (comment begin?)
  (assign proc (op lookup-variable-value) (const begin?) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126080))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126081))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126083))
compound-branch200308172126082
  (assign continue (label after-call200308172126084))
  (goto (label compound-apply-compiled))
compiled-branch200308172126081
  (assign continue (label after-call200308172126084))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126083
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126080
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126084
  (restore env)
  (restore continue)
  (comment (if (begin? exp) (compile-sequence (begin-actions exp) target linkage) (if (cond? exp) (compile (cond->if exp) target linkage) (if (let? exp) (compile (let->combination exp) target linkage) (if (let*? exp) (compile (let*->nested-lets exp) target linkage) (if (letrec? exp) (compile (letrec->let exp) target linkage) (if (and? exp) (compile-and (and-expressions exp) target linkage) (if (or? exp) (compile-or (or-expressions exp) target linkage) (if (application? exp) (compile-application exp target linkage) (error "Unknown expression type -- COMPILE" exp))))))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172126071))
true-branch200308172126070
  (comment compile-sequence)
  (assign proc (op lookup-variable-value) (const compile-sequence) (reg env))
  (save continue)
  (save proc)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment begin-actions)
  (assign proc (op lookup-variable-value) (const begin-actions) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126090))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126091))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126093))
compound-branch200308172126092
  (assign continue (label after-call200308172126094))
  (goto (label compound-apply-compiled))
compiled-branch200308172126091
  (assign continue (label after-call200308172126094))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126093
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126090
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126094
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126110))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126111))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126113))
compound-branch200308172126112
  (goto (label compound-apply-compiled))
compiled-branch200308172126111
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126113
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172126110
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172126114
false-branch200308172126071
  (save continue)
  (save env)
  (comment cond?)
  (assign proc (op lookup-variable-value) (const cond?) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126123))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126124))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126126))
compound-branch200308172126125
  (assign continue (label after-call200308172126127))
  (goto (label compound-apply-compiled))
compiled-branch200308172126124
  (assign continue (label after-call200308172126127))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126126
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126123
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126127
  (restore env)
  (restore continue)
  (comment (if (cond? exp) (compile (cond->if exp) target linkage) (if (let? exp) (compile (let->combination exp) target linkage) (if (let*? exp) (compile (let*->nested-lets exp) target linkage) (if (letrec? exp) (compile (letrec->let exp) target linkage) (if (and? exp) (compile-and (and-expressions exp) target linkage) (if (or? exp) (compile-or (or-expressions exp) target linkage) (if (application? exp) (compile-application exp target linkage) (error "Unknown expression type -- COMPILE" exp)))))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172126121))
true-branch200308172126120
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save continue)
  (save proc)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment cond->if)
  (assign proc (op lookup-variable-value) (const cond->if) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126140))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126141))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126143))
compound-branch200308172126142
  (assign continue (label after-call200308172126144))
  (goto (label compound-apply-compiled))
compiled-branch200308172126141
  (assign continue (label after-call200308172126144))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126143
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126140
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126144
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126160))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126161))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126163))
compound-branch200308172126162
  (goto (label compound-apply-compiled))
compiled-branch200308172126161
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126163
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172126160
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172126164
false-branch200308172126121
  (save continue)
  (save env)
  (comment let?)
  (assign proc (op lookup-variable-value) (const let?) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126173))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126174))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126176))
compound-branch200308172126175
  (assign continue (label after-call200308172126177))
  (goto (label compound-apply-compiled))
compiled-branch200308172126174
  (assign continue (label after-call200308172126177))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126176
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126173
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126177
  (restore env)
  (restore continue)
  (comment (if (let? exp) (compile (let->combination exp) target linkage) (if (let*? exp) (compile (let*->nested-lets exp) target linkage) (if (letrec? exp) (compile (letrec->let exp) target linkage) (if (and? exp) (compile-and (and-expressions exp) target linkage) (if (or? exp) (compile-or (or-expressions exp) target linkage) (if (application? exp) (compile-application exp target linkage) (error "Unknown expression type -- COMPILE" exp))))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172126171))
true-branch200308172126170
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save continue)
  (save proc)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment let->combination)
  (assign proc (op lookup-variable-value) (const let->combination) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126190))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126191))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126193))
compound-branch200308172126192
  (assign continue (label after-call200308172126194))
  (goto (label compound-apply-compiled))
compiled-branch200308172126191
  (assign continue (label after-call200308172126194))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126193
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126190
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126194
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126210))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126211))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126213))
compound-branch200308172126212
  (goto (label compound-apply-compiled))
compiled-branch200308172126211
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126213
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172126210
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172126214
false-branch200308172126171
  (save continue)
  (save env)
  (comment let*?)
  (assign proc (op lookup-variable-value) (const let*?) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126223))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126224))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126226))
compound-branch200308172126225
  (assign continue (label after-call200308172126227))
  (goto (label compound-apply-compiled))
compiled-branch200308172126224
  (assign continue (label after-call200308172126227))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126226
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126223
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126227
  (restore env)
  (restore continue)
  (comment (if (let*? exp) (compile (let*->nested-lets exp) target linkage) (if (letrec? exp) (compile (letrec->let exp) target linkage) (if (and? exp) (compile-and (and-expressions exp) target linkage) (if (or? exp) (compile-or (or-expressions exp) target linkage) (if (application? exp) (compile-application exp target linkage) (error "Unknown expression type -- COMPILE" exp)))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172126221))
true-branch200308172126220
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save continue)
  (save proc)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment let*->nested-lets)
  (assign proc (op lookup-variable-value) (const let*->nested-lets) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126240))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126241))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126243))
compound-branch200308172126242
  (assign continue (label after-call200308172126244))
  (goto (label compound-apply-compiled))
compiled-branch200308172126241
  (assign continue (label after-call200308172126244))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126243
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126240
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126244
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126260))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126261))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126263))
compound-branch200308172126262
  (goto (label compound-apply-compiled))
compiled-branch200308172126261
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126263
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172126260
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172126264
false-branch200308172126221
  (save continue)
  (save env)
  (comment letrec?)
  (assign proc (op lookup-variable-value) (const letrec?) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126273))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126274))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126276))
compound-branch200308172126275
  (assign continue (label after-call200308172126277))
  (goto (label compound-apply-compiled))
compiled-branch200308172126274
  (assign continue (label after-call200308172126277))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126276
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126273
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126277
  (restore env)
  (restore continue)
  (comment (if (letrec? exp) (compile (letrec->let exp) target linkage) (if (and? exp) (compile-and (and-expressions exp) target linkage) (if (or? exp) (compile-or (or-expressions exp) target linkage) (if (application? exp) (compile-application exp target linkage) (error "Unknown expression type -- COMPILE" exp))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172126271))
true-branch200308172126270
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save continue)
  (save proc)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment letrec->let)
  (assign proc (op lookup-variable-value) (const letrec->let) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126290))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126291))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126293))
compound-branch200308172126292
  (assign continue (label after-call200308172126294))
  (goto (label compound-apply-compiled))
compiled-branch200308172126291
  (assign continue (label after-call200308172126294))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126293
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126290
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126294
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126310))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126311))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126313))
compound-branch200308172126312
  (goto (label compound-apply-compiled))
compiled-branch200308172126311
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126313
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172126310
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172126314
false-branch200308172126271
  (save continue)
  (save env)
  (comment and?)
  (assign proc (op lookup-variable-value) (const and?) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126323))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126324))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126326))
compound-branch200308172126325
  (assign continue (label after-call200308172126327))
  (goto (label compound-apply-compiled))
compiled-branch200308172126324
  (assign continue (label after-call200308172126327))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126326
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126323
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126327
  (restore env)
  (restore continue)
  (comment (if (and? exp) (compile-and (and-expressions exp) target linkage) (if (or? exp) (compile-or (or-expressions exp) target linkage) (if (application? exp) (compile-application exp target linkage) (error "Unknown expression type -- COMPILE" exp)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172126321))
true-branch200308172126320
  (comment compile-and)
  (assign proc (op lookup-variable-value) (const compile-and) (reg env))
  (save continue)
  (save proc)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment and-expressions)
  (assign proc (op lookup-variable-value) (const and-expressions) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126340))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126341))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126343))
compound-branch200308172126342
  (assign continue (label after-call200308172126344))
  (goto (label compound-apply-compiled))
compiled-branch200308172126341
  (assign continue (label after-call200308172126344))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126343
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126340
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126344
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126360))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126361))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126363))
compound-branch200308172126362
  (goto (label compound-apply-compiled))
compiled-branch200308172126361
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126363
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172126360
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172126364
false-branch200308172126321
  (save continue)
  (save env)
  (comment or?)
  (assign proc (op lookup-variable-value) (const or?) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126373))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126374))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126376))
compound-branch200308172126375
  (assign continue (label after-call200308172126377))
  (goto (label compound-apply-compiled))
compiled-branch200308172126374
  (assign continue (label after-call200308172126377))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126376
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126373
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126377
  (restore env)
  (restore continue)
  (comment (if (or? exp) (compile-or (or-expressions exp) target linkage) (if (application? exp) (compile-application exp target linkage) (error "Unknown expression type -- COMPILE" exp))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172126371))
true-branch200308172126370
  (comment compile-or)
  (assign proc (op lookup-variable-value) (const compile-or) (reg env))
  (save continue)
  (save proc)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment or-expressions)
  (assign proc (op lookup-variable-value) (const or-expressions) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126390))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126391))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126393))
compound-branch200308172126392
  (assign continue (label after-call200308172126394))
  (goto (label compound-apply-compiled))
compiled-branch200308172126391
  (assign continue (label after-call200308172126394))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126393
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126390
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126394
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126410))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126411))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126413))
compound-branch200308172126412
  (goto (label compound-apply-compiled))
compiled-branch200308172126411
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126413
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172126410
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172126414
false-branch200308172126371
  (save continue)
  (save env)
  (comment application?)
  (assign proc (op lookup-variable-value) (const application?) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126423))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126424))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126426))
compound-branch200308172126425
  (assign continue (label after-call200308172126427))
  (goto (label compound-apply-compiled))
compiled-branch200308172126424
  (assign continue (label after-call200308172126427))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126426
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172126423
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172126427
  (restore env)
  (restore continue)
  (comment (if (application? exp) (compile-application exp target linkage) (error "Unknown expression type -- COMPILE" exp)))
  (test (op false?) (reg val))
  (branch (label false-branch200308172126421))
true-branch200308172126420
  (comment compile-application)
  (assign proc (op lookup-variable-value) (const compile-application) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126440))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126441))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126443))
compound-branch200308172126442
  (goto (label compound-apply-compiled))
compiled-branch200308172126441
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126443
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172126440
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172126444
false-branch200308172126421
  (comment error)
  (assign proc (op lookup-variable-value) (const error) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (comment "Unknown expression type -- COMPILE")
  (assign val  (const "Unknown expression type -- COMPILE"))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172126460))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172126461))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172126463))
compound-branch200308172126462
  (goto (label compound-apply-compiled))
compiled-branch200308172126461
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172126463
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172126460
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172126464
after-if200308172126422
after-if200308172126372
after-if200308172126322
after-if200308172126272
after-if200308172126222
after-if200308172126172
after-if200308172126122
after-if200308172126072
after-if200308172126042
after-if200308172126012
after-if200308172125572
after-if200308172125542
after-if200308172125502
after-if200308172125472
after-if200308172125444
after-lambda200308172125441
  (comment (define (compile exp target linkage) (cond ((self-evaluating? exp) (compile-self-evaluating exp target linkage)) ((quoted? exp) (compile-quoted exp target linkage)) ((variable? exp) (compile-variable exp target linkage)) ((assignment? exp) (compile-assignment exp target linkage)) ((definition? exp) (compile-definition exp target linkage)) ((if? exp) (compile-if exp target linkage)) ((lambda? exp) (compile-lambda exp target linkage)) ((begin? exp) (compile-sequence (begin-actions exp) target linkage)) ((cond? exp) (compile (cond->if exp) target linkage)) ((let? exp) (compile (let->combination exp) target linkage)) ((let*? exp) (compile (let*->nested-lets exp) target linkage)) ((letrec? exp) (compile (letrec->let exp) target linkage)) ((and? exp) (compile-and (and-expressions exp) target linkage)) ((or? exp) (compile-or (or-expressions exp) target linkage)) ((application? exp) (compile-application exp target linkage)) (else (error "Unknown expression type -- COMPILE" exp)))))
  (perform (op define-variable!) (const compile) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (needs modifies statements comment) (list needs modifies (if (null? comment) statements (cons (list (quote comment) comment) statements)))))
  (assign val (op make-compiled-procedure) (label entry200308172128280) (reg env))
  (goto (label after-lambda200308172128281))
  (comment (lambda (needs modifies statements comment) (list needs modifies (if (null? comment) statements (cons (list (quote comment) comment) statements)))))
entry200308172128280
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (needs modifies statements comment)) (reg argl) (reg env))
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save continue)
  (save proc)
  (save env)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment comment)
  (assign val (op lookup-variable-value) (const comment) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172128293))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172128294))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172128296))
compound-branch200308172128295
  (assign continue (label after-call200308172128297))
  (goto (label compound-apply-compiled))
compiled-branch200308172128294
  (assign continue (label after-call200308172128297))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172128296
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172128293
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172128297
  (restore env)
  (comment (if (null? comment) statements (cons (list (quote comment) comment) statements)))
  (test (op false?) (reg val))
  (branch (label false-branch200308172128291))
true-branch200308172128290
  (comment statements)
  (assign val (op lookup-variable-value) (const statements) (reg env))
  (goto (label after-if200308172128292))
false-branch200308172128291
  (comment cons)
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save proc)
  (comment statements)
  (assign val (op lookup-variable-value) (const statements) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment comment)
  (assign val (op lookup-variable-value) (const comment) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote comment))
  (assign val  (const comment))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172128310))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172128311))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172128313))
compound-branch200308172128312
  (assign continue (label after-call200308172128314))
  (goto (label compound-apply-compiled))
compiled-branch200308172128311
  (assign continue (label after-call200308172128314))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172128313
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172128310
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172128314
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172128320))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172128321))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172128323))
compound-branch200308172128322
  (assign continue (label after-call200308172128324))
  (goto (label compound-apply-compiled))
compiled-branch200308172128321
  (assign continue (label after-call200308172128324))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172128323
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172128320
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172128324
after-if200308172128292
  (assign argl (op list) (reg val))
  (restore env)
  (comment modifies)
  (assign val (op lookup-variable-value) (const modifies) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment needs)
  (assign val (op lookup-variable-value) (const needs) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172128350))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172128351))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172128353))
compound-branch200308172128352
  (goto (label compound-apply-compiled))
compiled-branch200308172128351
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172128353
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172128350
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172128354
after-lambda200308172128281
  (comment (define (make-instruction-sequence needs modifies statements comment) (list needs modifies (if (null? comment) statements (cons (list (quote comment) comment) statements)))))
  (perform (op define-variable!) (const make-instruction-sequence) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda () (make-instruction-sequence (quote ()) (quote ()) (quote ()) (quote ()))))
  (assign val (op make-compiled-procedure) (label entry200308172128380) (reg env))
  (goto (label after-lambda200308172128381))
  (comment (lambda () (make-instruction-sequence (quote ()) (quote ()) (quote ()) (quote ()))))
entry200308172128380
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const ()) (reg argl) (reg env))
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172128400))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172128401))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172128403))
compound-branch200308172128402
  (goto (label compound-apply-compiled))
compiled-branch200308172128401
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172128403
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172128400
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172128404
after-lambda200308172128381
  (comment (define (empty-instruction-sequence) (make-instruction-sequence (quote ()) (quote ()) (quote ()) (quote ()))))
  (perform (op define-variable!) (const empty-instruction-sequence) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (linkage) (cond ((eq? linkage (quote return)) (make-instruction-sequence (quote (continue)) (quote ()) (quote ((goto (reg continue)))) (quote ()))) ((eq? linkage (quote next)) (empty-instruction-sequence)) (else (make-instruction-sequence (quote ()) (quote ()) (list (list (quote goto) (list (quote label) linkage))) (quote ()))))))
  (assign val (op make-compiled-procedure) (label entry200308172128410) (reg env))
  (goto (label after-lambda200308172128411))
  (comment (lambda (linkage) (cond ((eq? linkage (quote return)) (make-instruction-sequence (quote (continue)) (quote ()) (quote ((goto (reg continue)))) (quote ()))) ((eq? linkage (quote next)) (empty-instruction-sequence)) (else (make-instruction-sequence (quote ()) (quote ()) (list (list (quote goto) (list (quote label) linkage))) (quote ()))))))
entry200308172128410
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (linkage)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote return))
  (assign val  (const return))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172128420))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172128421))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172128423))
compound-branch200308172128422
  (assign continue (label after-call200308172128424))
  (goto (label compound-apply-compiled))
compiled-branch200308172128421
  (assign continue (label after-call200308172128424))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172128423
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172128420
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172128424
  (restore env)
  (restore continue)
  (comment (if (eq? linkage (quote return)) (make-instruction-sequence (quote (continue)) (quote ()) (quote ((goto (reg continue)))) (quote ())) (if (eq? linkage (quote next)) (empty-instruction-sequence) (make-instruction-sequence (quote ()) (quote ()) (list (list (quote goto) (list (quote label) linkage))) (quote ())))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172128413))
true-branch200308172128412
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (comment (quote ((goto (reg continue)))))
  (assign val  (const ((goto (reg continue)))))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (continue)))
  (assign val  (const (continue)))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172128440))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172128441))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172128443))
compound-branch200308172128442
  (goto (label compound-apply-compiled))
compiled-branch200308172128441
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172128443
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172128440
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172128444
false-branch200308172128413
  (save continue)
  (save env)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote next))
  (assign val  (const next))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172128460))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172128461))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172128463))
compound-branch200308172128462
  (assign continue (label after-call200308172128464))
  (goto (label compound-apply-compiled))
compiled-branch200308172128461
  (assign continue (label after-call200308172128464))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172128463
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172128460
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172128464
  (restore env)
  (restore continue)
  (comment (if (eq? linkage (quote next)) (empty-instruction-sequence) (make-instruction-sequence (quote ()) (quote ()) (list (list (quote goto) (list (quote label) linkage))) (quote ()))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172128451))
true-branch200308172128450
  (comment empty-instruction-sequence)
  (assign proc (op lookup-variable-value) (const empty-instruction-sequence) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172128470))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172128471))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172128473))
compound-branch200308172128472
  (goto (label compound-apply-compiled))
compiled-branch200308172128471
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172128473
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172128470
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172128474
false-branch200308172128451
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save continue)
  (save proc)
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote label))
  (assign val  (const label))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172128490))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172128491))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172128493))
compound-branch200308172128492
  (assign continue (label after-call200308172128494))
  (goto (label compound-apply-compiled))
compiled-branch200308172128491
  (assign continue (label after-call200308172128494))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172128493
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172128490
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172128494
  (assign argl (op list) (reg val))
  (comment (quote goto))
  (assign val  (const goto))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172128500))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172128501))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172128503))
compound-branch200308172128502
  (assign continue (label after-call200308172128504))
  (goto (label compound-apply-compiled))
compiled-branch200308172128501
  (assign continue (label after-call200308172128504))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172128503
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172128500
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172128504
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172128520))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172128521))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172128523))
compound-branch200308172128522
  (assign continue (label after-call200308172128524))
  (goto (label compound-apply-compiled))
compiled-branch200308172128521
  (assign continue (label after-call200308172128524))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172128523
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172128520
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172128524
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172128550))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172128551))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172128553))
compound-branch200308172128552
  (goto (label compound-apply-compiled))
compiled-branch200308172128551
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172128553
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172128550
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172128554
after-if200308172128452
after-if200308172128414
after-lambda200308172128411
  (comment (define (compile-linkage linkage) (cond ((eq? linkage (quote return)) (make-instruction-sequence (quote (continue)) (quote ()) (quote ((goto (reg continue)))) (quote ()))) ((eq? linkage (quote next)) (empty-instruction-sequence)) (else (make-instruction-sequence (quote ()) (quote ()) (list (list (quote goto) (list (quote label) linkage))) (quote ()))))))
  (perform (op define-variable!) (const compile-linkage) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (linkage instruction-sequence) (preserving (quote (continue)) instruction-sequence (compile-linkage linkage))))
  (assign val (op make-compiled-procedure) (label entry200308172129030) (reg env))
  (goto (label after-lambda200308172129031))
  (comment (lambda (linkage instruction-sequence) (preserving (quote (continue)) instruction-sequence (compile-linkage linkage))))
entry200308172129030
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (linkage instruction-sequence)) (reg argl) (reg env))
  (comment preserving)
  (assign proc (op lookup-variable-value) (const preserving) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment compile-linkage)
  (assign proc (op lookup-variable-value) (const compile-linkage) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129032))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129033))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129035))
compound-branch200308172129034
  (assign continue (label after-call200308172129036))
  (goto (label compound-apply-compiled))
compiled-branch200308172129033
  (assign continue (label after-call200308172129036))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129035
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129032
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129036
  (assign argl (op list) (reg val))
  (restore env)
  (comment instruction-sequence)
  (assign val (op lookup-variable-value) (const instruction-sequence) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (continue)))
  (assign val  (const (continue)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129050))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129051))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129053))
compound-branch200308172129052
  (goto (label compound-apply-compiled))
compiled-branch200308172129051
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129053
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172129050
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172129054
after-lambda200308172129031
  (comment (define (end-with-linkage linkage instruction-sequence) (preserving (quote (continue)) instruction-sequence (compile-linkage linkage))))
  (perform (op define-variable!) (const end-with-linkage) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (exp target linkage) (end-with-linkage linkage (make-instruction-sequence (quote ()) (list target) (list (list (quote assign) target (list (quote const) exp))) exp))))
  (assign val (op make-compiled-procedure) (label entry200308172129070) (reg env))
  (goto (label after-lambda200308172129071))
  (comment (lambda (exp target linkage) (end-with-linkage linkage (make-instruction-sequence (quote ()) (list target) (list (list (quote assign) target (list (quote const) exp))) exp))))
entry200308172129070
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp target linkage)) (reg argl) (reg env))
  (comment end-with-linkage)
  (assign proc (op lookup-variable-value) (const end-with-linkage) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save proc)
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (save env)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote const))
  (assign val  (const const))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129100))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129101))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129103))
compound-branch200308172129102
  (assign continue (label after-call200308172129104))
  (goto (label compound-apply-compiled))
compiled-branch200308172129101
  (assign continue (label after-call200308172129104))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129103
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129100
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129104
  (assign argl (op list) (reg val))
  (restore env)
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote assign))
  (assign val  (const assign))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129110))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129111))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129113))
compound-branch200308172129112
  (assign continue (label after-call200308172129114))
  (goto (label compound-apply-compiled))
compiled-branch200308172129111
  (assign continue (label after-call200308172129114))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129113
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129110
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129114
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129130))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129131))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129133))
compound-branch200308172129132
  (assign continue (label after-call200308172129134))
  (goto (label compound-apply-compiled))
compiled-branch200308172129131
  (assign continue (label after-call200308172129134))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129133
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129130
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129134
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129080))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129081))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129083))
compound-branch200308172129082
  (assign continue (label after-call200308172129084))
  (goto (label compound-apply-compiled))
compiled-branch200308172129081
  (assign continue (label after-call200308172129084))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129083
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129080
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129084
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129160))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129161))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129163))
compound-branch200308172129162
  (assign continue (label after-call200308172129164))
  (goto (label compound-apply-compiled))
compiled-branch200308172129161
  (assign continue (label after-call200308172129164))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129163
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129160
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129164
  (assign argl (op list) (reg val))
  (restore env)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129180))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129181))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129183))
compound-branch200308172129182
  (goto (label compound-apply-compiled))
compiled-branch200308172129181
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129183
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172129180
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172129184
after-lambda200308172129071
  (comment (define (compile-self-evaluating exp target linkage) (end-with-linkage linkage (make-instruction-sequence (quote ()) (list target) (list (list (quote assign) target (list (quote const) exp))) exp))))
  (perform (op define-variable!) (const compile-self-evaluating) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (exp target linkage) (end-with-linkage linkage (make-instruction-sequence (quote ()) (list target) (list (list (quote assign) target (list (quote const) (text-of-quotation exp)))) exp))))
  (assign val (op make-compiled-procedure) (label entry200308172129220) (reg env))
  (goto (label after-lambda200308172129221))
  (comment (lambda (exp target linkage) (end-with-linkage linkage (make-instruction-sequence (quote ()) (list target) (list (list (quote assign) target (list (quote const) (text-of-quotation exp)))) exp))))
entry200308172129220
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp target linkage)) (reg argl) (reg env))
  (comment end-with-linkage)
  (assign proc (op lookup-variable-value) (const end-with-linkage) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save proc)
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (save env)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment text-of-quotation)
  (assign proc (op lookup-variable-value) (const text-of-quotation) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129250))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129251))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129253))
compound-branch200308172129252
  (assign continue (label after-call200308172129254))
  (goto (label compound-apply-compiled))
compiled-branch200308172129251
  (assign continue (label after-call200308172129254))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129253
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129250
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129254
  (assign argl (op list) (reg val))
  (comment (quote const))
  (assign val  (const const))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129260))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129261))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129263))
compound-branch200308172129262
  (assign continue (label after-call200308172129264))
  (goto (label compound-apply-compiled))
compiled-branch200308172129261
  (assign continue (label after-call200308172129264))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129263
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129260
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129264
  (assign argl (op list) (reg val))
  (restore env)
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote assign))
  (assign val  (const assign))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129280))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129281))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129283))
compound-branch200308172129282
  (assign continue (label after-call200308172129284))
  (goto (label compound-apply-compiled))
compiled-branch200308172129281
  (assign continue (label after-call200308172129284))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129283
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129280
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129284
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129300))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129301))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129303))
compound-branch200308172129302
  (assign continue (label after-call200308172129304))
  (goto (label compound-apply-compiled))
compiled-branch200308172129301
  (assign continue (label after-call200308172129304))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129303
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129300
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129304
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129230))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129231))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129233))
compound-branch200308172129232
  (assign continue (label after-call200308172129234))
  (goto (label compound-apply-compiled))
compiled-branch200308172129231
  (assign continue (label after-call200308172129234))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129233
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129230
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129234
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129330))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129331))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129333))
compound-branch200308172129332
  (assign continue (label after-call200308172129334))
  (goto (label compound-apply-compiled))
compiled-branch200308172129331
  (assign continue (label after-call200308172129334))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129333
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129330
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129334
  (assign argl (op list) (reg val))
  (restore env)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129360))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129361))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129363))
compound-branch200308172129362
  (goto (label compound-apply-compiled))
compiled-branch200308172129361
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129363
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172129360
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172129364
after-lambda200308172129221
  (comment (define (compile-quoted exp target linkage) (end-with-linkage linkage (make-instruction-sequence (quote ()) (list target) (list (list (quote assign) target (list (quote const) (text-of-quotation exp)))) exp))))
  (perform (op define-variable!) (const compile-quoted) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (exp target linkage) (end-with-linkage linkage (make-instruction-sequence (quote (env)) (list target) (list (list (quote assign) target (quote (op lookup-variable-value)) (list (quote const) exp) (quote (reg env)))) exp))))
  (assign val (op make-compiled-procedure) (label entry200308172129400) (reg env))
  (goto (label after-lambda200308172129401))
  (comment (lambda (exp target linkage) (end-with-linkage linkage (make-instruction-sequence (quote (env)) (list target) (list (list (quote assign) target (quote (op lookup-variable-value)) (list (quote const) exp) (quote (reg env)))) exp))))
entry200308172129400
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp target linkage)) (reg argl) (reg env))
  (comment end-with-linkage)
  (assign proc (op lookup-variable-value) (const end-with-linkage) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save proc)
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment (quote (reg env)))
  (assign val  (const (reg env)))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote const))
  (assign val  (const const))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129430))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129431))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129433))
compound-branch200308172129432
  (assign continue (label after-call200308172129434))
  (goto (label compound-apply-compiled))
compiled-branch200308172129431
  (assign continue (label after-call200308172129434))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129433
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129430
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129434
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (comment (quote (op lookup-variable-value)))
  (assign val  (const (op lookup-variable-value)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote assign))
  (assign val  (const assign))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129450))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129451))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129453))
compound-branch200308172129452
  (assign continue (label after-call200308172129454))
  (goto (label compound-apply-compiled))
compiled-branch200308172129451
  (assign continue (label after-call200308172129454))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129453
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129450
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129454
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129460))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129461))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129463))
compound-branch200308172129462
  (assign continue (label after-call200308172129464))
  (goto (label compound-apply-compiled))
compiled-branch200308172129461
  (assign continue (label after-call200308172129464))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129463
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129460
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129464
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129410))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129411))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129413))
compound-branch200308172129412
  (assign continue (label after-call200308172129414))
  (goto (label compound-apply-compiled))
compiled-branch200308172129411
  (assign continue (label after-call200308172129414))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129413
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129410
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129414
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (env)))
  (assign val  (const (env)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129500))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129501))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129503))
compound-branch200308172129502
  (assign continue (label after-call200308172129504))
  (goto (label compound-apply-compiled))
compiled-branch200308172129501
  (assign continue (label after-call200308172129504))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129503
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129500
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129504
  (assign argl (op list) (reg val))
  (restore env)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129520))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129521))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129523))
compound-branch200308172129522
  (goto (label compound-apply-compiled))
compiled-branch200308172129521
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129523
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172129520
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172129524
after-lambda200308172129401
  (comment (define (compile-variable exp target linkage) (end-with-linkage linkage (make-instruction-sequence (quote (env)) (list target) (list (list (quote assign) target (quote (op lookup-variable-value)) (list (quote const) exp) (quote (reg env)))) exp))))
  (perform (op define-variable!) (const compile-variable) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (exp target linkage) (let ((var (assignment-variable exp)) (get-value-code (compile (assignment-value exp) (quote val) (quote next)))) (end-with-linkage linkage (preserving (quote (env)) get-value-code (make-instruction-sequence (quote (env val)) (list target) (list (list (quote perform) (quote (op set-variable-value!)) (list (quote const) var) (quote (reg val)) (quote (reg env))) (list (quote assign) target (quote (const ok)))) exp))))))
  (assign val (op make-compiled-procedure) (label entry200308172129560) (reg env))
  (goto (label after-lambda200308172129561))
  (comment (lambda (exp target linkage) (let ((var (assignment-variable exp)) (get-value-code (compile (assignment-value exp) (quote val) (quote next)))) (end-with-linkage linkage (preserving (quote (env)) get-value-code (make-instruction-sequence (quote (env val)) (list target) (list (list (quote perform) (quote (op set-variable-value!)) (list (quote const) var) (quote (reg val)) (quote (reg env))) (list (quote assign) target (quote (const ok)))) exp))))))
entry200308172129560
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp target linkage)) (reg argl) (reg env))
  (comment (lambda (var get-value-code) (end-with-linkage linkage (preserving (quote (env)) get-value-code (make-instruction-sequence (quote (env val)) (list target) (list (list (quote perform) (quote (op set-variable-value!)) (list (quote const) var) (quote (reg val)) (quote (reg env))) (list (quote assign) target (quote (const ok)))) exp)))))
  (assign proc (op make-compiled-procedure) (label entry200308172129562) (reg env))
  (goto (label after-lambda200308172129563))
  (comment (lambda (var get-value-code) (end-with-linkage linkage (preserving (quote (env)) get-value-code (make-instruction-sequence (quote (env val)) (list target) (list (list (quote perform) (quote (op set-variable-value!)) (list (quote const) var) (quote (reg val)) (quote (reg env))) (list (quote assign) target (quote (const ok)))) exp)))))
entry200308172129562
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (var get-value-code)) (reg argl) (reg env))
  (comment end-with-linkage)
  (assign proc (op lookup-variable-value) (const end-with-linkage) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment preserving)
  (assign proc (op lookup-variable-value) (const preserving) (reg env))
  (save proc)
  (save env)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save proc)
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (save env)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment (quote (const ok)))
  (assign val  (const (const ok)))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote assign))
  (assign val  (const assign))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130050))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130051))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130053))
compound-branch200308172130052
  (assign continue (label after-call200308172130054))
  (goto (label compound-apply-compiled))
compiled-branch200308172130051
  (assign continue (label after-call200308172130054))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130053
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130050
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130054
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment (quote (reg env)))
  (assign val  (const (reg env)))
  (assign argl (op list) (reg val))
  (comment (quote (reg val)))
  (assign val  (const (reg val)))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment var)
  (assign val (op lookup-variable-value) (const var) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote const))
  (assign val  (const const))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130000))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130001))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130003))
compound-branch200308172130002
  (assign continue (label after-call200308172130004))
  (goto (label compound-apply-compiled))
compiled-branch200308172130001
  (assign continue (label after-call200308172130004))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130003
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130000
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130004
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (op set-variable-value!)))
  (assign val  (const (op set-variable-value!)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote perform))
  (assign val  (const perform))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130020))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130021))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130023))
compound-branch200308172130022
  (assign continue (label after-call200308172130024))
  (goto (label compound-apply-compiled))
compiled-branch200308172130021
  (assign continue (label after-call200308172130024))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130023
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130020
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130024
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130060))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130061))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130063))
compound-branch200308172130062
  (assign continue (label after-call200308172130064))
  (goto (label compound-apply-compiled))
compiled-branch200308172130061
  (assign continue (label after-call200308172130064))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130063
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130060
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130064
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172129580))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172129581))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172129583))
compound-branch200308172129582
  (assign continue (label after-call200308172129584))
  (goto (label compound-apply-compiled))
compiled-branch200308172129581
  (assign continue (label after-call200308172129584))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172129583
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172129580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172129584
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (env val)))
  (assign val  (const (env val)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130100))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130101))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130103))
compound-branch200308172130102
  (assign continue (label after-call200308172130104))
  (goto (label compound-apply-compiled))
compiled-branch200308172130101
  (assign continue (label after-call200308172130104))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130103
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130100
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130104
  (assign argl (op list) (reg val))
  (restore env)
  (comment get-value-code)
  (assign val (op lookup-variable-value) (const get-value-code) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (env)))
  (assign val  (const (env)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130130))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130131))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130133))
compound-branch200308172130132
  (assign continue (label after-call200308172130134))
  (goto (label compound-apply-compiled))
compiled-branch200308172130131
  (assign continue (label after-call200308172130134))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130133
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130130
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130134
  (assign argl (op list) (reg val))
  (restore env)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130160))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130161))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130163))
compound-branch200308172130162
  (goto (label compound-apply-compiled))
compiled-branch200308172130161
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130163
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172130160
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172130164
after-lambda200308172129563
  (save continue)
  (save proc)
  (save env)
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save proc)
  (comment (quote next))
  (assign val  (const next))
  (assign argl (op list) (reg val))
  (comment (quote val))
  (assign val  (const val))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment assignment-value)
  (assign proc (op lookup-variable-value) (const assignment-value) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130220))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130221))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130223))
compound-branch200308172130222
  (assign continue (label after-call200308172130224))
  (goto (label compound-apply-compiled))
compiled-branch200308172130221
  (assign continue (label after-call200308172130224))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130223
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130220
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130224
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130240))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130241))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130243))
compound-branch200308172130242
  (assign continue (label after-call200308172130244))
  (goto (label compound-apply-compiled))
compiled-branch200308172130241
  (assign continue (label after-call200308172130244))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130243
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130240
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130244
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment assignment-variable)
  (assign proc (op lookup-variable-value) (const assignment-variable) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130200))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130201))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130203))
compound-branch200308172130202
  (assign continue (label after-call200308172130204))
  (goto (label compound-apply-compiled))
compiled-branch200308172130201
  (assign continue (label after-call200308172130204))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130203
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130200
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130204
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130260))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130261))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130263))
compound-branch200308172130262
  (goto (label compound-apply-compiled))
compiled-branch200308172130261
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130263
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172130260
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172130264
after-lambda200308172129561
  (comment (define (compile-assignment exp target linkage) (let ((var (assignment-variable exp)) (get-value-code (compile (assignment-value exp) (quote val) (quote next)))) (end-with-linkage linkage (preserving (quote (env)) get-value-code (make-instruction-sequence (quote (env val)) (list target) (list (list (quote perform) (quote (op set-variable-value!)) (list (quote const) var) (quote (reg val)) (quote (reg env))) (list (quote assign) target (quote (const ok)))) exp))))))
  (perform (op define-variable!) (const compile-assignment) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (exp target linkage) (let ((var (definition-variable exp)) (get-value-code (compile (definition-value exp) (quote val) (quote next)))) (end-with-linkage linkage (preserving (quote (env)) get-value-code (make-instruction-sequence (quote (env val)) (list target) (list (list (quote perform) (quote (op define-variable!)) (list (quote const) var) (quote (reg val)) (quote (reg env))) (list (quote assign) target (quote (const ok)))) exp))))))
  (assign val (op make-compiled-procedure) (label entry200308172130310) (reg env))
  (goto (label after-lambda200308172130311))
  (comment (lambda (exp target linkage) (let ((var (definition-variable exp)) (get-value-code (compile (definition-value exp) (quote val) (quote next)))) (end-with-linkage linkage (preserving (quote (env)) get-value-code (make-instruction-sequence (quote (env val)) (list target) (list (list (quote perform) (quote (op define-variable!)) (list (quote const) var) (quote (reg val)) (quote (reg env))) (list (quote assign) target (quote (const ok)))) exp))))))
entry200308172130310
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp target linkage)) (reg argl) (reg env))
  (comment (lambda (var get-value-code) (end-with-linkage linkage (preserving (quote (env)) get-value-code (make-instruction-sequence (quote (env val)) (list target) (list (list (quote perform) (quote (op define-variable!)) (list (quote const) var) (quote (reg val)) (quote (reg env))) (list (quote assign) target (quote (const ok)))) exp)))))
  (assign proc (op make-compiled-procedure) (label entry200308172130312) (reg env))
  (goto (label after-lambda200308172130313))
  (comment (lambda (var get-value-code) (end-with-linkage linkage (preserving (quote (env)) get-value-code (make-instruction-sequence (quote (env val)) (list target) (list (list (quote perform) (quote (op define-variable!)) (list (quote const) var) (quote (reg val)) (quote (reg env))) (list (quote assign) target (quote (const ok)))) exp)))))
entry200308172130312
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (var get-value-code)) (reg argl) (reg env))
  (comment end-with-linkage)
  (assign proc (op lookup-variable-value) (const end-with-linkage) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment preserving)
  (assign proc (op lookup-variable-value) (const preserving) (reg env))
  (save proc)
  (save env)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save proc)
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (save env)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment (quote (const ok)))
  (assign val  (const (const ok)))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote assign))
  (assign val  (const assign))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130390))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130391))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130393))
compound-branch200308172130392
  (assign continue (label after-call200308172130394))
  (goto (label compound-apply-compiled))
compiled-branch200308172130391
  (assign continue (label after-call200308172130394))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130393
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130390
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130394
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment (quote (reg env)))
  (assign val  (const (reg env)))
  (assign argl (op list) (reg val))
  (comment (quote (reg val)))
  (assign val  (const (reg val)))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment var)
  (assign val (op lookup-variable-value) (const var) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote const))
  (assign val  (const const))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130340))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130341))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130343))
compound-branch200308172130342
  (assign continue (label after-call200308172130344))
  (goto (label compound-apply-compiled))
compiled-branch200308172130341
  (assign continue (label after-call200308172130344))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130343
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130340
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130344
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (op define-variable!)))
  (assign val  (const (op define-variable!)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote perform))
  (assign val  (const perform))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130370))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130371))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130373))
compound-branch200308172130372
  (assign continue (label after-call200308172130374))
  (goto (label compound-apply-compiled))
compiled-branch200308172130371
  (assign continue (label after-call200308172130374))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130373
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130370
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130374
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130410))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130411))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130413))
compound-branch200308172130412
  (assign continue (label after-call200308172130414))
  (goto (label compound-apply-compiled))
compiled-branch200308172130411
  (assign continue (label after-call200308172130414))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130413
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130410
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130414
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130320))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130321))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130323))
compound-branch200308172130322
  (assign continue (label after-call200308172130324))
  (goto (label compound-apply-compiled))
compiled-branch200308172130321
  (assign continue (label after-call200308172130324))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130323
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130320
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130324
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (env val)))
  (assign val  (const (env val)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130440))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130441))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130443))
compound-branch200308172130442
  (assign continue (label after-call200308172130444))
  (goto (label compound-apply-compiled))
compiled-branch200308172130441
  (assign continue (label after-call200308172130444))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130443
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130440
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130444
  (assign argl (op list) (reg val))
  (restore env)
  (comment get-value-code)
  (assign val (op lookup-variable-value) (const get-value-code) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (env)))
  (assign val  (const (env)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130470))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130471))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130473))
compound-branch200308172130472
  (assign continue (label after-call200308172130474))
  (goto (label compound-apply-compiled))
compiled-branch200308172130471
  (assign continue (label after-call200308172130474))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130473
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130470
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130474
  (assign argl (op list) (reg val))
  (restore env)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130500))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130501))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130503))
compound-branch200308172130502
  (goto (label compound-apply-compiled))
compiled-branch200308172130501
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130503
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172130500
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172130504
after-lambda200308172130313
  (save continue)
  (save proc)
  (save env)
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save proc)
  (comment (quote next))
  (assign val  (const next))
  (assign argl (op list) (reg val))
  (comment (quote val))
  (assign val  (const val))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment definition-value)
  (assign proc (op lookup-variable-value) (const definition-value) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130560))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130561))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130563))
compound-branch200308172130562
  (assign continue (label after-call200308172130564))
  (goto (label compound-apply-compiled))
compiled-branch200308172130561
  (assign continue (label after-call200308172130564))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130563
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130560
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130564
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130580))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130581))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130583))
compound-branch200308172130582
  (assign continue (label after-call200308172130584))
  (goto (label compound-apply-compiled))
compiled-branch200308172130581
  (assign continue (label after-call200308172130584))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130583
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130584
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment definition-variable)
  (assign proc (op lookup-variable-value) (const definition-variable) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172130550))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172130551))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172130553))
compound-branch200308172130552
  (assign continue (label after-call200308172130554))
  (goto (label compound-apply-compiled))
compiled-branch200308172130551
  (assign continue (label after-call200308172130554))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172130553
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172130550
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172130554
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131000))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131001))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131003))
compound-branch200308172131002
  (goto (label compound-apply-compiled))
compiled-branch200308172131001
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131003
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172131000
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172131004
after-lambda200308172130311
  (comment (define (compile-definition exp target linkage) (let ((var (definition-variable exp)) (get-value-code (compile (definition-value exp) (quote val) (quote next)))) (end-with-linkage linkage (preserving (quote (env)) get-value-code (make-instruction-sequence (quote (env val)) (list target) (list (list (quote perform) (quote (op define-variable!)) (list (quote const) var) (quote (reg val)) (quote (reg env))) (list (quote assign) target (quote (const ok)))) exp))))))
  (perform (op define-variable!) (const compile-definition) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (name) (gensym name)))
  (assign val (op make-compiled-procedure) (label entry200308172131050) (reg env))
  (goto (label after-lambda200308172131051))
  (comment (lambda (name) (gensym name)))
entry200308172131050
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (name)) (reg argl) (reg env))
  (comment gensym)
  (assign proc (op lookup-variable-value) (const gensym) (reg env))
  (comment name)
  (assign val (op lookup-variable-value) (const name) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131060))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131061))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131063))
compound-branch200308172131062
  (goto (label compound-apply-compiled))
compiled-branch200308172131061
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131063
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172131060
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172131064
after-lambda200308172131051
  (comment (define (make-label name) (gensym name)))
  (perform (op define-variable!) (const make-label) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (exp target linkage) (let ((t-branch (make-label (quote true-branch))) (f-branch (make-label (quote false-branch))) (after-if (make-label (quote after-if)))) (let ((consequent-linkage (if (eq? linkage (quote next)) after-if linkage))) (let ((p-code (compile (if-predicate exp) (quote val) (quote next))) (c-code (compile (if-consequent exp) target consequent-linkage)) (a-code (compile (if-alternative exp) target linkage))) (preserving (quote (env continue)) p-code (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (list (quote test) (quote (op false?)) (quote (reg val))) (list (quote branch) (list (quote label) f-branch))) exp) (parallel-instruction-sequences (append-instruction-sequences t-branch c-code) (append-instruction-sequences f-branch a-code)) after-if)))))))
  (assign val (op make-compiled-procedure) (label entry200308172131070) (reg env))
  (goto (label after-lambda200308172131071))
  (comment (lambda (exp target linkage) (let ((t-branch (make-label (quote true-branch))) (f-branch (make-label (quote false-branch))) (after-if (make-label (quote after-if)))) (let ((consequent-linkage (if (eq? linkage (quote next)) after-if linkage))) (let ((p-code (compile (if-predicate exp) (quote val) (quote next))) (c-code (compile (if-consequent exp) target consequent-linkage)) (a-code (compile (if-alternative exp) target linkage))) (preserving (quote (env continue)) p-code (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (list (quote test) (quote (op false?)) (quote (reg val))) (list (quote branch) (list (quote label) f-branch))) exp) (parallel-instruction-sequences (append-instruction-sequences t-branch c-code) (append-instruction-sequences f-branch a-code)) after-if)))))))
entry200308172131070
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp target linkage)) (reg argl) (reg env))
  (comment (lambda (t-branch f-branch after-if) (let ((consequent-linkage (if (eq? linkage (quote next)) after-if linkage))) (let ((p-code (compile (if-predicate exp) (quote val) (quote next))) (c-code (compile (if-consequent exp) target consequent-linkage)) (a-code (compile (if-alternative exp) target linkage))) (preserving (quote (env continue)) p-code (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (list (quote test) (quote (op false?)) (quote (reg val))) (list (quote branch) (list (quote label) f-branch))) exp) (parallel-instruction-sequences (append-instruction-sequences t-branch c-code) (append-instruction-sequences f-branch a-code)) after-if))))))
  (assign proc (op make-compiled-procedure) (label entry200308172131080) (reg env))
  (goto (label after-lambda200308172131081))
  (comment (lambda (t-branch f-branch after-if) (let ((consequent-linkage (if (eq? linkage (quote next)) after-if linkage))) (let ((p-code (compile (if-predicate exp) (quote val) (quote next))) (c-code (compile (if-consequent exp) target consequent-linkage)) (a-code (compile (if-alternative exp) target linkage))) (preserving (quote (env continue)) p-code (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (list (quote test) (quote (op false?)) (quote (reg val))) (list (quote branch) (list (quote label) f-branch))) exp) (parallel-instruction-sequences (append-instruction-sequences t-branch c-code) (append-instruction-sequences f-branch a-code)) after-if))))))
entry200308172131080
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (t-branch f-branch after-if)) (reg argl) (reg env))
  (comment (lambda (consequent-linkage) (let ((p-code (compile (if-predicate exp) (quote val) (quote next))) (c-code (compile (if-consequent exp) target consequent-linkage)) (a-code (compile (if-alternative exp) target linkage))) (preserving (quote (env continue)) p-code (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (list (quote test) (quote (op false?)) (quote (reg val))) (list (quote branch) (list (quote label) f-branch))) exp) (parallel-instruction-sequences (append-instruction-sequences t-branch c-code) (append-instruction-sequences f-branch a-code)) after-if)))))
  (assign proc (op make-compiled-procedure) (label entry200308172131082) (reg env))
  (goto (label after-lambda200308172131083))
  (comment (lambda (consequent-linkage) (let ((p-code (compile (if-predicate exp) (quote val) (quote next))) (c-code (compile (if-consequent exp) target consequent-linkage)) (a-code (compile (if-alternative exp) target linkage))) (preserving (quote (env continue)) p-code (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (list (quote test) (quote (op false?)) (quote (reg val))) (list (quote branch) (list (quote label) f-branch))) exp) (parallel-instruction-sequences (append-instruction-sequences t-branch c-code) (append-instruction-sequences f-branch a-code)) after-if)))))
entry200308172131082
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (consequent-linkage)) (reg argl) (reg env))
  (comment (lambda (p-code c-code a-code) (preserving (quote (env continue)) p-code (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (list (quote test) (quote (op false?)) (quote (reg val))) (list (quote branch) (list (quote label) f-branch))) exp) (parallel-instruction-sequences (append-instruction-sequences t-branch c-code) (append-instruction-sequences f-branch a-code)) after-if))))
  (assign proc (op make-compiled-procedure) (label entry200308172131084) (reg env))
  (goto (label after-lambda200308172131085))
  (comment (lambda (p-code c-code a-code) (preserving (quote (env continue)) p-code (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (list (quote test) (quote (op false?)) (quote (reg val))) (list (quote branch) (list (quote label) f-branch))) exp) (parallel-instruction-sequences (append-instruction-sequences t-branch c-code) (append-instruction-sequences f-branch a-code)) after-if))))
entry200308172131084
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p-code c-code a-code)) (reg argl) (reg env))
  (comment preserving)
  (assign proc (op lookup-variable-value) (const preserving) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (save proc)
  (comment after-if)
  (assign val (op lookup-variable-value) (const after-if) (reg env))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment parallel-instruction-sequences)
  (assign proc (op lookup-variable-value) (const parallel-instruction-sequences) (reg env))
  (save proc)
  (save env)
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (comment a-code)
  (assign val (op lookup-variable-value) (const a-code) (reg env))
  (assign argl (op list) (reg val))
  (comment f-branch)
  (assign val (op lookup-variable-value) (const f-branch) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131230))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131231))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131233))
compound-branch200308172131232
  (assign continue (label after-call200308172131234))
  (goto (label compound-apply-compiled))
compiled-branch200308172131231
  (assign continue (label after-call200308172131234))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131233
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131230
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131234
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (comment c-code)
  (assign val (op lookup-variable-value) (const c-code) (reg env))
  (assign argl (op list) (reg val))
  (comment t-branch)
  (assign val (op lookup-variable-value) (const t-branch) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131210))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131211))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131213))
compound-branch200308172131212
  (assign continue (label after-call200308172131214))
  (goto (label compound-apply-compiled))
compiled-branch200308172131211
  (assign continue (label after-call200308172131214))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131213
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131210
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131214
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131240))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131241))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131243))
compound-branch200308172131242
  (assign continue (label after-call200308172131244))
  (goto (label compound-apply-compiled))
compiled-branch200308172131241
  (assign continue (label after-call200308172131244))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131243
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131240
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131244
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save proc)
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (save env)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment f-branch)
  (assign val (op lookup-variable-value) (const f-branch) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote label))
  (assign val  (const label))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131120))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131121))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131123))
compound-branch200308172131122
  (assign continue (label after-call200308172131124))
  (goto (label compound-apply-compiled))
compiled-branch200308172131121
  (assign continue (label after-call200308172131124))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131123
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131120
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131124
  (assign argl (op list) (reg val))
  (comment (quote branch))
  (assign val  (const branch))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131130))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131131))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131133))
compound-branch200308172131132
  (assign continue (label after-call200308172131134))
  (goto (label compound-apply-compiled))
compiled-branch200308172131131
  (assign continue (label after-call200308172131134))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131133
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131130
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131134
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment (quote (reg val)))
  (assign val  (const (reg val)))
  (assign argl (op list) (reg val))
  (comment (quote (op false?)))
  (assign val  (const (op false?)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote test))
  (assign val  (const test))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131100))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131101))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131103))
compound-branch200308172131102
  (assign continue (label after-call200308172131104))
  (goto (label compound-apply-compiled))
compiled-branch200308172131101
  (assign continue (label after-call200308172131104))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131103
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131100
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131104
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131150))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131151))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131153))
compound-branch200308172131152
  (assign continue (label after-call200308172131154))
  (goto (label compound-apply-compiled))
compiled-branch200308172131151
  (assign continue (label after-call200308172131154))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131153
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131150
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131154
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (val)))
  (assign val  (const (val)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131180))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131181))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131183))
compound-branch200308172131182
  (assign continue (label after-call200308172131184))
  (goto (label compound-apply-compiled))
compiled-branch200308172131181
  (assign continue (label after-call200308172131184))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131183
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131180
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131184
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131280))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131281))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131283))
compound-branch200308172131282
  (assign continue (label after-call200308172131284))
  (goto (label compound-apply-compiled))
compiled-branch200308172131281
  (assign continue (label after-call200308172131284))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131283
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131280
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131284
  (assign argl (op list) (reg val))
  (restore env)
  (comment p-code)
  (assign val (op lookup-variable-value) (const p-code) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (env continue)))
  (assign val  (const (env continue)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131320))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131321))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131323))
compound-branch200308172131322
  (goto (label compound-apply-compiled))
compiled-branch200308172131321
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131323
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172131320
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172131324
after-lambda200308172131085
  (save continue)
  (save proc)
  (save env)
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save proc)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment if-alternative)
  (assign proc (op lookup-variable-value) (const if-alternative) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131440))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131441))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131443))
compound-branch200308172131442
  (assign continue (label after-call200308172131444))
  (goto (label compound-apply-compiled))
compiled-branch200308172131441
  (assign continue (label after-call200308172131444))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131443
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131440
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131444
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131460))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131461))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131463))
compound-branch200308172131462
  (assign continue (label after-call200308172131464))
  (goto (label compound-apply-compiled))
compiled-branch200308172131461
  (assign continue (label after-call200308172131464))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131463
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131460
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131464
  (assign argl (op list) (reg val))
  (restore env)
  (save env)
  (save argl)
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save proc)
  (comment consequent-linkage)
  (assign val (op lookup-variable-value) (const consequent-linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment if-consequent)
  (assign proc (op lookup-variable-value) (const if-consequent) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131410))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131411))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131413))
compound-branch200308172131412
  (assign continue (label after-call200308172131414))
  (goto (label compound-apply-compiled))
compiled-branch200308172131411
  (assign continue (label after-call200308172131414))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131413
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131410
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131414
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131430))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131431))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131433))
compound-branch200308172131432
  (assign continue (label after-call200308172131434))
  (goto (label compound-apply-compiled))
compiled-branch200308172131431
  (assign continue (label after-call200308172131434))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131433
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131430
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131434
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save proc)
  (comment (quote next))
  (assign val  (const next))
  (assign argl (op list) (reg val))
  (comment (quote val))
  (assign val  (const val))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment if-predicate)
  (assign proc (op lookup-variable-value) (const if-predicate) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131370))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131371))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131373))
compound-branch200308172131372
  (assign continue (label after-call200308172131374))
  (goto (label compound-apply-compiled))
compiled-branch200308172131371
  (assign continue (label after-call200308172131374))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131373
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131370
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131374
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131390))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131391))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131393))
compound-branch200308172131392
  (assign continue (label after-call200308172131394))
  (goto (label compound-apply-compiled))
compiled-branch200308172131391
  (assign continue (label after-call200308172131394))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131393
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131390
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131394
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131490))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131491))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131493))
compound-branch200308172131492
  (goto (label compound-apply-compiled))
compiled-branch200308172131491
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131493
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172131490
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172131494
after-lambda200308172131083
  (save continue)
  (save proc)
  (save env)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote next))
  (assign val  (const next))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131553))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131554))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131556))
compound-branch200308172131555
  (assign continue (label after-call200308172131557))
  (goto (label compound-apply-compiled))
compiled-branch200308172131554
  (assign continue (label after-call200308172131557))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131556
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172131553
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172131557
  (restore env)
  (comment (if (eq? linkage (quote next)) after-if linkage))
  (test (op false?) (reg val))
  (branch (label false-branch200308172131551))
true-branch200308172131550
  (comment after-if)
  (assign val (op lookup-variable-value) (const after-if) (reg env))
  (goto (label after-if200308172131552))
false-branch200308172131551
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
after-if200308172131552
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172131570))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172131571))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172131573))
compound-branch200308172131572
  (goto (label compound-apply-compiled))
compiled-branch200308172131571
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172131573
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172131570
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172131574
after-lambda200308172131081
  (save continue)
  (save proc)
  (save env)
  (comment make-label)
  (assign proc (op lookup-variable-value) (const make-label) (reg env))
  (comment (quote after-if))
  (assign val  (const after-if))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132070))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132071))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132073))
compound-branch200308172132072
  (assign continue (label after-call200308172132074))
  (goto (label compound-apply-compiled))
compiled-branch200308172132071
  (assign continue (label after-call200308172132074))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132073
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132070
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132074
  (assign argl (op list) (reg val))
  (restore env)
  (save env)
  (save argl)
  (comment make-label)
  (assign proc (op lookup-variable-value) (const make-label) (reg env))
  (comment (quote false-branch))
  (assign val  (const false-branch))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132050))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132051))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132053))
compound-branch200308172132052
  (assign continue (label after-call200308172132054))
  (goto (label compound-apply-compiled))
compiled-branch200308172132051
  (assign continue (label after-call200308172132054))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132053
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132050
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132054
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment make-label)
  (assign proc (op lookup-variable-value) (const make-label) (reg env))
  (comment (quote true-branch))
  (assign val  (const true-branch))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132030))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132031))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132033))
compound-branch200308172132032
  (assign continue (label after-call200308172132034))
  (goto (label compound-apply-compiled))
compiled-branch200308172132031
  (assign continue (label after-call200308172132034))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132033
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132030
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132034
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132090))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132091))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132093))
compound-branch200308172132092
  (goto (label compound-apply-compiled))
compiled-branch200308172132091
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132093
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172132090
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172132094
after-lambda200308172131071
  (comment (define (compile-if exp target linkage) (let ((t-branch (make-label (quote true-branch))) (f-branch (make-label (quote false-branch))) (after-if (make-label (quote after-if)))) (let ((consequent-linkage (if (eq? linkage (quote next)) after-if linkage))) (let ((p-code (compile (if-predicate exp) (quote val) (quote next))) (c-code (compile (if-consequent exp) target consequent-linkage)) (a-code (compile (if-alternative exp) target linkage))) (preserving (quote (env continue)) p-code (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (list (quote test) (quote (op false?)) (quote (reg val))) (list (quote branch) (list (quote label) f-branch))) exp) (parallel-instruction-sequences (append-instruction-sequences t-branch c-code) (append-instruction-sequences f-branch a-code)) after-if)))))))
  (perform (op define-variable!) (const compile-if) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (seq target linkage) (if (last-exp? seq) (compile (first-exp seq) target linkage) (preserving (quote (env continue)) (compile (first-exp seq) target (quote next)) (compile-sequence (rest-exps seq) target linkage)))))
  (assign val (op make-compiled-procedure) (label entry200308172132170) (reg env))
  (goto (label after-lambda200308172132171))
  (comment (lambda (seq target linkage) (if (last-exp? seq) (compile (first-exp seq) target linkage) (preserving (quote (env continue)) (compile (first-exp seq) target (quote next)) (compile-sequence (rest-exps seq) target linkage)))))
entry200308172132170
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq target linkage)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment last-exp?)
  (assign proc (op lookup-variable-value) (const last-exp?) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132183))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132184))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132186))
compound-branch200308172132185
  (assign continue (label after-call200308172132187))
  (goto (label compound-apply-compiled))
compiled-branch200308172132184
  (assign continue (label after-call200308172132187))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132186
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132183
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132187
  (restore env)
  (restore continue)
  (comment (if (last-exp? seq) (compile (first-exp seq) target linkage) (preserving (quote (env continue)) (compile (first-exp seq) target (quote next)) (compile-sequence (rest-exps seq) target linkage))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172132181))
true-branch200308172132180
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save continue)
  (save proc)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment first-exp)
  (assign proc (op lookup-variable-value) (const first-exp) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132190))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132191))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132193))
compound-branch200308172132192
  (assign continue (label after-call200308172132194))
  (goto (label compound-apply-compiled))
compiled-branch200308172132191
  (assign continue (label after-call200308172132194))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132193
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132190
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132194
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132210))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132211))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132213))
compound-branch200308172132212
  (goto (label compound-apply-compiled))
compiled-branch200308172132211
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132213
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172132210
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172132214
false-branch200308172132181
  (comment preserving)
  (assign proc (op lookup-variable-value) (const preserving) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment compile-sequence)
  (assign proc (op lookup-variable-value) (const compile-sequence) (reg env))
  (save proc)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment rest-exps)
  (assign proc (op lookup-variable-value) (const rest-exps) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132270))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132271))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132273))
compound-branch200308172132272
  (assign continue (label after-call200308172132274))
  (goto (label compound-apply-compiled))
compiled-branch200308172132271
  (assign continue (label after-call200308172132274))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132273
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132270
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132274
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132290))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132291))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132293))
compound-branch200308172132292
  (assign continue (label after-call200308172132294))
  (goto (label compound-apply-compiled))
compiled-branch200308172132291
  (assign continue (label after-call200308172132294))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132293
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132290
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132294
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save proc)
  (comment (quote next))
  (assign val  (const next))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment first-exp)
  (assign proc (op lookup-variable-value) (const first-exp) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132240))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132241))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132243))
compound-branch200308172132242
  (assign continue (label after-call200308172132244))
  (goto (label compound-apply-compiled))
compiled-branch200308172132241
  (assign continue (label after-call200308172132244))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132243
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132240
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132244
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132260))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132261))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132263))
compound-branch200308172132262
  (assign continue (label after-call200308172132264))
  (goto (label compound-apply-compiled))
compiled-branch200308172132261
  (assign continue (label after-call200308172132264))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132263
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132260
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132264
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (env continue)))
  (assign val  (const (env continue)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132320))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132321))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132323))
compound-branch200308172132322
  (goto (label compound-apply-compiled))
compiled-branch200308172132321
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132323
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172132320
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172132324
after-if200308172132182
after-lambda200308172132171
  (comment (define (compile-sequence seq target linkage) (if (last-exp? seq) (compile (first-exp seq) target linkage) (preserving (quote (env continue)) (compile (first-exp seq) target (quote next)) (compile-sequence (rest-exps seq) target linkage)))))
  (perform (op define-variable!) (const compile-sequence) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (seq target linkage label) (if (last-exp? seq) (append-instruction-sequences (compile (first-exp seq) target (quote next)) label) (preserving (quote (env continue)) (compile (first-exp seq) target (quote next)) (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (quote (test (op false?) (reg val))) (list (quote branch) (list (quote label) label))) seq) (compile-and-sequence (rest-exps seq) target linkage label))))))
  (assign val (op make-compiled-procedure) (label entry200308172132390) (reg env))
  (goto (label after-lambda200308172132391))
  (comment (lambda (seq target linkage label) (if (last-exp? seq) (append-instruction-sequences (compile (first-exp seq) target (quote next)) label) (preserving (quote (env continue)) (compile (first-exp seq) target (quote next)) (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (quote (test (op false?) (reg val))) (list (quote branch) (list (quote label) label))) seq) (compile-and-sequence (rest-exps seq) target linkage label))))))
entry200308172132390
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq target linkage label)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment last-exp?)
  (assign proc (op lookup-variable-value) (const last-exp?) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132395))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132396))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132398))
compound-branch200308172132397
  (assign continue (label after-call200308172132399))
  (goto (label compound-apply-compiled))
compiled-branch200308172132396
  (assign continue (label after-call200308172132399))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132398
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132395
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132399
  (restore env)
  (restore continue)
  (comment (if (last-exp? seq) (append-instruction-sequences (compile (first-exp seq) target (quote next)) label) (preserving (quote (env continue)) (compile (first-exp seq) target (quote next)) (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (quote (test (op false?) (reg val))) (list (quote branch) (list (quote label) label))) seq) (compile-and-sequence (rest-exps seq) target linkage label)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172132393))
true-branch200308172132392
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (save continue)
  (save proc)
  (comment label)
  (assign val (op lookup-variable-value) (const label) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save proc)
  (comment (quote next))
  (assign val  (const next))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment first-exp)
  (assign proc (op lookup-variable-value) (const first-exp) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132410))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132411))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132413))
compound-branch200308172132412
  (assign continue (label after-call200308172132414))
  (goto (label compound-apply-compiled))
compiled-branch200308172132411
  (assign continue (label after-call200308172132414))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132413
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132410
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132414
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132430))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132431))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132433))
compound-branch200308172132432
  (assign continue (label after-call200308172132434))
  (goto (label compound-apply-compiled))
compiled-branch200308172132431
  (assign continue (label after-call200308172132434))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132433
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132430
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132434
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132450))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132451))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132453))
compound-branch200308172132452
  (goto (label compound-apply-compiled))
compiled-branch200308172132451
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132453
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172132450
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172132454
false-branch200308172132393
  (comment preserving)
  (assign proc (op lookup-variable-value) (const preserving) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (save proc)
  (save env)
  (comment compile-and-sequence)
  (assign proc (op lookup-variable-value) (const compile-and-sequence) (reg env))
  (save proc)
  (comment label)
  (assign val (op lookup-variable-value) (const label) (reg env))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment rest-exps)
  (assign proc (op lookup-variable-value) (const rest-exps) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133020))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133021))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133023))
compound-branch200308172133022
  (assign continue (label after-call200308172133024))
  (goto (label compound-apply-compiled))
compiled-branch200308172133021
  (assign continue (label after-call200308172133024))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133023
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172133020
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172133024
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133050))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133051))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133053))
compound-branch200308172133052
  (assign continue (label after-call200308172133054))
  (goto (label compound-apply-compiled))
compiled-branch200308172133051
  (assign continue (label after-call200308172133054))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133053
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172133050
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172133054
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save proc)
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment label)
  (assign val (op lookup-variable-value) (const label) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote label))
  (assign val  (const label))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132520))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132521))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132523))
compound-branch200308172132522
  (assign continue (label after-call200308172132524))
  (goto (label compound-apply-compiled))
compiled-branch200308172132521
  (assign continue (label after-call200308172132524))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132523
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132520
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132524
  (assign argl (op list) (reg val))
  (comment (quote branch))
  (assign val  (const branch))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132540))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132541))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132543))
compound-branch200308172132542
  (assign continue (label after-call200308172132544))
  (goto (label compound-apply-compiled))
compiled-branch200308172132541
  (assign continue (label after-call200308172132544))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132543
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132540
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132544
  (assign argl (op list) (reg val))
  (comment (quote (test (op false?) (reg val))))
  (assign val  (const (test (op false?) (reg val))))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132560))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132561))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132563))
compound-branch200308172132562
  (assign continue (label after-call200308172132564))
  (goto (label compound-apply-compiled))
compiled-branch200308172132561
  (assign continue (label after-call200308172132564))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132563
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132560
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132564
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (val)))
  (assign val  (const (val)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133000))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133001))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133003))
compound-branch200308172133002
  (assign continue (label after-call200308172133004))
  (goto (label compound-apply-compiled))
compiled-branch200308172133001
  (assign continue (label after-call200308172133004))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133003
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172133000
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172133004
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133070))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133071))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133073))
compound-branch200308172133072
  (assign continue (label after-call200308172133074))
  (goto (label compound-apply-compiled))
compiled-branch200308172133071
  (assign continue (label after-call200308172133074))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133073
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172133070
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172133074
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save proc)
  (comment (quote next))
  (assign val  (const next))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment first-exp)
  (assign proc (op lookup-variable-value) (const first-exp) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132470))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132471))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132473))
compound-branch200308172132472
  (assign continue (label after-call200308172132474))
  (goto (label compound-apply-compiled))
compiled-branch200308172132471
  (assign continue (label after-call200308172132474))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132473
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132470
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132474
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172132490))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172132491))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172132493))
compound-branch200308172132492
  (assign continue (label after-call200308172132494))
  (goto (label compound-apply-compiled))
compiled-branch200308172132491
  (assign continue (label after-call200308172132494))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172132493
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172132490
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172132494
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (env continue)))
  (assign val  (const (env continue)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133110))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133111))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133113))
compound-branch200308172133112
  (goto (label compound-apply-compiled))
compiled-branch200308172133111
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133113
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172133110
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172133114
after-if200308172132394
after-lambda200308172132391
  (comment (define (compile-and-sequence seq target linkage label) (if (last-exp? seq) (append-instruction-sequences (compile (first-exp seq) target (quote next)) label) (preserving (quote (env continue)) (compile (first-exp seq) target (quote next)) (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (quote (test (op false?) (reg val))) (list (quote branch) (list (quote label) label))) seq) (compile-and-sequence (rest-exps seq) target linkage label))))))
  (perform (op define-variable!) (const compile-and-sequence) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (seq target linkage) (let ((false-found (make-label (quote and-false-found)))) (end-with-linkage linkage (if (no-expressions? seq) (make-instruction-sequence (quote (val)) (quote ()) (list (quote (assign exp (const true))) (quote (assign val (op lookup-variable-value) (reg exp) (reg env)))) seq) (compile-and-sequence seq target linkage false-found))))))
  (assign val (op make-compiled-procedure) (label entry200308172133220) (reg env))
  (goto (label after-lambda200308172133221))
  (comment (lambda (seq target linkage) (let ((false-found (make-label (quote and-false-found)))) (end-with-linkage linkage (if (no-expressions? seq) (make-instruction-sequence (quote (val)) (quote ()) (list (quote (assign exp (const true))) (quote (assign val (op lookup-variable-value) (reg exp) (reg env)))) seq) (compile-and-sequence seq target linkage false-found))))))
entry200308172133220
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq target linkage)) (reg argl) (reg env))
  (comment (lambda (false-found) (end-with-linkage linkage (if (no-expressions? seq) (make-instruction-sequence (quote (val)) (quote ()) (list (quote (assign exp (const true))) (quote (assign val (op lookup-variable-value) (reg exp) (reg env)))) seq) (compile-and-sequence seq target linkage false-found)))))
  (assign proc (op make-compiled-procedure) (label entry200308172133222) (reg env))
  (goto (label after-lambda200308172133223))
  (comment (lambda (false-found) (end-with-linkage linkage (if (no-expressions? seq) (make-instruction-sequence (quote (val)) (quote ()) (list (quote (assign exp (const true))) (quote (assign val (op lookup-variable-value) (reg exp) (reg env)))) seq) (compile-and-sequence seq target linkage false-found)))))
entry200308172133222
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (false-found)) (reg argl) (reg env))
  (comment end-with-linkage)
  (assign proc (op lookup-variable-value) (const end-with-linkage) (reg env))
  (save continue)
  (save proc)
  (save env)
  (save env)
  (comment no-expressions?)
  (assign proc (op lookup-variable-value) (const no-expressions?) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133233))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133234))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133236))
compound-branch200308172133235
  (assign continue (label after-call200308172133237))
  (goto (label compound-apply-compiled))
compiled-branch200308172133234
  (assign continue (label after-call200308172133237))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133236
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172133233
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172133237
  (restore env)
  (comment (if (no-expressions? seq) (make-instruction-sequence (quote (val)) (quote ()) (list (quote (assign exp (const true))) (quote (assign val (op lookup-variable-value) (reg exp) (reg env)))) seq) (compile-and-sequence seq target linkage false-found)))
  (test (op false?) (reg val))
  (branch (label false-branch200308172133231))
true-branch200308172133230
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save proc)
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment (quote (assign val (op lookup-variable-value) (reg exp) (reg env))))
  (assign val  (const (assign val (op lookup-variable-value) (reg exp) (reg env))))
  (assign argl (op list) (reg val))
  (comment (quote (assign exp (const true))))
  (assign val  (const (assign exp (const true))))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133250))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133251))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133253))
compound-branch200308172133252
  (assign continue (label after-call200308172133254))
  (goto (label compound-apply-compiled))
compiled-branch200308172133251
  (assign continue (label after-call200308172133254))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133253
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172133250
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172133254
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (val)))
  (assign val  (const (val)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133270))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133271))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133273))
compound-branch200308172133272
  (assign continue (label after-if200308172133232))
  (goto (label compound-apply-compiled))
compiled-branch200308172133271
  (assign continue (label after-if200308172133232))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133273
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (label after-if200308172133232))
primitive-branch200308172133270
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (label after-if200308172133232))
after-call200308172133274
false-branch200308172133231
  (comment compile-and-sequence)
  (assign proc (op lookup-variable-value) (const compile-and-sequence) (reg env))
  (comment false-found)
  (assign val (op lookup-variable-value) (const false-found) (reg env))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133300))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133301))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133303))
compound-branch200308172133302
  (assign continue (label after-call200308172133304))
  (goto (label compound-apply-compiled))
compiled-branch200308172133301
  (assign continue (label after-call200308172133304))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133303
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172133300
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172133304
after-if200308172133232
  (assign argl (op list) (reg val))
  (restore env)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133330))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133331))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133333))
compound-branch200308172133332
  (goto (label compound-apply-compiled))
compiled-branch200308172133331
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133333
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172133330
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172133334
after-lambda200308172133223
  (save continue)
  (save proc)
  (comment make-label)
  (assign proc (op lookup-variable-value) (const make-label) (reg env))
  (comment (quote and-false-found))
  (assign val  (const and-false-found))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133370))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133371))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133373))
compound-branch200308172133372
  (assign continue (label after-call200308172133374))
  (goto (label compound-apply-compiled))
compiled-branch200308172133371
  (assign continue (label after-call200308172133374))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133373
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172133370
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172133374
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133380))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133381))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133383))
compound-branch200308172133382
  (goto (label compound-apply-compiled))
compiled-branch200308172133381
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133383
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172133380
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172133384
after-lambda200308172133221
  (comment (define (compile-and seq target linkage) (let ((false-found (make-label (quote and-false-found)))) (end-with-linkage linkage (if (no-expressions? seq) (make-instruction-sequence (quote (val)) (quote ()) (list (quote (assign exp (const true))) (quote (assign val (op lookup-variable-value) (reg exp) (reg env)))) seq) (compile-and-sequence seq target linkage false-found))))))
  (perform (op define-variable!) (const compile-and) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (seq target linkage label) (if (last-exp? seq) (append-instruction-sequences (compile (first-exp seq) target (quote next)) label) (preserving (quote (env continue)) (compile (first-exp seq) target (quote next)) (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (quote (test (op true?) (reg val))) (list (quote branch) (list (quote label) label))) seq)) (compile-or-sequence (rest-exps seq) target linkage label)))))
  (assign val (op make-compiled-procedure) (label entry200308172133420) (reg env))
  (goto (label after-lambda200308172133421))
  (comment (lambda (seq target linkage label) (if (last-exp? seq) (append-instruction-sequences (compile (first-exp seq) target (quote next)) label) (preserving (quote (env continue)) (compile (first-exp seq) target (quote next)) (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (quote (test (op true?) (reg val))) (list (quote branch) (list (quote label) label))) seq)) (compile-or-sequence (rest-exps seq) target linkage label)))))
entry200308172133420
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq target linkage label)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment last-exp?)
  (assign proc (op lookup-variable-value) (const last-exp?) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133425))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133426))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133428))
compound-branch200308172133427
  (assign continue (label after-call200308172133429))
  (goto (label compound-apply-compiled))
compiled-branch200308172133426
  (assign continue (label after-call200308172133429))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133428
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172133425
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172133429
  (restore env)
  (restore continue)
  (comment (if (last-exp? seq) (append-instruction-sequences (compile (first-exp seq) target (quote next)) label) (preserving (quote (env continue)) (compile (first-exp seq) target (quote next)) (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (quote (test (op true?) (reg val))) (list (quote branch) (list (quote label) label))) seq)) (compile-or-sequence (rest-exps seq) target linkage label))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172133423))
true-branch200308172133422
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (save continue)
  (save proc)
  (comment label)
  (assign val (op lookup-variable-value) (const label) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save proc)
  (comment (quote next))
  (assign val  (const next))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment first-exp)
  (assign proc (op lookup-variable-value) (const first-exp) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133450))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133451))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133453))
compound-branch200308172133452
  (assign continue (label after-call200308172133454))
  (goto (label compound-apply-compiled))
compiled-branch200308172133451
  (assign continue (label after-call200308172133454))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133453
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172133450
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172133454
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133470))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133471))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133473))
compound-branch200308172133472
  (assign continue (label after-call200308172133474))
  (goto (label compound-apply-compiled))
compiled-branch200308172133471
  (assign continue (label after-call200308172133474))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133473
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172133470
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172133474
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133490))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133491))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133493))
compound-branch200308172133492
  (goto (label compound-apply-compiled))
compiled-branch200308172133491
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133493
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172133490
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172133494
false-branch200308172133423
  (comment preserving)
  (assign proc (op lookup-variable-value) (const preserving) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment compile-or-sequence)
  (assign proc (op lookup-variable-value) (const compile-or-sequence) (reg env))
  (save proc)
  (comment label)
  (assign val (op lookup-variable-value) (const label) (reg env))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment rest-exps)
  (assign proc (op lookup-variable-value) (const rest-exps) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134070))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134071))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134073))
compound-branch200308172134072
  (assign continue (label after-call200308172134074))
  (goto (label compound-apply-compiled))
compiled-branch200308172134071
  (assign continue (label after-call200308172134074))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134073
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172134070
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172134074
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134090))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134091))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134093))
compound-branch200308172134092
  (assign continue (label after-call200308172134094))
  (goto (label compound-apply-compiled))
compiled-branch200308172134091
  (assign continue (label after-call200308172134094))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134093
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172134090
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172134094
  (assign argl (op list) (reg val))
  (restore env)
  (save env)
  (save argl)
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (save proc)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save proc)
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment label)
  (assign val (op lookup-variable-value) (const label) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote label))
  (assign val  (const label))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133570))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133571))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133573))
compound-branch200308172133572
  (assign continue (label after-call200308172133574))
  (goto (label compound-apply-compiled))
compiled-branch200308172133571
  (assign continue (label after-call200308172133574))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133573
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172133570
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172133574
  (assign argl (op list) (reg val))
  (comment (quote branch))
  (assign val  (const branch))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133580))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133581))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133583))
compound-branch200308172133582
  (assign continue (label after-call200308172133584))
  (goto (label compound-apply-compiled))
compiled-branch200308172133581
  (assign continue (label after-call200308172133584))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133583
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172133580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172133584
  (assign argl (op list) (reg val))
  (comment (quote (test (op true?) (reg val))))
  (assign val  (const (test (op true?) (reg val))))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134000))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134001))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134003))
compound-branch200308172134002
  (assign continue (label after-call200308172134004))
  (goto (label compound-apply-compiled))
compiled-branch200308172134001
  (assign continue (label after-call200308172134004))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134003
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172134000
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172134004
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (val)))
  (assign val  (const (val)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134030))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134031))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134033))
compound-branch200308172134032
  (assign continue (label after-call200308172134034))
  (goto (label compound-apply-compiled))
compiled-branch200308172134031
  (assign continue (label after-call200308172134034))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134033
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172134030
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172134034
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134050))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134051))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134053))
compound-branch200308172134052
  (assign continue (label after-call200308172134054))
  (goto (label compound-apply-compiled))
compiled-branch200308172134051
  (assign continue (label after-call200308172134054))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134053
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172134050
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172134054
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save proc)
  (comment (quote next))
  (assign val  (const next))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment first-exp)
  (assign proc (op lookup-variable-value) (const first-exp) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133520))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133521))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133523))
compound-branch200308172133522
  (assign continue (label after-call200308172133524))
  (goto (label compound-apply-compiled))
compiled-branch200308172133521
  (assign continue (label after-call200308172133524))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133523
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172133520
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172133524
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172133540))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172133541))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172133543))
compound-branch200308172133542
  (assign continue (label after-call200308172133544))
  (goto (label compound-apply-compiled))
compiled-branch200308172133541
  (assign continue (label after-call200308172133544))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172133543
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172133540
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172133544
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (env continue)))
  (assign val  (const (env continue)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134140))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134141))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134143))
compound-branch200308172134142
  (goto (label compound-apply-compiled))
compiled-branch200308172134141
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134143
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172134140
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172134144
after-if200308172133424
after-lambda200308172133421
  (comment (define (compile-or-sequence seq target linkage label) (if (last-exp? seq) (append-instruction-sequences (compile (first-exp seq) target (quote next)) label) (preserving (quote (env continue)) (compile (first-exp seq) target (quote next)) (append-instruction-sequences (make-instruction-sequence (quote (val)) (quote ()) (list (quote (test (op true?) (reg val))) (list (quote branch) (list (quote label) label))) seq)) (compile-or-sequence (rest-exps seq) target linkage label)))))
  (perform (op define-variable!) (const compile-or-sequence) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (seq target linkage) (let ((true-found (make-label (quote or-true-found)))) (if (no-expressions? seq) (make-instruction-sequence (quote (val)) (quote ()) (list (quote (assign exp (const false))) (quote (assign val (op lookup-variable-value) (reg exp) (reg env)))) seq) (compile-or-sequence seq target linkage true-found)))))
  (assign val (op make-compiled-procedure) (label entry200308172134250) (reg env))
  (goto (label after-lambda200308172134251))
  (comment (lambda (seq target linkage) (let ((true-found (make-label (quote or-true-found)))) (if (no-expressions? seq) (make-instruction-sequence (quote (val)) (quote ()) (list (quote (assign exp (const false))) (quote (assign val (op lookup-variable-value) (reg exp) (reg env)))) seq) (compile-or-sequence seq target linkage true-found)))))
entry200308172134250
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq target linkage)) (reg argl) (reg env))
  (comment (lambda (true-found) (if (no-expressions? seq) (make-instruction-sequence (quote (val)) (quote ()) (list (quote (assign exp (const false))) (quote (assign val (op lookup-variable-value) (reg exp) (reg env)))) seq) (compile-or-sequence seq target linkage true-found))))
  (assign proc (op make-compiled-procedure) (label entry200308172134252) (reg env))
  (goto (label after-lambda200308172134253))
  (comment (lambda (true-found) (if (no-expressions? seq) (make-instruction-sequence (quote (val)) (quote ()) (list (quote (assign exp (const false))) (quote (assign val (op lookup-variable-value) (reg exp) (reg env)))) seq) (compile-or-sequence seq target linkage true-found))))
entry200308172134252
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (true-found)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment no-expressions?)
  (assign proc (op lookup-variable-value) (const no-expressions?) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134257))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134258))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003081721342510))
compound-branch200308172134259
  (assign continue (label after-call2003081721342511))
  (goto (label compound-apply-compiled))
compiled-branch200308172134258
  (assign continue (label after-call2003081721342511))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003081721342510
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172134257
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003081721342511
  (restore env)
  (restore continue)
  (comment (if (no-expressions? seq) (make-instruction-sequence (quote (val)) (quote ()) (list (quote (assign exp (const false))) (quote (assign val (op lookup-variable-value) (reg exp) (reg env)))) seq) (compile-or-sequence seq target linkage true-found)))
  (test (op false?) (reg val))
  (branch (label false-branch200308172134255))
true-branch200308172134254
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save continue)
  (save proc)
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment (quote (assign val (op lookup-variable-value) (reg exp) (reg env))))
  (assign val  (const (assign val (op lookup-variable-value) (reg exp) (reg env))))
  (assign argl (op list) (reg val))
  (comment (quote (assign exp (const false))))
  (assign val  (const (assign exp (const false))))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134280))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134281))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134283))
compound-branch200308172134282
  (assign continue (label after-call200308172134284))
  (goto (label compound-apply-compiled))
compiled-branch200308172134281
  (assign continue (label after-call200308172134284))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134283
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172134280
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172134284
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (val)))
  (assign val  (const (val)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134300))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134301))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134303))
compound-branch200308172134302
  (goto (label compound-apply-compiled))
compiled-branch200308172134301
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134303
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172134300
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172134304
false-branch200308172134255
  (comment compile-or-sequence)
  (assign proc (op lookup-variable-value) (const compile-or-sequence) (reg env))
  (comment true-found)
  (assign val (op lookup-variable-value) (const true-found) (reg env))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134320))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134321))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134323))
compound-branch200308172134322
  (goto (label compound-apply-compiled))
compiled-branch200308172134321
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134323
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172134320
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172134324
after-if200308172134256
after-lambda200308172134253
  (save continue)
  (save proc)
  (comment make-label)
  (assign proc (op lookup-variable-value) (const make-label) (reg env))
  (comment (quote or-true-found))
  (assign val  (const or-true-found))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134370))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134371))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134373))
compound-branch200308172134372
  (assign continue (label after-call200308172134374))
  (goto (label compound-apply-compiled))
compiled-branch200308172134371
  (assign continue (label after-call200308172134374))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134373
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172134370
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172134374
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134380))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134381))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134383))
compound-branch200308172134382
  (goto (label compound-apply-compiled))
compiled-branch200308172134381
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134383
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172134380
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172134384
after-lambda200308172134251
  (comment (define (compile-or seq target linkage) (let ((true-found (make-label (quote or-true-found)))) (if (no-expressions? seq) (make-instruction-sequence (quote (val)) (quote ()) (list (quote (assign exp (const false))) (quote (assign val (op lookup-variable-value) (reg exp) (reg env)))) seq) (compile-or-sequence seq target linkage true-found)))))
  (perform (op define-variable!) (const compile-or) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (exp target linkage) (let ((proc-entry (make-label (quote entry))) (after-lambda (make-label (quote after-lambda)))) (let ((lambda-linkage (if (eq? linkage (quote next)) after-lambda linkage))) (append-instruction-sequences (tack-on-instruction-sequence (end-with-linkage lambda-linkage (make-instruction-sequence (quote (env)) (list target) (list (list (quote assign) target (quote (op make-compiled-procedure)) (list (quote label) proc-entry) (quote (reg env)))) exp)) (compile-lambda-body exp proc-entry)) after-lambda)))))
  (assign val (op make-compiled-procedure) (label entry200308172134420) (reg env))
  (goto (label after-lambda200308172134421))
  (comment (lambda (exp target linkage) (let ((proc-entry (make-label (quote entry))) (after-lambda (make-label (quote after-lambda)))) (let ((lambda-linkage (if (eq? linkage (quote next)) after-lambda linkage))) (append-instruction-sequences (tack-on-instruction-sequence (end-with-linkage lambda-linkage (make-instruction-sequence (quote (env)) (list target) (list (list (quote assign) target (quote (op make-compiled-procedure)) (list (quote label) proc-entry) (quote (reg env)))) exp)) (compile-lambda-body exp proc-entry)) after-lambda)))))
entry200308172134420
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp target linkage)) (reg argl) (reg env))
  (comment (lambda (proc-entry after-lambda) (let ((lambda-linkage (if (eq? linkage (quote next)) after-lambda linkage))) (append-instruction-sequences (tack-on-instruction-sequence (end-with-linkage lambda-linkage (make-instruction-sequence (quote (env)) (list target) (list (list (quote assign) target (quote (op make-compiled-procedure)) (list (quote label) proc-entry) (quote (reg env)))) exp)) (compile-lambda-body exp proc-entry)) after-lambda))))
  (assign proc (op make-compiled-procedure) (label entry200308172134422) (reg env))
  (goto (label after-lambda200308172134423))
  (comment (lambda (proc-entry after-lambda) (let ((lambda-linkage (if (eq? linkage (quote next)) after-lambda linkage))) (append-instruction-sequences (tack-on-instruction-sequence (end-with-linkage lambda-linkage (make-instruction-sequence (quote (env)) (list target) (list (list (quote assign) target (quote (op make-compiled-procedure)) (list (quote label) proc-entry) (quote (reg env)))) exp)) (compile-lambda-body exp proc-entry)) after-lambda))))
entry200308172134422
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc-entry after-lambda)) (reg argl) (reg env))
  (comment (lambda (lambda-linkage) (append-instruction-sequences (tack-on-instruction-sequence (end-with-linkage lambda-linkage (make-instruction-sequence (quote (env)) (list target) (list (list (quote assign) target (quote (op make-compiled-procedure)) (list (quote label) proc-entry) (quote (reg env)))) exp)) (compile-lambda-body exp proc-entry)) after-lambda)))
  (assign proc (op make-compiled-procedure) (label entry200308172134424) (reg env))
  (goto (label after-lambda200308172134425))
  (comment (lambda (lambda-linkage) (append-instruction-sequences (tack-on-instruction-sequence (end-with-linkage lambda-linkage (make-instruction-sequence (quote (env)) (list target) (list (list (quote assign) target (quote (op make-compiled-procedure)) (list (quote label) proc-entry) (quote (reg env)))) exp)) (compile-lambda-body exp proc-entry)) after-lambda)))
entry200308172134424
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (lambda-linkage)) (reg argl) (reg env))
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (save continue)
  (save proc)
  (comment after-lambda)
  (assign val (op lookup-variable-value) (const after-lambda) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment tack-on-instruction-sequence)
  (assign proc (op lookup-variable-value) (const tack-on-instruction-sequence) (reg env))
  (save proc)
  (save env)
  (comment compile-lambda-body)
  (assign proc (op lookup-variable-value) (const compile-lambda-body) (reg env))
  (comment proc-entry)
  (assign val (op lookup-variable-value) (const proc-entry) (reg env))
  (assign argl (op list) (reg val))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134590))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134591))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134593))
compound-branch200308172134592
  (assign continue (label after-call200308172134594))
  (goto (label compound-apply-compiled))
compiled-branch200308172134591
  (assign continue (label after-call200308172134594))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134593
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172134590
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172134594
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment end-with-linkage)
  (assign proc (op lookup-variable-value) (const end-with-linkage) (reg env))
  (save proc)
  (save env)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save proc)
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment (quote (reg env)))
  (assign val  (const (reg env)))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment proc-entry)
  (assign val (op lookup-variable-value) (const proc-entry) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote label))
  (assign val  (const label))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134460))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134461))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134463))
compound-branch200308172134462
  (assign continue (label after-call200308172134464))
  (goto (label compound-apply-compiled))
compiled-branch200308172134461
  (assign continue (label after-call200308172134464))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134463
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172134460
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172134464
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (comment (quote (op make-compiled-procedure)))
  (assign val  (const (op make-compiled-procedure)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote assign))
  (assign val  (const assign))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134480))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134481))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134483))
compound-branch200308172134482
  (assign continue (label after-call200308172134484))
  (goto (label compound-apply-compiled))
compiled-branch200308172134481
  (assign continue (label after-call200308172134484))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134483
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172134480
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172134484
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134500))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134501))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134503))
compound-branch200308172134502
  (assign continue (label after-call200308172134504))
  (goto (label compound-apply-compiled))
compiled-branch200308172134501
  (assign continue (label after-call200308172134504))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134503
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172134500
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172134504
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134430))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134431))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134433))
compound-branch200308172134432
  (assign continue (label after-call200308172134434))
  (goto (label compound-apply-compiled))
compiled-branch200308172134431
  (assign continue (label after-call200308172134434))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134433
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172134430
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172134434
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (env)))
  (assign val  (const (env)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134530))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134531))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134533))
compound-branch200308172134532
  (assign continue (label after-call200308172134534))
  (goto (label compound-apply-compiled))
compiled-branch200308172134531
  (assign continue (label after-call200308172134534))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134533
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172134530
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172134534
  (assign argl (op list) (reg val))
  (restore env)
  (comment lambda-linkage)
  (assign val (op lookup-variable-value) (const lambda-linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172134560))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172134561))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172134563))
compound-branch200308172134562
  (assign continue (label after-call200308172134564))
  (goto (label compound-apply-compiled))
compiled-branch200308172134561
  (assign continue (label after-call200308172134564))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172134563
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172134560
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172134564
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135020))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135021))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135023))
compound-branch200308172135022
  (assign continue (label after-call200308172135024))
  (goto (label compound-apply-compiled))
compiled-branch200308172135021
  (assign continue (label after-call200308172135024))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135023
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172135020
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172135024
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135060))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135061))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135063))
compound-branch200308172135062
  (goto (label compound-apply-compiled))
compiled-branch200308172135061
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135063
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172135060
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172135064
after-lambda200308172134425
  (save continue)
  (save proc)
  (save env)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote next))
  (assign val  (const next))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135110))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135111))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135113))
compound-branch200308172135112
  (assign continue (label after-call200308172135114))
  (goto (label compound-apply-compiled))
compiled-branch200308172135111
  (assign continue (label after-call200308172135114))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135113
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172135110
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172135114
  (restore env)
  (comment (if (eq? linkage (quote next)) after-lambda linkage))
  (test (op false?) (reg val))
  (branch (label false-branch200308172135101))
true-branch200308172135100
  (comment after-lambda)
  (assign val (op lookup-variable-value) (const after-lambda) (reg env))
  (goto (label after-if200308172135102))
false-branch200308172135101
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
after-if200308172135102
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135130))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135131))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135133))
compound-branch200308172135132
  (goto (label compound-apply-compiled))
compiled-branch200308172135131
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135133
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172135130
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172135134
after-lambda200308172134423
  (save continue)
  (save proc)
  (save env)
  (comment make-label)
  (assign proc (op lookup-variable-value) (const make-label) (reg env))
  (comment (quote after-lambda))
  (assign val  (const after-lambda))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135180))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135181))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135183))
compound-branch200308172135182
  (assign continue (label after-call200308172135184))
  (goto (label compound-apply-compiled))
compiled-branch200308172135181
  (assign continue (label after-call200308172135184))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135183
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172135180
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172135184
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment make-label)
  (assign proc (op lookup-variable-value) (const make-label) (reg env))
  (comment (quote entry))
  (assign val  (const entry))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135170))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135171))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135173))
compound-branch200308172135172
  (assign continue (label after-call200308172135174))
  (goto (label compound-apply-compiled))
compiled-branch200308172135171
  (assign continue (label after-call200308172135174))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135173
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172135170
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172135174
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135200))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135201))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135203))
compound-branch200308172135202
  (goto (label compound-apply-compiled))
compiled-branch200308172135201
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135203
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172135200
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172135204
after-lambda200308172134421
  (comment (define (compile-lambda exp target linkage) (let ((proc-entry (make-label (quote entry))) (after-lambda (make-label (quote after-lambda)))) (let ((lambda-linkage (if (eq? linkage (quote next)) after-lambda linkage))) (append-instruction-sequences (tack-on-instruction-sequence (end-with-linkage lambda-linkage (make-instruction-sequence (quote (env)) (list target) (list (list (quote assign) target (quote (op make-compiled-procedure)) (list (quote label) proc-entry) (quote (reg env)))) exp)) (compile-lambda-body exp proc-entry)) after-lambda)))))
  (perform (op define-variable!) (const compile-lambda) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (exp proc-entry) (let ((formals (lambda-parameters exp)) (body (scan-out-defines (lambda-body exp)))) (append-instruction-sequences (make-instruction-sequence (quote (env proc argl)) (quote (env)) (list proc-entry (quote (assign env (op compiled-procedure-env) (reg proc))) (list (quote assign) (quote env) (quote (op extend-environment)) (list (quote const) formals) (quote (reg argl)) (quote (reg env)))) exp) (compile-sequence body (quote val) (quote return))))))
  (assign val (op make-compiled-procedure) (label entry200308172135260) (reg env))
  (goto (label after-lambda200308172135261))
  (comment (lambda (exp proc-entry) (let ((formals (lambda-parameters exp)) (body (scan-out-defines (lambda-body exp)))) (append-instruction-sequences (make-instruction-sequence (quote (env proc argl)) (quote (env)) (list proc-entry (quote (assign env (op compiled-procedure-env) (reg proc))) (list (quote assign) (quote env) (quote (op extend-environment)) (list (quote const) formals) (quote (reg argl)) (quote (reg env)))) exp) (compile-sequence body (quote val) (quote return))))))
entry200308172135260
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp proc-entry)) (reg argl) (reg env))
  (comment (lambda (formals body) (append-instruction-sequences (make-instruction-sequence (quote (env proc argl)) (quote (env)) (list proc-entry (quote (assign env (op compiled-procedure-env) (reg proc))) (list (quote assign) (quote env) (quote (op extend-environment)) (list (quote const) formals) (quote (reg argl)) (quote (reg env)))) exp) (compile-sequence body (quote val) (quote return)))))
  (assign proc (op make-compiled-procedure) (label entry200308172135262) (reg env))
  (goto (label after-lambda200308172135263))
  (comment (lambda (formals body) (append-instruction-sequences (make-instruction-sequence (quote (env proc argl)) (quote (env)) (list proc-entry (quote (assign env (op compiled-procedure-env) (reg proc))) (list (quote assign) (quote env) (quote (op extend-environment)) (list (quote const) formals) (quote (reg argl)) (quote (reg env)))) exp) (compile-sequence body (quote val) (quote return)))))
entry200308172135262
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (formals body)) (reg argl) (reg env))
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment compile-sequence)
  (assign proc (op lookup-variable-value) (const compile-sequence) (reg env))
  (comment (quote return))
  (assign val  (const return))
  (assign argl (op list) (reg val))
  (comment (quote val))
  (assign val  (const val))
  (assign argl (op cons) (reg val) (reg argl))
  (comment body)
  (assign val (op lookup-variable-value) (const body) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135390))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135391))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135393))
compound-branch200308172135392
  (assign continue (label after-call200308172135394))
  (goto (label compound-apply-compiled))
compiled-branch200308172135391
  (assign continue (label after-call200308172135394))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135393
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172135390
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172135394
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save proc)
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (save env)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment (quote (reg env)))
  (assign val  (const (reg env)))
  (assign argl (op list) (reg val))
  (comment (quote (reg argl)))
  (assign val  (const (reg argl)))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment formals)
  (assign val (op lookup-variable-value) (const formals) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote const))
  (assign val  (const const))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135280))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135281))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135283))
compound-branch200308172135282
  (assign continue (label after-call200308172135284))
  (goto (label compound-apply-compiled))
compiled-branch200308172135281
  (assign continue (label after-call200308172135284))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135283
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172135280
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172135284
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (op extend-environment)))
  (assign val  (const (op extend-environment)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote env))
  (assign val  (const env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote assign))
  (assign val  (const assign))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135310))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135311))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135313))
compound-branch200308172135312
  (assign continue (label after-call200308172135314))
  (goto (label compound-apply-compiled))
compiled-branch200308172135311
  (assign continue (label after-call200308172135314))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135313
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172135310
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172135314
  (assign argl (op list) (reg val))
  (restore env)
  (comment (quote (assign env (op compiled-procedure-env) (reg proc))))
  (assign val  (const (assign env (op compiled-procedure-env) (reg proc))))
  (assign argl (op cons) (reg val) (reg argl))
  (comment proc-entry)
  (assign val (op lookup-variable-value) (const proc-entry) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135330))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135331))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135333))
compound-branch200308172135332
  (assign continue (label after-call200308172135334))
  (goto (label compound-apply-compiled))
compiled-branch200308172135331
  (assign continue (label after-call200308172135334))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135333
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172135330
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172135334
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (env)))
  (assign val  (const (env)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (env proc argl)))
  (assign val  (const (env proc argl)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135360))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135361))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135363))
compound-branch200308172135362
  (assign continue (label after-call200308172135364))
  (goto (label compound-apply-compiled))
compiled-branch200308172135361
  (assign continue (label after-call200308172135364))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135363
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172135360
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172135364
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135410))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135411))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135413))
compound-branch200308172135412
  (goto (label compound-apply-compiled))
compiled-branch200308172135411
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135413
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172135410
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172135414
after-lambda200308172135263
  (save continue)
  (save proc)
  (save env)
  (comment scan-out-defines)
  (assign proc (op lookup-variable-value) (const scan-out-defines) (reg env))
  (save proc)
  (comment lambda-body)
  (assign proc (op lookup-variable-value) (const lambda-body) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135470))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135471))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135473))
compound-branch200308172135472
  (assign continue (label after-call200308172135474))
  (goto (label compound-apply-compiled))
compiled-branch200308172135471
  (assign continue (label after-call200308172135474))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135473
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172135470
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172135474
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135480))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135481))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135483))
compound-branch200308172135482
  (assign continue (label after-call200308172135484))
  (goto (label compound-apply-compiled))
compiled-branch200308172135481
  (assign continue (label after-call200308172135484))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135483
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172135480
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172135484
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment lambda-parameters)
  (assign proc (op lookup-variable-value) (const lambda-parameters) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135450))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135451))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135453))
compound-branch200308172135452
  (assign continue (label after-call200308172135454))
  (goto (label compound-apply-compiled))
compiled-branch200308172135451
  (assign continue (label after-call200308172135454))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135453
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172135450
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172135454
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135500))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135501))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135503))
compound-branch200308172135502
  (goto (label compound-apply-compiled))
compiled-branch200308172135501
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135503
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172135500
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172135504
after-lambda200308172135261
  (comment (define (compile-lambda-body exp proc-entry) (let ((formals (lambda-parameters exp)) (body (scan-out-defines (lambda-body exp)))) (append-instruction-sequences (make-instruction-sequence (quote (env proc argl)) (quote (env)) (list proc-entry (quote (assign env (op compiled-procedure-env) (reg proc))) (list (quote assign) (quote env) (quote (op extend-environment)) (list (quote const) formals) (quote (reg argl)) (quote (reg env)))) exp) (compile-sequence body (quote val) (quote return))))))
  (perform (op define-variable!) (const compile-lambda-body) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (exp target linkage) (let ((proc-code (compile (operator exp) (quote proc) (quote next))) (operand-codes (map (lambda (operand) (compile operand (quote val) (quote next))) (operands exp)))) (preserving (quote (env continue)) proc-code (preserving (quote (proc continue)) (construct-arglist operand-codes) (compile-procedure-call target linkage))))))
  (assign val (op make-compiled-procedure) (label entry200308172135550) (reg env))
  (goto (label after-lambda200308172135551))
  (comment (lambda (exp target linkage) (let ((proc-code (compile (operator exp) (quote proc) (quote next))) (operand-codes (map (lambda (operand) (compile operand (quote val) (quote next))) (operands exp)))) (preserving (quote (env continue)) proc-code (preserving (quote (proc continue)) (construct-arglist operand-codes) (compile-procedure-call target linkage))))))
entry200308172135550
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (exp target linkage)) (reg argl) (reg env))
  (comment (lambda (proc-code operand-codes) (preserving (quote (env continue)) proc-code (preserving (quote (proc continue)) (construct-arglist operand-codes) (compile-procedure-call target linkage)))))
  (assign proc (op make-compiled-procedure) (label entry200308172135552) (reg env))
  (goto (label after-lambda200308172135553))
  (comment (lambda (proc-code operand-codes) (preserving (quote (env continue)) proc-code (preserving (quote (proc continue)) (construct-arglist operand-codes) (compile-procedure-call target linkage)))))
entry200308172135552
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc-code operand-codes)) (reg argl) (reg env))
  (comment preserving)
  (assign proc (op lookup-variable-value) (const preserving) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment preserving)
  (assign proc (op lookup-variable-value) (const preserving) (reg env))
  (save proc)
  (save env)
  (comment compile-procedure-call)
  (assign proc (op lookup-variable-value) (const compile-procedure-call) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135580))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135581))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135583))
compound-branch200308172135582
  (assign continue (label after-call200308172135584))
  (goto (label compound-apply-compiled))
compiled-branch200308172135581
  (assign continue (label after-call200308172135584))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135583
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172135580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172135584
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment construct-arglist)
  (assign proc (op lookup-variable-value) (const construct-arglist) (reg env))
  (comment operand-codes)
  (assign val (op lookup-variable-value) (const operand-codes) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172135560))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172135561))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172135563))
compound-branch200308172135562
  (assign continue (label after-call200308172135564))
  (goto (label compound-apply-compiled))
compiled-branch200308172135561
  (assign continue (label after-call200308172135564))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172135563
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172135560
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172135564
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (proc continue)))
  (assign val  (const (proc continue)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136000))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136001))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136003))
compound-branch200308172136002
  (assign continue (label after-call200308172136004))
  (goto (label compound-apply-compiled))
compiled-branch200308172136001
  (assign continue (label after-call200308172136004))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136003
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172136000
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172136004
  (assign argl (op list) (reg val))
  (restore env)
  (comment proc-code)
  (assign val (op lookup-variable-value) (const proc-code) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (env continue)))
  (assign val  (const (env continue)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136020))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136021))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136023))
compound-branch200308172136022
  (goto (label compound-apply-compiled))
compiled-branch200308172136021
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136023
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172136020
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172136024
after-lambda200308172135553
  (save continue)
  (save proc)
  (save env)
  (comment map)
  (assign proc (op lookup-variable-value) (const map) (reg env))
  (save proc)
  (save env)
  (comment operands)
  (assign proc (op lookup-variable-value) (const operands) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136120))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136121))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136123))
compound-branch200308172136122
  (assign continue (label after-call200308172136124))
  (goto (label compound-apply-compiled))
compiled-branch200308172136121
  (assign continue (label after-call200308172136124))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136123
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172136120
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172136124
  (assign argl (op list) (reg val))
  (restore env)
  (comment (lambda (operand) (compile operand (quote val) (quote next))))
  (assign val (op make-compiled-procedure) (label entry200308172136090) (reg env))
  (goto (label after-lambda200308172136091))
  (comment (lambda (operand) (compile operand (quote val) (quote next))))
entry200308172136090
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (operand)) (reg argl) (reg env))
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (comment (quote next))
  (assign val  (const next))
  (assign argl (op list) (reg val))
  (comment (quote val))
  (assign val  (const val))
  (assign argl (op cons) (reg val) (reg argl))
  (comment operand)
  (assign val (op lookup-variable-value) (const operand) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136100))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136101))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136103))
compound-branch200308172136102
  (goto (label compound-apply-compiled))
compiled-branch200308172136101
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136103
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172136100
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172136104
after-lambda200308172136091
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136140))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136141))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136143))
compound-branch200308172136142
  (assign continue (label after-call200308172136144))
  (goto (label compound-apply-compiled))
compiled-branch200308172136141
  (assign continue (label after-call200308172136144))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136143
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172136140
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172136144
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment compile)
  (assign proc (op lookup-variable-value) (const compile) (reg env))
  (save proc)
  (comment (quote next))
  (assign val  (const next))
  (assign argl (op list) (reg val))
  (comment (quote proc))
  (assign val  (const proc))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment operator)
  (assign proc (op lookup-variable-value) (const operator) (reg env))
  (comment exp)
  (assign val (op lookup-variable-value) (const exp) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136060))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136061))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136063))
compound-branch200308172136062
  (assign continue (label after-call200308172136064))
  (goto (label compound-apply-compiled))
compiled-branch200308172136061
  (assign continue (label after-call200308172136064))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136063
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172136060
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172136064
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136080))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136081))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136083))
compound-branch200308172136082
  (assign continue (label after-call200308172136084))
  (goto (label compound-apply-compiled))
compiled-branch200308172136081
  (assign continue (label after-call200308172136084))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136083
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172136080
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172136084
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136160))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136161))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136163))
compound-branch200308172136162
  (goto (label compound-apply-compiled))
compiled-branch200308172136161
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136163
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172136160
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172136164
after-lambda200308172135551
  (comment (define (compile-application exp target linkage) (let ((proc-code (compile (operator exp) (quote proc) (quote next))) (operand-codes (map (lambda (operand) (compile operand (quote val) (quote next))) (operands exp)))) (preserving (quote (env continue)) proc-code (preserving (quote (proc continue)) (construct-arglist operand-codes) (compile-procedure-call target linkage))))))
  (perform (op define-variable!) (const compile-application) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (operand-codes) (let ((operand-codes (reverse operand-codes))) (if (null? operand-codes) (make-instruction-sequence (quote ()) (quote (argl)) (quote ((assign argl (const ())))) (quote ())) (let ((code-to-get-last-arg (append-instruction-sequences (car operand-codes) (make-instruction-sequence (quote (val)) (quote (argl)) (quote ((assign argl (op list) (reg val)))) (quote ()))))) (if (null? (cdr operand-codes)) code-to-get-last-arg (preserving (quote (env)) code-to-get-last-arg (code-to-get-rest-args (cdr operand-codes)))))))))
  (assign val (op make-compiled-procedure) (label entry200308172136210) (reg env))
  (goto (label after-lambda200308172136211))
  (comment (lambda (operand-codes) (let ((operand-codes (reverse operand-codes))) (if (null? operand-codes) (make-instruction-sequence (quote ()) (quote (argl)) (quote ((assign argl (const ())))) (quote ())) (let ((code-to-get-last-arg (append-instruction-sequences (car operand-codes) (make-instruction-sequence (quote (val)) (quote (argl)) (quote ((assign argl (op list) (reg val)))) (quote ()))))) (if (null? (cdr operand-codes)) code-to-get-last-arg (preserving (quote (env)) code-to-get-last-arg (code-to-get-rest-args (cdr operand-codes)))))))))
entry200308172136210
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (operand-codes)) (reg argl) (reg env))
  (comment (lambda (operand-codes) (if (null? operand-codes) (make-instruction-sequence (quote ()) (quote (argl)) (quote ((assign argl (const ())))) (quote ())) (let ((code-to-get-last-arg (append-instruction-sequences (car operand-codes) (make-instruction-sequence (quote (val)) (quote (argl)) (quote ((assign argl (op list) (reg val)))) (quote ()))))) (if (null? (cdr operand-codes)) code-to-get-last-arg (preserving (quote (env)) code-to-get-last-arg (code-to-get-rest-args (cdr operand-codes))))))))
  (assign proc (op make-compiled-procedure) (label entry200308172136220) (reg env))
  (goto (label after-lambda200308172136221))
  (comment (lambda (operand-codes) (if (null? operand-codes) (make-instruction-sequence (quote ()) (quote (argl)) (quote ((assign argl (const ())))) (quote ())) (let ((code-to-get-last-arg (append-instruction-sequences (car operand-codes) (make-instruction-sequence (quote (val)) (quote (argl)) (quote ((assign argl (op list) (reg val)))) (quote ()))))) (if (null? (cdr operand-codes)) code-to-get-last-arg (preserving (quote (env)) code-to-get-last-arg (code-to-get-rest-args (cdr operand-codes))))))))
entry200308172136220
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (operand-codes)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment operand-codes)
  (assign val (op lookup-variable-value) (const operand-codes) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136225))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136226))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136228))
compound-branch200308172136227
  (assign continue (label after-call200308172136229))
  (goto (label compound-apply-compiled))
compiled-branch200308172136226
  (assign continue (label after-call200308172136229))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136228
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172136225
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172136229
  (restore env)
  (restore continue)
  (comment (if (null? operand-codes) (make-instruction-sequence (quote ()) (quote (argl)) (quote ((assign argl (const ())))) (quote ())) (let ((code-to-get-last-arg (append-instruction-sequences (car operand-codes) (make-instruction-sequence (quote (val)) (quote (argl)) (quote ((assign argl (op list) (reg val)))) (quote ()))))) (if (null? (cdr operand-codes)) code-to-get-last-arg (preserving (quote (env)) code-to-get-last-arg (code-to-get-rest-args (cdr operand-codes)))))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172136223))
true-branch200308172136222
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (comment (quote ((assign argl (const ())))))
  (assign val  (const ((assign argl (const ())))))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (argl)))
  (assign val  (const (argl)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136240))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136241))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136243))
compound-branch200308172136242
  (goto (label compound-apply-compiled))
compiled-branch200308172136241
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136243
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172136240
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172136244
false-branch200308172136223
  (comment (lambda (code-to-get-last-arg) (if (null? (cdr operand-codes)) code-to-get-last-arg (preserving (quote (env)) code-to-get-last-arg (code-to-get-rest-args (cdr operand-codes))))))
  (assign proc (op make-compiled-procedure) (label entry200308172136260) (reg env))
  (goto (label after-lambda200308172136261))
  (comment (lambda (code-to-get-last-arg) (if (null? (cdr operand-codes)) code-to-get-last-arg (preserving (quote (env)) code-to-get-last-arg (code-to-get-rest-args (cdr operand-codes))))))
entry200308172136260
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (code-to-get-last-arg)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment operand-codes)
  (assign val (op lookup-variable-value) (const operand-codes) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136265))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136266))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136268))
compound-branch200308172136267
  (assign continue (label after-call200308172136269))
  (goto (label compound-apply-compiled))
compiled-branch200308172136266
  (assign continue (label after-call200308172136269))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136268
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172136265
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172136269
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136270))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136271))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136273))
compound-branch200308172136272
  (assign continue (label after-call200308172136274))
  (goto (label compound-apply-compiled))
compiled-branch200308172136271
  (assign continue (label after-call200308172136274))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136273
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172136270
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172136274
  (restore env)
  (restore continue)
  (comment (if (null? (cdr operand-codes)) code-to-get-last-arg (preserving (quote (env)) code-to-get-last-arg (code-to-get-rest-args (cdr operand-codes)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172136263))
true-branch200308172136262
  (comment code-to-get-last-arg)
  (assign val (op lookup-variable-value) (const code-to-get-last-arg) (reg env))
  (goto (reg continue))
false-branch200308172136263
  (comment preserving)
  (assign proc (op lookup-variable-value) (const preserving) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment code-to-get-rest-args)
  (assign proc (op lookup-variable-value) (const code-to-get-rest-args) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment operand-codes)
  (assign val (op lookup-variable-value) (const operand-codes) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136300))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136301))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136303))
compound-branch200308172136302
  (assign continue (label after-call200308172136304))
  (goto (label compound-apply-compiled))
compiled-branch200308172136301
  (assign continue (label after-call200308172136304))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136303
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172136300
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172136304
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136310))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136311))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136313))
compound-branch200308172136312
  (assign continue (label after-call200308172136314))
  (goto (label compound-apply-compiled))
compiled-branch200308172136311
  (assign continue (label after-call200308172136314))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136313
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172136310
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172136314
  (assign argl (op list) (reg val))
  (restore env)
  (comment code-to-get-last-arg)
  (assign val (op lookup-variable-value) (const code-to-get-last-arg) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (env)))
  (assign val  (const (env)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136330))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136331))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136333))
compound-branch200308172136332
  (goto (label compound-apply-compiled))
compiled-branch200308172136331
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136333
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172136330
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172136334
after-if200308172136264
after-lambda200308172136261
  (save continue)
  (save proc)
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (save proc)
  (save env)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (comment (quote ((assign argl (op list) (reg val)))))
  (assign val  (const ((assign argl (op list) (reg val)))))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (argl)))
  (assign val  (const (argl)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (val)))
  (assign val  (const (val)))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136400))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136401))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136403))
compound-branch200308172136402
  (assign continue (label after-call200308172136404))
  (goto (label compound-apply-compiled))
compiled-branch200308172136401
  (assign continue (label after-call200308172136404))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136403
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172136400
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172136404
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment operand-codes)
  (assign val (op lookup-variable-value) (const operand-codes) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136380))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136381))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136383))
compound-branch200308172136382
  (assign continue (label after-call200308172136384))
  (goto (label compound-apply-compiled))
compiled-branch200308172136381
  (assign continue (label after-call200308172136384))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136383
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172136380
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172136384
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136420))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136421))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136423))
compound-branch200308172136422
  (assign continue (label after-call200308172136424))
  (goto (label compound-apply-compiled))
compiled-branch200308172136421
  (assign continue (label after-call200308172136424))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136423
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172136420
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172136424
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136430))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136431))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136433))
compound-branch200308172136432
  (goto (label compound-apply-compiled))
compiled-branch200308172136431
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136433
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172136430
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172136434
after-if200308172136224
after-lambda200308172136221
  (save continue)
  (save proc)
  (comment reverse)
  (assign proc (op lookup-variable-value) (const reverse) (reg env))
  (comment operand-codes)
  (assign val (op lookup-variable-value) (const operand-codes) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136510))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136511))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136513))
compound-branch200308172136512
  (assign continue (label after-call200308172136514))
  (goto (label compound-apply-compiled))
compiled-branch200308172136511
  (assign continue (label after-call200308172136514))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136513
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172136510
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172136514
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136520))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136521))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136523))
compound-branch200308172136522
  (goto (label compound-apply-compiled))
compiled-branch200308172136521
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136523
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172136520
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172136524
after-lambda200308172136211
  (comment (define (construct-arglist operand-codes) (let ((operand-codes (reverse operand-codes))) (if (null? operand-codes) (make-instruction-sequence (quote ()) (quote (argl)) (quote ((assign argl (const ())))) (quote ())) (let ((code-to-get-last-arg (append-instruction-sequences (car operand-codes) (make-instruction-sequence (quote (val)) (quote (argl)) (quote ((assign argl (op list) (reg val)))) (quote ()))))) (if (null? (cdr operand-codes)) code-to-get-last-arg (preserving (quote (env)) code-to-get-last-arg (code-to-get-rest-args (cdr operand-codes)))))))))
  (perform (op define-variable!) (const construct-arglist) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (operand-codes) (let ((code-for-next-arg (preserving (quote (argl)) (car operand-codes) (make-instruction-sequence (quote (val argl)) (quote (argl)) (quote ((assign argl (op cons) (reg val) (reg argl)))) (quote ()))))) (if (null? (cdr operand-codes)) code-for-next-arg (preserving (quote (env)) code-for-next-arg (code-to-get-rest-args (cdr operand-codes)))))))
  (assign val (op make-compiled-procedure) (label entry200308172136580) (reg env))
  (goto (label after-lambda200308172136581))
  (comment (lambda (operand-codes) (let ((code-for-next-arg (preserving (quote (argl)) (car operand-codes) (make-instruction-sequence (quote (val argl)) (quote (argl)) (quote ((assign argl (op cons) (reg val) (reg argl)))) (quote ()))))) (if (null? (cdr operand-codes)) code-for-next-arg (preserving (quote (env)) code-for-next-arg (code-to-get-rest-args (cdr operand-codes)))))))
entry200308172136580
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (operand-codes)) (reg argl) (reg env))
  (comment (lambda (code-for-next-arg) (if (null? (cdr operand-codes)) code-for-next-arg (preserving (quote (env)) code-for-next-arg (code-to-get-rest-args (cdr operand-codes))))))
  (assign proc (op make-compiled-procedure) (label entry200308172136582) (reg env))
  (goto (label after-lambda200308172136583))
  (comment (lambda (code-for-next-arg) (if (null? (cdr operand-codes)) code-for-next-arg (preserving (quote (env)) code-for-next-arg (code-to-get-rest-args (cdr operand-codes))))))
entry200308172136582
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (code-for-next-arg)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment operand-codes)
  (assign val (op lookup-variable-value) (const operand-codes) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172136590))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172136591))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172136593))
compound-branch200308172136592
  (assign continue (label after-call200308172136594))
  (goto (label compound-apply-compiled))
compiled-branch200308172136591
  (assign continue (label after-call200308172136594))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172136593
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172136590
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172136594
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137000))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137001))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137003))
compound-branch200308172137002
  (assign continue (label after-call200308172137004))
  (goto (label compound-apply-compiled))
compiled-branch200308172137001
  (assign continue (label after-call200308172137004))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137003
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137000
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137004
  (restore env)
  (restore continue)
  (comment (if (null? (cdr operand-codes)) code-for-next-arg (preserving (quote (env)) code-for-next-arg (code-to-get-rest-args (cdr operand-codes)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172136585))
true-branch200308172136584
  (comment code-for-next-arg)
  (assign val (op lookup-variable-value) (const code-for-next-arg) (reg env))
  (goto (reg continue))
false-branch200308172136585
  (comment preserving)
  (assign proc (op lookup-variable-value) (const preserving) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment code-to-get-rest-args)
  (assign proc (op lookup-variable-value) (const code-to-get-rest-args) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment operand-codes)
  (assign val (op lookup-variable-value) (const operand-codes) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137020))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137021))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137023))
compound-branch200308172137022
  (assign continue (label after-call200308172137024))
  (goto (label compound-apply-compiled))
compiled-branch200308172137021
  (assign continue (label after-call200308172137024))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137023
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137020
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137024
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137040))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137041))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137043))
compound-branch200308172137042
  (assign continue (label after-call200308172137044))
  (goto (label compound-apply-compiled))
compiled-branch200308172137041
  (assign continue (label after-call200308172137044))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137043
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137040
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137044
  (assign argl (op list) (reg val))
  (restore env)
  (comment code-for-next-arg)
  (assign val (op lookup-variable-value) (const code-for-next-arg) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (env)))
  (assign val  (const (env)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137060))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137061))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137063))
compound-branch200308172137062
  (goto (label compound-apply-compiled))
compiled-branch200308172137061
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137063
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172137060
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172137064
after-if200308172136586
after-lambda200308172136583
  (save continue)
  (save proc)
  (comment preserving)
  (assign proc (op lookup-variable-value) (const preserving) (reg env))
  (save proc)
  (save env)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (comment (quote ((assign argl (op cons) (reg val) (reg argl)))))
  (assign val  (const ((assign argl (op cons) (reg val) (reg argl)))))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (argl)))
  (assign val  (const (argl)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (val argl)))
  (assign val  (const (val argl)))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137130))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137131))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137133))
compound-branch200308172137132
  (assign continue (label after-call200308172137134))
  (goto (label compound-apply-compiled))
compiled-branch200308172137131
  (assign continue (label after-call200308172137134))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137133
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137130
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137134
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment operand-codes)
  (assign val (op lookup-variable-value) (const operand-codes) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137100))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137101))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137103))
compound-branch200308172137102
  (assign continue (label after-call200308172137104))
  (goto (label compound-apply-compiled))
compiled-branch200308172137101
  (assign continue (label after-call200308172137104))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137103
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137100
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137104
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (argl)))
  (assign val  (const (argl)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137150))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137151))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137153))
compound-branch200308172137152
  (assign continue (label after-call200308172137154))
  (goto (label compound-apply-compiled))
compiled-branch200308172137151
  (assign continue (label after-call200308172137154))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137153
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137150
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137154
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137170))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137171))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137173))
compound-branch200308172137172
  (goto (label compound-apply-compiled))
compiled-branch200308172137171
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137173
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172137170
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172137174
after-lambda200308172136581
  (comment (define (code-to-get-rest-args operand-codes) (let ((code-for-next-arg (preserving (quote (argl)) (car operand-codes) (make-instruction-sequence (quote (val argl)) (quote (argl)) (quote ((assign argl (op cons) (reg val) (reg argl)))) (quote ()))))) (if (null? (cdr operand-codes)) code-for-next-arg (preserving (quote (env)) code-for-next-arg (code-to-get-rest-args (cdr operand-codes)))))))
  (perform (op define-variable!) (const code-to-get-rest-args) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (target linkage) (let ((primitive-branch (make-label (quote primitive-branch))) (compiled-branch (make-label (quote compiled-branch))) (compound-branch (make-label (quote compound-branch))) (continuation-branch (make-label (quote continuation-branch))) (after-call (make-label (quote after-call)))) (let ((compiled-linkage (if (eq? linkage (quote next)) after-call linkage))) (append-instruction-sequences (make-instruction-sequence (quote (proc)) (quote ()) (list (list (quote test) (quote (op primitive-procedure?)) (quote (reg proc))) (list (quote branch) (list (quote label) primitive-branch)) (list (quote test) (quote (op compiled-procedure?)) (quote (reg proc))) (list (quote branch) (list (quote label) compiled-branch)) (list (quote test) (quote (op continuation?)) (quote (reg proc))) (list (quote branch) (list (quote label) continuation-branch))) (quote ())) (parallel-instruction-sequences (append-instruction-sequences compound-branch (compile-compound-proc-appl target compiled-linkage)) (parallel-instruction-sequences (append-instruction-sequences compiled-branch (compile-proc-appl target compiled-linkage)) (parallel-instruction-sequences (append-instruction-sequences continuation-branch (compile-continuation-apply target linkage)) (append-instruction-sequences primitive-branch (compile-primitive-apply target linkage))))) after-call)))))
  (assign val (op make-compiled-procedure) (label entry200308172137210) (reg env))
  (goto (label after-lambda200308172137211))
  (comment (lambda (target linkage) (let ((primitive-branch (make-label (quote primitive-branch))) (compiled-branch (make-label (quote compiled-branch))) (compound-branch (make-label (quote compound-branch))) (continuation-branch (make-label (quote continuation-branch))) (after-call (make-label (quote after-call)))) (let ((compiled-linkage (if (eq? linkage (quote next)) after-call linkage))) (append-instruction-sequences (make-instruction-sequence (quote (proc)) (quote ()) (list (list (quote test) (quote (op primitive-procedure?)) (quote (reg proc))) (list (quote branch) (list (quote label) primitive-branch)) (list (quote test) (quote (op compiled-procedure?)) (quote (reg proc))) (list (quote branch) (list (quote label) compiled-branch)) (list (quote test) (quote (op continuation?)) (quote (reg proc))) (list (quote branch) (list (quote label) continuation-branch))) (quote ())) (parallel-instruction-sequences (append-instruction-sequences compound-branch (compile-compound-proc-appl target compiled-linkage)) (parallel-instruction-sequences (append-instruction-sequences compiled-branch (compile-proc-appl target compiled-linkage)) (parallel-instruction-sequences (append-instruction-sequences continuation-branch (compile-continuation-apply target linkage)) (append-instruction-sequences primitive-branch (compile-primitive-apply target linkage))))) after-call)))))
entry200308172137210
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (target linkage)) (reg argl) (reg env))
  (comment (lambda (primitive-branch compiled-branch compound-branch continuation-branch after-call) (let ((compiled-linkage (if (eq? linkage (quote next)) after-call linkage))) (append-instruction-sequences (make-instruction-sequence (quote (proc)) (quote ()) (list (list (quote test) (quote (op primitive-procedure?)) (quote (reg proc))) (list (quote branch) (list (quote label) primitive-branch)) (list (quote test) (quote (op compiled-procedure?)) (quote (reg proc))) (list (quote branch) (list (quote label) compiled-branch)) (list (quote test) (quote (op continuation?)) (quote (reg proc))) (list (quote branch) (list (quote label) continuation-branch))) (quote ())) (parallel-instruction-sequences (append-instruction-sequences compound-branch (compile-compound-proc-appl target compiled-linkage)) (parallel-instruction-sequences (append-instruction-sequences compiled-branch (compile-proc-appl target compiled-linkage)) (parallel-instruction-sequences (append-instruction-sequences continuation-branch (compile-continuation-apply target linkage)) (append-instruction-sequences primitive-branch (compile-primitive-apply target linkage))))) after-call))))
  (assign proc (op make-compiled-procedure) (label entry200308172137220) (reg env))
  (goto (label after-lambda200308172137221))
  (comment (lambda (primitive-branch compiled-branch compound-branch continuation-branch after-call) (let ((compiled-linkage (if (eq? linkage (quote next)) after-call linkage))) (append-instruction-sequences (make-instruction-sequence (quote (proc)) (quote ()) (list (list (quote test) (quote (op primitive-procedure?)) (quote (reg proc))) (list (quote branch) (list (quote label) primitive-branch)) (list (quote test) (quote (op compiled-procedure?)) (quote (reg proc))) (list (quote branch) (list (quote label) compiled-branch)) (list (quote test) (quote (op continuation?)) (quote (reg proc))) (list (quote branch) (list (quote label) continuation-branch))) (quote ())) (parallel-instruction-sequences (append-instruction-sequences compound-branch (compile-compound-proc-appl target compiled-linkage)) (parallel-instruction-sequences (append-instruction-sequences compiled-branch (compile-proc-appl target compiled-linkage)) (parallel-instruction-sequences (append-instruction-sequences continuation-branch (compile-continuation-apply target linkage)) (append-instruction-sequences primitive-branch (compile-primitive-apply target linkage))))) after-call))))
entry200308172137220
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (primitive-branch compiled-branch compound-branch continuation-branch after-call)) (reg argl) (reg env))
  (comment (lambda (compiled-linkage) (append-instruction-sequences (make-instruction-sequence (quote (proc)) (quote ()) (list (list (quote test) (quote (op primitive-procedure?)) (quote (reg proc))) (list (quote branch) (list (quote label) primitive-branch)) (list (quote test) (quote (op compiled-procedure?)) (quote (reg proc))) (list (quote branch) (list (quote label) compiled-branch)) (list (quote test) (quote (op continuation?)) (quote (reg proc))) (list (quote branch) (list (quote label) continuation-branch))) (quote ())) (parallel-instruction-sequences (append-instruction-sequences compound-branch (compile-compound-proc-appl target compiled-linkage)) (parallel-instruction-sequences (append-instruction-sequences compiled-branch (compile-proc-appl target compiled-linkage)) (parallel-instruction-sequences (append-instruction-sequences continuation-branch (compile-continuation-apply target linkage)) (append-instruction-sequences primitive-branch (compile-primitive-apply target linkage))))) after-call)))
  (assign proc (op make-compiled-procedure) (label entry200308172137222) (reg env))
  (goto (label after-lambda200308172137223))
  (comment (lambda (compiled-linkage) (append-instruction-sequences (make-instruction-sequence (quote (proc)) (quote ()) (list (list (quote test) (quote (op primitive-procedure?)) (quote (reg proc))) (list (quote branch) (list (quote label) primitive-branch)) (list (quote test) (quote (op compiled-procedure?)) (quote (reg proc))) (list (quote branch) (list (quote label) compiled-branch)) (list (quote test) (quote (op continuation?)) (quote (reg proc))) (list (quote branch) (list (quote label) continuation-branch))) (quote ())) (parallel-instruction-sequences (append-instruction-sequences compound-branch (compile-compound-proc-appl target compiled-linkage)) (parallel-instruction-sequences (append-instruction-sequences compiled-branch (compile-proc-appl target compiled-linkage)) (parallel-instruction-sequences (append-instruction-sequences continuation-branch (compile-continuation-apply target linkage)) (append-instruction-sequences primitive-branch (compile-primitive-apply target linkage))))) after-call)))
entry200308172137222
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (compiled-linkage)) (reg argl) (reg env))
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (save continue)
  (save proc)
  (comment after-call)
  (assign val (op lookup-variable-value) (const after-call) (reg env))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment parallel-instruction-sequences)
  (assign proc (op lookup-variable-value) (const parallel-instruction-sequences) (reg env))
  (save proc)
  (save env)
  (comment parallel-instruction-sequences)
  (assign proc (op lookup-variable-value) (const parallel-instruction-sequences) (reg env))
  (save proc)
  (save env)
  (comment parallel-instruction-sequences)
  (assign proc (op lookup-variable-value) (const parallel-instruction-sequences) (reg env))
  (save proc)
  (save env)
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (save proc)
  (save env)
  (comment compile-primitive-apply)
  (assign proc (op lookup-variable-value) (const compile-primitive-apply) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138070))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138071))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138073))
compound-branch200308172138072
  (assign continue (label after-call200308172138074))
  (goto (label compound-apply-compiled))
compiled-branch200308172138071
  (assign continue (label after-call200308172138074))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138073
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172138070
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172138074
  (assign argl (op list) (reg val))
  (restore env)
  (comment primitive-branch)
  (assign val (op lookup-variable-value) (const primitive-branch) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138080))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138081))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138083))
compound-branch200308172138082
  (assign continue (label after-call200308172138084))
  (goto (label compound-apply-compiled))
compiled-branch200308172138081
  (assign continue (label after-call200308172138084))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138083
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172138080
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172138084
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (save proc)
  (save env)
  (comment compile-continuation-apply)
  (assign proc (op lookup-variable-value) (const compile-continuation-apply) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138020))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138021))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138023))
compound-branch200308172138022
  (assign continue (label after-call200308172138024))
  (goto (label compound-apply-compiled))
compiled-branch200308172138021
  (assign continue (label after-call200308172138024))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138023
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172138020
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172138024
  (assign argl (op list) (reg val))
  (restore env)
  (comment continuation-branch)
  (assign val (op lookup-variable-value) (const continuation-branch) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138040))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138041))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138043))
compound-branch200308172138042
  (assign continue (label after-call200308172138044))
  (goto (label compound-apply-compiled))
compiled-branch200308172138041
  (assign continue (label after-call200308172138044))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138043
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172138040
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172138044
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138110))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138111))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138113))
compound-branch200308172138112
  (assign continue (label after-call200308172138114))
  (goto (label compound-apply-compiled))
compiled-branch200308172138111
  (assign continue (label after-call200308172138114))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138113
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172138110
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172138114
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (save proc)
  (save env)
  (comment compile-proc-appl)
  (assign proc (op lookup-variable-value) (const compile-proc-appl) (reg env))
  (comment compiled-linkage)
  (assign val (op lookup-variable-value) (const compiled-linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137580))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137581))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137583))
compound-branch200308172137582
  (assign continue (label after-call200308172137584))
  (goto (label compound-apply-compiled))
compiled-branch200308172137581
  (assign continue (label after-call200308172137584))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137583
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137584
  (assign argl (op list) (reg val))
  (restore env)
  (comment compiled-branch)
  (assign val (op lookup-variable-value) (const compiled-branch) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138000))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138001))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138003))
compound-branch200308172138002
  (assign continue (label after-call200308172138004))
  (goto (label compound-apply-compiled))
compiled-branch200308172138001
  (assign continue (label after-call200308172138004))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138003
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172138000
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172138004
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138140))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138141))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138143))
compound-branch200308172138142
  (assign continue (label after-call200308172138144))
  (goto (label compound-apply-compiled))
compiled-branch200308172138141
  (assign continue (label after-call200308172138144))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138143
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172138140
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172138144
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (save proc)
  (save env)
  (comment compile-compound-proc-appl)
  (assign proc (op lookup-variable-value) (const compile-compound-proc-appl) (reg env))
  (comment compiled-linkage)
  (assign val (op lookup-variable-value) (const compiled-linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137540))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137541))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137543))
compound-branch200308172137542
  (assign continue (label after-call200308172137544))
  (goto (label compound-apply-compiled))
compiled-branch200308172137541
  (assign continue (label after-call200308172137544))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137543
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137540
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137544
  (assign argl (op list) (reg val))
  (restore env)
  (comment compound-branch)
  (assign val (op lookup-variable-value) (const compound-branch) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137560))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137561))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137563))
compound-branch200308172137562
  (assign continue (label after-call200308172137564))
  (goto (label compound-apply-compiled))
compiled-branch200308172137561
  (assign continue (label after-call200308172137564))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137563
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137560
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137564
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138180))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138181))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138183))
compound-branch200308172138182
  (assign continue (label after-call200308172138184))
  (goto (label compound-apply-compiled))
compiled-branch200308172138181
  (assign continue (label after-call200308172138184))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138183
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172138180
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172138184
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save proc)
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (save env)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment continuation-branch)
  (assign val (op lookup-variable-value) (const continuation-branch) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote label))
  (assign val  (const label))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137370))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137371))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137373))
compound-branch200308172137372
  (assign continue (label after-call200308172137374))
  (goto (label compound-apply-compiled))
compiled-branch200308172137371
  (assign continue (label after-call200308172137374))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137373
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137370
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137374
  (assign argl (op list) (reg val))
  (comment (quote branch))
  (assign val  (const branch))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137390))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137391))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137393))
compound-branch200308172137392
  (assign continue (label after-call200308172137394))
  (goto (label compound-apply-compiled))
compiled-branch200308172137391
  (assign continue (label after-call200308172137394))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137393
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137390
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137394
  (assign argl (op list) (reg val))
  (restore env)
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment (quote (reg proc)))
  (assign val  (const (reg proc)))
  (assign argl (op list) (reg val))
  (comment (quote (op continuation?)))
  (assign val  (const (op continuation?)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote test))
  (assign val  (const test))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137350))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137351))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137353))
compound-branch200308172137352
  (assign continue (label after-call200308172137354))
  (goto (label compound-apply-compiled))
compiled-branch200308172137351
  (assign continue (label after-call200308172137354))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137353
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137350
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137354
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment compiled-branch)
  (assign val (op lookup-variable-value) (const compiled-branch) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote label))
  (assign val  (const label))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137320))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137321))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137323))
compound-branch200308172137322
  (assign continue (label after-call200308172137324))
  (goto (label compound-apply-compiled))
compiled-branch200308172137321
  (assign continue (label after-call200308172137324))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137323
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137320
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137324
  (assign argl (op list) (reg val))
  (comment (quote branch))
  (assign val  (const branch))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137330))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137331))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137333))
compound-branch200308172137332
  (assign continue (label after-call200308172137334))
  (goto (label compound-apply-compiled))
compiled-branch200308172137331
  (assign continue (label after-call200308172137334))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137333
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137330
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137334
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment (quote (reg proc)))
  (assign val  (const (reg proc)))
  (assign argl (op list) (reg val))
  (comment (quote (op compiled-procedure?)))
  (assign val  (const (op compiled-procedure?)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote test))
  (assign val  (const test))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137300))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137301))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137303))
compound-branch200308172137302
  (assign continue (label after-call200308172137304))
  (goto (label compound-apply-compiled))
compiled-branch200308172137301
  (assign continue (label after-call200308172137304))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137303
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137300
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137304
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment primitive-branch)
  (assign val (op lookup-variable-value) (const primitive-branch) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote label))
  (assign val  (const label))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137260))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137261))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137263))
compound-branch200308172137262
  (assign continue (label after-call200308172137264))
  (goto (label compound-apply-compiled))
compiled-branch200308172137261
  (assign continue (label after-call200308172137264))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137263
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137260
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137264
  (assign argl (op list) (reg val))
  (comment (quote branch))
  (assign val  (const branch))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137270))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137271))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137273))
compound-branch200308172137272
  (assign continue (label after-call200308172137274))
  (goto (label compound-apply-compiled))
compiled-branch200308172137271
  (assign continue (label after-call200308172137274))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137273
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137270
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137274
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment (quote (reg proc)))
  (assign val  (const (reg proc)))
  (assign argl (op list) (reg val))
  (comment (quote (op primitive-procedure?)))
  (assign val  (const (op primitive-procedure?)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote test))
  (assign val  (const test))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137240))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137241))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137243))
compound-branch200308172137242
  (assign continue (label after-call200308172137244))
  (goto (label compound-apply-compiled))
compiled-branch200308172137241
  (assign continue (label after-call200308172137244))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137243
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137240
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137244
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137450))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137451))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137453))
compound-branch200308172137452
  (assign continue (label after-call200308172137454))
  (goto (label compound-apply-compiled))
compiled-branch200308172137451
  (assign continue (label after-call200308172137454))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137453
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137450
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137454
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (proc)))
  (assign val  (const (proc)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172137500))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172137501))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172137503))
compound-branch200308172137502
  (assign continue (label after-call200308172137504))
  (goto (label compound-apply-compiled))
compiled-branch200308172137501
  (assign continue (label after-call200308172137504))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172137503
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172137500
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172137504
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138270))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138271))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138273))
compound-branch200308172138272
  (goto (label compound-apply-compiled))
compiled-branch200308172138271
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138273
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172138270
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172138274
after-lambda200308172137223
  (save continue)
  (save proc)
  (save env)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote next))
  (assign val  (const next))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138383))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138384))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138386))
compound-branch200308172138385
  (assign continue (label after-call200308172138387))
  (goto (label compound-apply-compiled))
compiled-branch200308172138384
  (assign continue (label after-call200308172138387))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138386
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172138383
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172138387
  (restore env)
  (comment (if (eq? linkage (quote next)) after-call linkage))
  (test (op false?) (reg val))
  (branch (label false-branch200308172138381))
true-branch200308172138380
  (comment after-call)
  (assign val (op lookup-variable-value) (const after-call) (reg env))
  (goto (label after-if200308172138382))
false-branch200308172138381
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
after-if200308172138382
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138400))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138401))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138403))
compound-branch200308172138402
  (goto (label compound-apply-compiled))
compiled-branch200308172138401
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138403
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172138400
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172138404
after-lambda200308172137221
  (save continue)
  (save proc)
  (save env)
  (comment make-label)
  (assign proc (op lookup-variable-value) (const make-label) (reg env))
  (comment (quote after-call))
  (assign val  (const after-call))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138540))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138541))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138543))
compound-branch200308172138542
  (assign continue (label after-call200308172138544))
  (goto (label compound-apply-compiled))
compiled-branch200308172138541
  (assign continue (label after-call200308172138544))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138543
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172138540
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172138544
  (assign argl (op list) (reg val))
  (restore env)
  (save env)
  (save argl)
  (comment make-label)
  (assign proc (op lookup-variable-value) (const make-label) (reg env))
  (comment (quote continuation-branch))
  (assign val  (const continuation-branch))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138520))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138521))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138523))
compound-branch200308172138522
  (assign continue (label after-call200308172138524))
  (goto (label compound-apply-compiled))
compiled-branch200308172138521
  (assign continue (label after-call200308172138524))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138523
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172138520
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172138524
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (comment make-label)
  (assign proc (op lookup-variable-value) (const make-label) (reg env))
  (comment (quote compound-branch))
  (assign val  (const compound-branch))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138500))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138501))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138503))
compound-branch200308172138502
  (assign continue (label after-call200308172138504))
  (goto (label compound-apply-compiled))
compiled-branch200308172138501
  (assign continue (label after-call200308172138504))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138503
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172138500
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172138504
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (comment make-label)
  (assign proc (op lookup-variable-value) (const make-label) (reg env))
  (comment (quote compiled-branch))
  (assign val  (const compiled-branch))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138490))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138491))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138493))
compound-branch200308172138492
  (assign continue (label after-call200308172138494))
  (goto (label compound-apply-compiled))
compiled-branch200308172138491
  (assign continue (label after-call200308172138494))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138493
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172138490
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172138494
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment make-label)
  (assign proc (op lookup-variable-value) (const make-label) (reg env))
  (comment (quote primitive-branch))
  (assign val  (const primitive-branch))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138470))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138471))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138473))
compound-branch200308172138472
  (assign continue (label after-call200308172138474))
  (goto (label compound-apply-compiled))
compiled-branch200308172138471
  (assign continue (label after-call200308172138474))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138473
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172138470
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172138474
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172138580))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172138581))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172138583))
compound-branch200308172138582
  (goto (label compound-apply-compiled))
compiled-branch200308172138581
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172138583
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172138580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172138584
after-lambda200308172137211
  (comment (define (compile-procedure-call target linkage) (let ((primitive-branch (make-label (quote primitive-branch))) (compiled-branch (make-label (quote compiled-branch))) (compound-branch (make-label (quote compound-branch))) (continuation-branch (make-label (quote continuation-branch))) (after-call (make-label (quote after-call)))) (let ((compiled-linkage (if (eq? linkage (quote next)) after-call linkage))) (append-instruction-sequences (make-instruction-sequence (quote (proc)) (quote ()) (list (list (quote test) (quote (op primitive-procedure?)) (quote (reg proc))) (list (quote branch) (list (quote label) primitive-branch)) (list (quote test) (quote (op compiled-procedure?)) (quote (reg proc))) (list (quote branch) (list (quote label) compiled-branch)) (list (quote test) (quote (op continuation?)) (quote (reg proc))) (list (quote branch) (list (quote label) continuation-branch))) (quote ())) (parallel-instruction-sequences (append-instruction-sequences compound-branch (compile-compound-proc-appl target compiled-linkage)) (parallel-instruction-sequences (append-instruction-sequences compiled-branch (compile-proc-appl target compiled-linkage)) (parallel-instruction-sequences (append-instruction-sequences continuation-branch (compile-continuation-apply target linkage)) (append-instruction-sequences primitive-branch (compile-primitive-apply target linkage))))) after-call)))))
  (perform (op define-variable!) (const compile-procedure-call) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (target linkage) (end-with-linkage linkage (make-instruction-sequence (quote (proc argl)) (list target) (list (list (quote assign) target (quote (op apply-primitive-procedure)) (quote (reg proc)) (quote (reg argl)))) (quote ())))))
  (assign val (op make-compiled-procedure) (label entry200308172139090) (reg env))
  (goto (label after-lambda200308172139091))
  (comment (lambda (target linkage) (end-with-linkage linkage (make-instruction-sequence (quote (proc argl)) (list target) (list (list (quote assign) target (quote (op apply-primitive-procedure)) (quote (reg proc)) (quote (reg argl)))) (quote ())))))
entry200308172139090
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (target linkage)) (reg argl) (reg env))
  (comment end-with-linkage)
  (assign proc (op lookup-variable-value) (const end-with-linkage) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save proc)
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment (quote (reg argl)))
  (assign val  (const (reg argl)))
  (assign argl (op list) (reg val))
  (comment (quote (reg proc)))
  (assign val  (const (reg proc)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (op apply-primitive-procedure)))
  (assign val  (const (op apply-primitive-procedure)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote assign))
  (assign val  (const assign))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139140))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139141))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139143))
compound-branch200308172139142
  (assign continue (label after-call200308172139144))
  (goto (label compound-apply-compiled))
compiled-branch200308172139141
  (assign continue (label after-call200308172139144))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139143
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172139140
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172139144
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139150))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139151))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139153))
compound-branch200308172139152
  (assign continue (label after-call200308172139154))
  (goto (label compound-apply-compiled))
compiled-branch200308172139151
  (assign continue (label after-call200308172139154))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139153
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172139150
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172139154
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139100))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139101))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139103))
compound-branch200308172139102
  (assign continue (label after-call200308172139104))
  (goto (label compound-apply-compiled))
compiled-branch200308172139101
  (assign continue (label after-call200308172139104))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139103
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172139100
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172139104
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (proc argl)))
  (assign val  (const (proc argl)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139190))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139191))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139193))
compound-branch200308172139192
  (assign continue (label after-call200308172139194))
  (goto (label compound-apply-compiled))
compiled-branch200308172139191
  (assign continue (label after-call200308172139194))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139193
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172139190
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172139194
  (assign argl (op list) (reg val))
  (restore env)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139210))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139211))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139213))
compound-branch200308172139212
  (goto (label compound-apply-compiled))
compiled-branch200308172139211
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139213
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172139210
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172139214
after-lambda200308172139091
  (comment (define (compile-primitive-apply target linkage) (end-with-linkage linkage (make-instruction-sequence (quote (proc argl)) (list target) (list (list (quote assign) target (quote (op apply-primitive-procedure)) (quote (reg proc)) (quote (reg argl)))) (quote ())))))
  (perform (op define-variable!) (const compile-primitive-apply) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (target linkage) (end-with-linkage linkage (make-instruction-sequence (quote (proc argl)) (list target) (list (list (quote assign) target (quote (op apply-continuation)) (quote (reg proc)) (quote (reg argl)))) (quote ())))))
  (assign val (op make-compiled-procedure) (label entry200308172139250) (reg env))
  (goto (label after-lambda200308172139251))
  (comment (lambda (target linkage) (end-with-linkage linkage (make-instruction-sequence (quote (proc argl)) (list target) (list (list (quote assign) target (quote (op apply-continuation)) (quote (reg proc)) (quote (reg argl)))) (quote ())))))
entry200308172139250
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (target linkage)) (reg argl) (reg env))
  (comment end-with-linkage)
  (assign proc (op lookup-variable-value) (const end-with-linkage) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save proc)
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment (quote (reg argl)))
  (assign val  (const (reg argl)))
  (assign argl (op list) (reg val))
  (comment (quote (reg proc)))
  (assign val  (const (reg proc)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (op apply-continuation)))
  (assign val  (const (op apply-continuation)))
  (assign argl (op cons) (reg val) (reg argl))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote assign))
  (assign val  (const assign))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139290))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139291))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139293))
compound-branch200308172139292
  (assign continue (label after-call200308172139294))
  (goto (label compound-apply-compiled))
compiled-branch200308172139291
  (assign continue (label after-call200308172139294))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139293
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172139290
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172139294
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139300))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139301))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139303))
compound-branch200308172139302
  (assign continue (label after-call200308172139304))
  (goto (label compound-apply-compiled))
compiled-branch200308172139301
  (assign continue (label after-call200308172139304))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139303
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172139300
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172139304
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139260))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139261))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139263))
compound-branch200308172139262
  (assign continue (label after-call200308172139264))
  (goto (label compound-apply-compiled))
compiled-branch200308172139261
  (assign continue (label after-call200308172139264))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139263
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172139260
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172139264
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (proc argl)))
  (assign val  (const (proc argl)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139340))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139341))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139343))
compound-branch200308172139342
  (assign continue (label after-call200308172139344))
  (goto (label compound-apply-compiled))
compiled-branch200308172139341
  (assign continue (label after-call200308172139344))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139343
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172139340
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172139344
  (assign argl (op list) (reg val))
  (restore env)
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139360))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139361))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139363))
compound-branch200308172139362
  (goto (label compound-apply-compiled))
compiled-branch200308172139361
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139363
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172139360
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172139364
after-lambda200308172139251
  (comment (define (compile-continuation-apply target linkage) (end-with-linkage linkage (make-instruction-sequence (quote (proc argl)) (list target) (list (list (quote assign) target (quote (op apply-continuation)) (quote (reg proc)) (quote (reg argl)))) (quote ())))))
  (perform (op define-variable!) (const compile-continuation-apply) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (target linkage) (cond ((and (eq? target (quote val)) (not (eq? linkage (quote return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) linkage)) (quote (assign val (op compiled-procedure-entry) (reg proc))) (quote (goto (reg val)))) (quote ()))) ((and (not (eq? target (quote val))) (not (eq? linkage (quote return)))) (let ((proc-return (make-label (quote proc-return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) proc-return)) (quote (assign val (op compiled-procedure-entry) (reg proc))) (quote (goto (reg val))) proc-return (list (quote assign) target (quote (reg val))) (list (quote goto) (list (quote label) linkage))) (quote ())))) ((and (eq? target (quote val)) (eq? linkage (quote return))) (make-instruction-sequence (quote (proc continue)) all-regs (quote ((assign val (op compiled-procedure-entry) (reg proc)) (goto (reg val)))) (quote ()))) ((and (not (eq? target (quote val))) (eq? linkage (quote return))) (error "return linkage, target not val -- COMPILE" target)))))
  (assign val (op make-compiled-procedure) (label entry200308172139410) (reg env))
  (goto (label after-lambda200308172139411))
  (comment (lambda (target linkage) (cond ((and (eq? target (quote val)) (not (eq? linkage (quote return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) linkage)) (quote (assign val (op compiled-procedure-entry) (reg proc))) (quote (goto (reg val)))) (quote ()))) ((and (not (eq? target (quote val))) (not (eq? linkage (quote return)))) (let ((proc-return (make-label (quote proc-return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) proc-return)) (quote (assign val (op compiled-procedure-entry) (reg proc))) (quote (goto (reg val))) proc-return (list (quote assign) target (quote (reg val))) (list (quote goto) (list (quote label) linkage))) (quote ())))) ((and (eq? target (quote val)) (eq? linkage (quote return))) (make-instruction-sequence (quote (proc continue)) all-regs (quote ((assign val (op compiled-procedure-entry) (reg proc)) (goto (reg val)))) (quote ()))) ((and (not (eq? target (quote val))) (eq? linkage (quote return))) (error "return linkage, target not val -- COMPILE" target)))))
entry200308172139410
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (target linkage)) (reg argl) (reg env))
  (save continue)
  (save env)
  (save env)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote val))
  (assign val  (const val))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139416))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139417))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139419))
compound-branch200308172139418
  (assign continue (label after-call2003081721394110))
  (goto (label compound-apply-compiled))
compiled-branch200308172139417
  (assign continue (label after-call2003081721394110))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139419
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172139416
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003081721394110
  (restore env)
  (comment ((eq? target (quote val)) (not (eq? linkage (quote return)))))
  (test (op false?) (reg val))
  (branch (label and-false-found200308172139415))
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (save proc)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote return))
  (assign val  (const return))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139440))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139441))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139443))
compound-branch200308172139442
  (assign continue (label after-call200308172139444))
  (goto (label compound-apply-compiled))
compiled-branch200308172139441
  (assign continue (label after-call200308172139444))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139443
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172139440
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172139444
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139450))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139451))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139453))
compound-branch200308172139452
  (assign continue (label after-call200308172139454))
  (goto (label compound-apply-compiled))
compiled-branch200308172139451
  (assign continue (label after-call200308172139454))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139453
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172139450
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172139454
and-false-found200308172139415
  (restore env)
  (restore continue)
  (comment (if (and (eq? target (quote val)) (not (eq? linkage (quote return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) linkage)) (quote (assign val (op compiled-procedure-entry) (reg proc))) (quote (goto (reg val)))) (quote ())) (if (and (not (eq? target (quote val))) (not (eq? linkage (quote return)))) (let ((proc-return (make-label (quote proc-return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) proc-return)) (quote (assign val (op compiled-procedure-entry) (reg proc))) (quote (goto (reg val))) proc-return (list (quote assign) target (quote (reg val))) (list (quote goto) (list (quote label) linkage))) (quote ()))) (if (and (eq? target (quote val)) (eq? linkage (quote return))) (make-instruction-sequence (quote (proc continue)) all-regs (quote ((assign val (op compiled-procedure-entry) (reg proc)) (goto (reg val)))) (quote ())) (if (and (not (eq? target (quote val))) (eq? linkage (quote return))) (error "return linkage, target not val -- COMPILE" target) false)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172139413))
true-branch200308172139412
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save continue)
  (save proc)
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment (quote (goto (reg val))))
  (assign val  (const (goto (reg val))))
  (assign argl (op list) (reg val))
  (comment (quote (assign val (op compiled-procedure-entry) (reg proc))))
  (assign val  (const (assign val (op compiled-procedure-entry) (reg proc))))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote label))
  (assign val  (const label))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139490))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139491))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139493))
compound-branch200308172139492
  (assign continue (label after-call200308172139494))
  (goto (label compound-apply-compiled))
compiled-branch200308172139491
  (assign continue (label after-call200308172139494))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139493
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172139490
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172139494
  (assign argl (op list) (reg val))
  (comment (quote continue))
  (assign val  (const continue))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote assign))
  (assign val  (const assign))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139510))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139511))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139513))
compound-branch200308172139512
  (assign continue (label after-call200308172139514))
  (goto (label compound-apply-compiled))
compiled-branch200308172139511
  (assign continue (label after-call200308172139514))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139513
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172139510
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172139514
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139530))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139531))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139533))
compound-branch200308172139532
  (assign continue (label after-call200308172139534))
  (goto (label compound-apply-compiled))
compiled-branch200308172139531
  (assign continue (label after-call200308172139534))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139533
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172139530
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172139534
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (comment all-regs)
  (assign val (op lookup-variable-value) (const all-regs) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (proc)))
  (assign val  (const (proc)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172139570))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172139571))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172139573))
compound-branch200308172139572
  (goto (label compound-apply-compiled))
compiled-branch200308172139571
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172139573
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172139570
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172139574
false-branch200308172139413
  (save continue)
  (save env)
  (save env)
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (save proc)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote val))
  (assign val  (const val))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140000))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140001))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140003))
compound-branch200308172140002
  (assign continue (label after-call200308172140004))
  (goto (label compound-apply-compiled))
compiled-branch200308172140001
  (assign continue (label after-call200308172140004))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140003
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140000
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140004
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140020))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140021))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140023))
compound-branch200308172140022
  (assign continue (label after-call200308172140024))
  (goto (label compound-apply-compiled))
compiled-branch200308172140021
  (assign continue (label after-call200308172140024))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140023
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140020
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140024
  (restore env)
  (comment ((not (eq? target (quote val))) (not (eq? linkage (quote return)))))
  (test (op false?) (reg val))
  (branch (label and-false-found200308172139593))
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (save proc)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote return))
  (assign val  (const return))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140040))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140041))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140043))
compound-branch200308172140042
  (assign continue (label after-call200308172140044))
  (goto (label compound-apply-compiled))
compiled-branch200308172140041
  (assign continue (label after-call200308172140044))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140043
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140040
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140044
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140050))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140051))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140053))
compound-branch200308172140052
  (assign continue (label after-call200308172140054))
  (goto (label compound-apply-compiled))
compiled-branch200308172140051
  (assign continue (label after-call200308172140054))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140053
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140050
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140054
and-false-found200308172139593
  (restore env)
  (restore continue)
  (comment (if (and (not (eq? target (quote val))) (not (eq? linkage (quote return)))) (let ((proc-return (make-label (quote proc-return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) proc-return)) (quote (assign val (op compiled-procedure-entry) (reg proc))) (quote (goto (reg val))) proc-return (list (quote assign) target (quote (reg val))) (list (quote goto) (list (quote label) linkage))) (quote ()))) (if (and (eq? target (quote val)) (eq? linkage (quote return))) (make-instruction-sequence (quote (proc continue)) all-regs (quote ((assign val (op compiled-procedure-entry) (reg proc)) (goto (reg val)))) (quote ())) (if (and (not (eq? target (quote val))) (eq? linkage (quote return))) (error "return linkage, target not val -- COMPILE" target) false))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172139591))
true-branch200308172139590
  (comment (lambda (proc-return) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) proc-return)) (quote (assign val (op compiled-procedure-entry) (reg proc))) (quote (goto (reg val))) proc-return (list (quote assign) target (quote (reg val))) (list (quote goto) (list (quote label) linkage))) (quote ()))))
  (assign proc (op make-compiled-procedure) (label entry200308172140080) (reg env))
  (goto (label after-lambda200308172140081))
  (comment (lambda (proc-return) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) proc-return)) (quote (assign val (op compiled-procedure-entry) (reg proc))) (quote (goto (reg val))) proc-return (list (quote assign) target (quote (reg val))) (list (quote goto) (list (quote label) linkage))) (quote ()))))
entry200308172140080
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc-return)) (reg argl) (reg env))
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save continue)
  (save proc)
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (save env)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote label))
  (assign val  (const label))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140170))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140171))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140173))
compound-branch200308172140172
  (assign continue (label after-call200308172140174))
  (goto (label compound-apply-compiled))
compiled-branch200308172140171
  (assign continue (label after-call200308172140174))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140173
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140170
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140174
  (assign argl (op list) (reg val))
  (comment (quote goto))
  (assign val  (const goto))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140190))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140191))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140193))
compound-branch200308172140192
  (assign continue (label after-call200308172140194))
  (goto (label compound-apply-compiled))
compiled-branch200308172140191
  (assign continue (label after-call200308172140194))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140193
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140190
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140194
  (assign argl (op list) (reg val))
  (restore env)
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment (quote (reg val)))
  (assign val  (const (reg val)))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote assign))
  (assign val  (const assign))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140150))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140151))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140153))
compound-branch200308172140152
  (assign continue (label after-call200308172140154))
  (goto (label compound-apply-compiled))
compiled-branch200308172140151
  (assign continue (label after-call200308172140154))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140153
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140150
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140154
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (comment proc-return)
  (assign val (op lookup-variable-value) (const proc-return) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (goto (reg val))))
  (assign val  (const (goto (reg val))))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (assign val (op compiled-procedure-entry) (reg proc))))
  (assign val  (const (assign val (op compiled-procedure-entry) (reg proc))))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment proc-return)
  (assign val (op lookup-variable-value) (const proc-return) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote label))
  (assign val  (const label))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140100))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140101))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140103))
compound-branch200308172140102
  (assign continue (label after-call200308172140104))
  (goto (label compound-apply-compiled))
compiled-branch200308172140101
  (assign continue (label after-call200308172140104))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140103
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140100
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140104
  (assign argl (op list) (reg val))
  (comment (quote continue))
  (assign val  (const continue))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote assign))
  (assign val  (const assign))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140120))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140121))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140123))
compound-branch200308172140122
  (assign continue (label after-call200308172140124))
  (goto (label compound-apply-compiled))
compiled-branch200308172140121
  (assign continue (label after-call200308172140124))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140123
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140120
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140124
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140230))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140231))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140233))
compound-branch200308172140232
  (assign continue (label after-call200308172140234))
  (goto (label compound-apply-compiled))
compiled-branch200308172140231
  (assign continue (label after-call200308172140234))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140233
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140230
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140234
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (comment all-regs)
  (assign val (op lookup-variable-value) (const all-regs) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (proc)))
  (assign val  (const (proc)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140280))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140281))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140283))
compound-branch200308172140282
  (goto (label compound-apply-compiled))
compiled-branch200308172140281
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140283
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172140280
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172140284
after-lambda200308172140081
  (save continue)
  (save proc)
  (comment make-label)
  (assign proc (op lookup-variable-value) (const make-label) (reg env))
  (comment (quote proc-return))
  (assign val  (const proc-return))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140330))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140331))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140333))
compound-branch200308172140332
  (assign continue (label after-call200308172140334))
  (goto (label compound-apply-compiled))
compiled-branch200308172140331
  (assign continue (label after-call200308172140334))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140333
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140330
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140334
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140340))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140341))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140343))
compound-branch200308172140342
  (goto (label compound-apply-compiled))
compiled-branch200308172140341
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140343
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172140340
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172140344
false-branch200308172139591
  (save continue)
  (save env)
  (save env)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote val))
  (assign val  (const val))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140370))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140371))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140373))
compound-branch200308172140372
  (assign continue (label after-call200308172140374))
  (goto (label compound-apply-compiled))
compiled-branch200308172140371
  (assign continue (label after-call200308172140374))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140373
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140370
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140374
  (restore env)
  (comment ((eq? target (quote val)) (eq? linkage (quote return))))
  (test (op false?) (reg val))
  (branch (label and-false-found200308172140363))
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote return))
  (assign val  (const return))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140380))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140381))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140383))
compound-branch200308172140382
  (assign continue (label after-call200308172140384))
  (goto (label compound-apply-compiled))
compiled-branch200308172140381
  (assign continue (label after-call200308172140384))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140383
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140380
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140384
and-false-found200308172140363
  (restore env)
  (restore continue)
  (comment (if (and (eq? target (quote val)) (eq? linkage (quote return))) (make-instruction-sequence (quote (proc continue)) all-regs (quote ((assign val (op compiled-procedure-entry) (reg proc)) (goto (reg val)))) (quote ())) (if (and (not (eq? target (quote val))) (eq? linkage (quote return))) (error "return linkage, target not val -- COMPILE" target) false)))
  (test (op false?) (reg val))
  (branch (label false-branch200308172140361))
true-branch200308172140360
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (comment (quote ((assign val (op compiled-procedure-entry) (reg proc)) (goto (reg val)))))
  (assign val  (const ((assign val (op compiled-procedure-entry) (reg proc)) (goto (reg val)))))
  (assign argl (op cons) (reg val) (reg argl))
  (comment all-regs)
  (assign val (op lookup-variable-value) (const all-regs) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (proc continue)))
  (assign val  (const (proc continue)))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140420))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140421))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140423))
compound-branch200308172140422
  (goto (label compound-apply-compiled))
compiled-branch200308172140421
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140423
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172140420
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172140424
false-branch200308172140361
  (save continue)
  (save env)
  (save env)
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (save proc)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote val))
  (assign val  (const val))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140440))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140441))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140443))
compound-branch200308172140442
  (assign continue (label after-call200308172140444))
  (goto (label compound-apply-compiled))
compiled-branch200308172140441
  (assign continue (label after-call200308172140444))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140443
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140440
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140444
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140450))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140451))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140453))
compound-branch200308172140452
  (assign continue (label after-call200308172140454))
  (goto (label compound-apply-compiled))
compiled-branch200308172140451
  (assign continue (label after-call200308172140454))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140453
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140450
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140454
  (restore env)
  (comment ((not (eq? target (quote val))) (eq? linkage (quote return))))
  (test (op false?) (reg val))
  (branch (label and-false-found200308172140433))
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote return))
  (assign val  (const return))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140470))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140471))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140473))
compound-branch200308172140472
  (assign continue (label after-call200308172140474))
  (goto (label compound-apply-compiled))
compiled-branch200308172140471
  (assign continue (label after-call200308172140474))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140473
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172140470
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172140474
and-false-found200308172140433
  (restore env)
  (restore continue)
  (comment (if (and (not (eq? target (quote val))) (eq? linkage (quote return))) (error "return linkage, target not val -- COMPILE" target) false))
  (test (op false?) (reg val))
  (branch (label false-branch200308172140431))
true-branch200308172140430
  (comment error)
  (assign proc (op lookup-variable-value) (const error) (reg env))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op list) (reg val))
  (comment "return linkage, target not val -- COMPILE")
  (assign val  (const "return linkage, target not val -- COMPILE"))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172140500))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172140501))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172140503))
compound-branch200308172140502
  (goto (label compound-apply-compiled))
compiled-branch200308172140501
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172140503
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172140500
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172140504
false-branch200308172140431
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if200308172140432
after-if200308172140362
after-if200308172139592
after-if200308172139414
after-lambda200308172139411
  (comment (define (compile-proc-appl target linkage) (cond ((and (eq? target (quote val)) (not (eq? linkage (quote return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) linkage)) (quote (assign val (op compiled-procedure-entry) (reg proc))) (quote (goto (reg val)))) (quote ()))) ((and (not (eq? target (quote val))) (not (eq? linkage (quote return)))) (let ((proc-return (make-label (quote proc-return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) proc-return)) (quote (assign val (op compiled-procedure-entry) (reg proc))) (quote (goto (reg val))) proc-return (list (quote assign) target (quote (reg val))) (list (quote goto) (list (quote label) linkage))) (quote ())))) ((and (eq? target (quote val)) (eq? linkage (quote return))) (make-instruction-sequence (quote (proc continue)) all-regs (quote ((assign val (op compiled-procedure-entry) (reg proc)) (goto (reg val)))) (quote ()))) ((and (not (eq? target (quote val))) (eq? linkage (quote return))) (error "return linkage, target not val -- COMPILE" target)))))
  (perform (op define-variable!) (const compile-proc-appl) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (target linkage) (cond ((and (eq? target (quote val)) (not (eq? linkage (quote return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) linkage)) (quote (goto (label compound-apply-compiled)))) (quote ()))) ((and (not (eq? target (quote val))) (not (eq? linkage (quote return)))) (let ((proc-return (make-label (quote proc-return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) proc-return)) (quote (goto (label compound-apply))) proc-return (list (quote assign) target (quote (reg val))) (list (quote goto) (list (quote label) linkage))) (quote ())))) ((and (eq? target (quote val)) (eq? linkage (quote return))) (make-instruction-sequence (quote (proc continue)) all-regs (quote ((goto (label compound-apply-compiled)))) (quote ()))) ((and (not (eq? target (quote val))) (eq? linkage (quote return))) (error "return linkage, target not val -- COMPILE" target)))))
  (assign val (op make-compiled-procedure) (label entry200308172141170) (reg env))
  (goto (label after-lambda200308172141171))
  (comment (lambda (target linkage) (cond ((and (eq? target (quote val)) (not (eq? linkage (quote return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) linkage)) (quote (goto (label compound-apply-compiled)))) (quote ()))) ((and (not (eq? target (quote val))) (not (eq? linkage (quote return)))) (let ((proc-return (make-label (quote proc-return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) proc-return)) (quote (goto (label compound-apply))) proc-return (list (quote assign) target (quote (reg val))) (list (quote goto) (list (quote label) linkage))) (quote ())))) ((and (eq? target (quote val)) (eq? linkage (quote return))) (make-instruction-sequence (quote (proc continue)) all-regs (quote ((goto (label compound-apply-compiled)))) (quote ()))) ((and (not (eq? target (quote val))) (eq? linkage (quote return))) (error "return linkage, target not val -- COMPILE" target)))))
entry200308172141170
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (target linkage)) (reg argl) (reg env))
  (save continue)
  (save env)
  (save env)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote val))
  (assign val  (const val))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141184))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141185))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141187))
compound-branch200308172141186
  (assign continue (label after-call200308172141188))
  (goto (label compound-apply-compiled))
compiled-branch200308172141185
  (assign continue (label after-call200308172141188))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141187
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141184
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141188
  (restore env)
  (comment ((eq? target (quote val)) (not (eq? linkage (quote return)))))
  (test (op false?) (reg val))
  (branch (label and-false-found200308172141183))
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (save proc)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote return))
  (assign val  (const return))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141200))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141201))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141203))
compound-branch200308172141202
  (assign continue (label after-call200308172141204))
  (goto (label compound-apply-compiled))
compiled-branch200308172141201
  (assign continue (label after-call200308172141204))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141203
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141200
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141204
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141220))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141221))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141223))
compound-branch200308172141222
  (assign continue (label after-call200308172141224))
  (goto (label compound-apply-compiled))
compiled-branch200308172141221
  (assign continue (label after-call200308172141224))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141223
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141220
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141224
and-false-found200308172141183
  (restore env)
  (restore continue)
  (comment (if (and (eq? target (quote val)) (not (eq? linkage (quote return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) linkage)) (quote (goto (label compound-apply-compiled)))) (quote ())) (if (and (not (eq? target (quote val))) (not (eq? linkage (quote return)))) (let ((proc-return (make-label (quote proc-return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) proc-return)) (quote (goto (label compound-apply))) proc-return (list (quote assign) target (quote (reg val))) (list (quote goto) (list (quote label) linkage))) (quote ()))) (if (and (eq? target (quote val)) (eq? linkage (quote return))) (make-instruction-sequence (quote (proc continue)) all-regs (quote ((goto (label compound-apply-compiled)))) (quote ())) (if (and (not (eq? target (quote val))) (eq? linkage (quote return))) (error "return linkage, target not val -- COMPILE" target) false)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172141181))
true-branch200308172141180
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save continue)
  (save proc)
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment (quote (goto (label compound-apply-compiled))))
  (assign val  (const (goto (label compound-apply-compiled))))
  (assign argl (op list) (reg val))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote label))
  (assign val  (const label))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141250))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141251))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141253))
compound-branch200308172141252
  (assign continue (label after-call200308172141254))
  (goto (label compound-apply-compiled))
compiled-branch200308172141251
  (assign continue (label after-call200308172141254))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141253
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141250
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141254
  (assign argl (op list) (reg val))
  (comment (quote continue))
  (assign val  (const continue))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote assign))
  (assign val  (const assign))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141270))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141271))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141273))
compound-branch200308172141272
  (assign continue (label after-call200308172141274))
  (goto (label compound-apply-compiled))
compiled-branch200308172141271
  (assign continue (label after-call200308172141274))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141273
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141270
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141274
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141300))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141301))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141303))
compound-branch200308172141302
  (assign continue (label after-call200308172141304))
  (goto (label compound-apply-compiled))
compiled-branch200308172141301
  (assign continue (label after-call200308172141304))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141303
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141300
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141304
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (comment all-regs)
  (assign val (op lookup-variable-value) (const all-regs) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (proc)))
  (assign val  (const (proc)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141330))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141331))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141333))
compound-branch200308172141332
  (goto (label compound-apply-compiled))
compiled-branch200308172141331
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141333
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172141330
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172141334
false-branch200308172141181
  (save continue)
  (save env)
  (save env)
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (save proc)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote val))
  (assign val  (const val))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141360))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141361))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141363))
compound-branch200308172141362
  (assign continue (label after-call200308172141364))
  (goto (label compound-apply-compiled))
compiled-branch200308172141361
  (assign continue (label after-call200308172141364))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141363
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141360
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141364
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141370))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141371))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141373))
compound-branch200308172141372
  (assign continue (label after-call200308172141374))
  (goto (label compound-apply-compiled))
compiled-branch200308172141371
  (assign continue (label after-call200308172141374))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141373
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141370
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141374
  (restore env)
  (comment ((not (eq? target (quote val))) (not (eq? linkage (quote return)))))
  (test (op false?) (reg val))
  (branch (label and-false-found200308172141353))
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (save proc)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote return))
  (assign val  (const return))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141390))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141391))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141393))
compound-branch200308172141392
  (assign continue (label after-call200308172141394))
  (goto (label compound-apply-compiled))
compiled-branch200308172141391
  (assign continue (label after-call200308172141394))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141393
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141390
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141394
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141410))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141411))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141413))
compound-branch200308172141412
  (assign continue (label after-call200308172141414))
  (goto (label compound-apply-compiled))
compiled-branch200308172141411
  (assign continue (label after-call200308172141414))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141413
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141410
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141414
and-false-found200308172141353
  (restore env)
  (restore continue)
  (comment (if (and (not (eq? target (quote val))) (not (eq? linkage (quote return)))) (let ((proc-return (make-label (quote proc-return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) proc-return)) (quote (goto (label compound-apply))) proc-return (list (quote assign) target (quote (reg val))) (list (quote goto) (list (quote label) linkage))) (quote ()))) (if (and (eq? target (quote val)) (eq? linkage (quote return))) (make-instruction-sequence (quote (proc continue)) all-regs (quote ((goto (label compound-apply-compiled)))) (quote ())) (if (and (not (eq? target (quote val))) (eq? linkage (quote return))) (error "return linkage, target not val -- COMPILE" target) false))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172141351))
true-branch200308172141350
  (comment (lambda (proc-return) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) proc-return)) (quote (goto (label compound-apply))) proc-return (list (quote assign) target (quote (reg val))) (list (quote goto) (list (quote label) linkage))) (quote ()))))
  (assign proc (op make-compiled-procedure) (label entry200308172141430) (reg env))
  (goto (label after-lambda200308172141431))
  (comment (lambda (proc-return) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) proc-return)) (quote (goto (label compound-apply))) proc-return (list (quote assign) target (quote (reg val))) (list (quote goto) (list (quote label) linkage))) (quote ()))))
entry200308172141430
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc-return)) (reg argl) (reg env))
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save continue)
  (save proc)
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (save env)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote label))
  (assign val  (const label))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141510))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141511))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141513))
compound-branch200308172141512
  (assign continue (label after-call200308172141514))
  (goto (label compound-apply-compiled))
compiled-branch200308172141511
  (assign continue (label after-call200308172141514))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141513
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141510
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141514
  (assign argl (op list) (reg val))
  (comment (quote goto))
  (assign val  (const goto))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141530))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141531))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141533))
compound-branch200308172141532
  (assign continue (label after-call200308172141534))
  (goto (label compound-apply-compiled))
compiled-branch200308172141531
  (assign continue (label after-call200308172141534))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141533
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141530
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141534
  (assign argl (op list) (reg val))
  (restore env)
  (save env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment (quote (reg val)))
  (assign val  (const (reg val)))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote assign))
  (assign val  (const assign))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141490))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141491))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141493))
compound-branch200308172141492
  (assign continue (label after-call200308172141494))
  (goto (label compound-apply-compiled))
compiled-branch200308172141491
  (assign continue (label after-call200308172141494))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141493
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141490
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141494
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (comment proc-return)
  (assign val (op lookup-variable-value) (const proc-return) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (goto (label compound-apply))))
  (assign val  (const (goto (label compound-apply))))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment proc-return)
  (assign val (op lookup-variable-value) (const proc-return) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote label))
  (assign val  (const label))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141450))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141451))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141453))
compound-branch200308172141452
  (assign continue (label after-call200308172141454))
  (goto (label compound-apply-compiled))
compiled-branch200308172141451
  (assign continue (label after-call200308172141454))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141453
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141450
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141454
  (assign argl (op list) (reg val))
  (comment (quote continue))
  (assign val  (const continue))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote assign))
  (assign val  (const assign))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141470))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141471))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141473))
compound-branch200308172141472
  (assign continue (label after-call200308172141474))
  (goto (label compound-apply-compiled))
compiled-branch200308172141471
  (assign continue (label after-call200308172141474))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141473
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141470
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141474
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172141570))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172141571))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172141573))
compound-branch200308172141572
  (assign continue (label after-call200308172141574))
  (goto (label compound-apply-compiled))
compiled-branch200308172141571
  (assign continue (label after-call200308172141574))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172141573
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172141570
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172141574
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (comment all-regs)
  (assign val (op lookup-variable-value) (const all-regs) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (proc)))
  (assign val  (const (proc)))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172142020))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172142021))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172142023))
compound-branch200308172142022
  (goto (label compound-apply-compiled))
compiled-branch200308172142021
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172142023
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172142020
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172142024
after-lambda200308172141431
  (save continue)
  (save proc)
  (comment make-label)
  (assign proc (op lookup-variable-value) (const make-label) (reg env))
  (comment (quote proc-return))
  (assign val  (const proc-return))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172142060))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172142061))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172142063))
compound-branch200308172142062
  (assign continue (label after-call200308172142064))
  (goto (label compound-apply-compiled))
compiled-branch200308172142061
  (assign continue (label after-call200308172142064))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172142063
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172142060
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172142064
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172142070))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172142071))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172142073))
compound-branch200308172142072
  (goto (label compound-apply-compiled))
compiled-branch200308172142071
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172142073
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172142070
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172142074
false-branch200308172141351
  (save continue)
  (save env)
  (save env)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote val))
  (assign val  (const val))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172142100))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172142101))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172142103))
compound-branch200308172142102
  (assign continue (label after-call200308172142104))
  (goto (label compound-apply-compiled))
compiled-branch200308172142101
  (assign continue (label after-call200308172142104))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172142103
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172142100
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172142104
  (restore env)
  (comment ((eq? target (quote val)) (eq? linkage (quote return))))
  (test (op false?) (reg val))
  (branch (label and-false-found200308172142093))
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote return))
  (assign val  (const return))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172142120))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172142121))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172142123))
compound-branch200308172142122
  (assign continue (label after-call200308172142124))
  (goto (label compound-apply-compiled))
compiled-branch200308172142121
  (assign continue (label after-call200308172142124))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172142123
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172142120
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172142124
and-false-found200308172142093
  (restore env)
  (restore continue)
  (comment (if (and (eq? target (quote val)) (eq? linkage (quote return))) (make-instruction-sequence (quote (proc continue)) all-regs (quote ((goto (label compound-apply-compiled)))) (quote ())) (if (and (not (eq? target (quote val))) (eq? linkage (quote return))) (error "return linkage, target not val -- COMPILE" target) false)))
  (test (op false?) (reg val))
  (branch (label false-branch200308172142091))
true-branch200308172142090
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (comment (quote ((goto (label compound-apply-compiled)))))
  (assign val  (const ((goto (label compound-apply-compiled)))))
  (assign argl (op cons) (reg val) (reg argl))
  (comment all-regs)
  (assign val (op lookup-variable-value) (const all-regs) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (comment (quote (proc continue)))
  (assign val  (const (proc continue)))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172142150))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172142151))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172142153))
compound-branch200308172142152
  (goto (label compound-apply-compiled))
compiled-branch200308172142151
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172142153
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172142150
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172142154
false-branch200308172142091
  (save continue)
  (save env)
  (save env)
  (comment not)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (save proc)
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote val))
  (assign val  (const val))
  (assign argl (op list) (reg val))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172142170))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172142171))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172142173))
compound-branch200308172142172
  (assign continue (label after-call200308172142174))
  (goto (label compound-apply-compiled))
compiled-branch200308172142171
  (assign continue (label after-call200308172142174))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172142173
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172142170
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172142174
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172142180))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172142181))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172142183))
compound-branch200308172142182
  (assign continue (label after-call200308172142184))
  (goto (label compound-apply-compiled))
compiled-branch200308172142181
  (assign continue (label after-call200308172142184))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172142183
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172142180
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172142184
  (restore env)
  (comment ((not (eq? target (quote val))) (eq? linkage (quote return))))
  (test (op false?) (reg val))
  (branch (label and-false-found200308172142163))
  (comment eq?)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (comment (quote return))
  (assign val  (const return))
  (assign argl (op list) (reg val))
  (comment linkage)
  (assign val (op lookup-variable-value) (const linkage) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172142200))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172142201))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172142203))
compound-branch200308172142202
  (assign continue (label after-call200308172142204))
  (goto (label compound-apply-compiled))
compiled-branch200308172142201
  (assign continue (label after-call200308172142204))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172142203
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172142200
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172142204
and-false-found200308172142163
  (restore env)
  (restore continue)
  (comment (if (and (not (eq? target (quote val))) (eq? linkage (quote return))) (error "return linkage, target not val -- COMPILE" target) false))
  (test (op false?) (reg val))
  (branch (label false-branch200308172142161))
true-branch200308172142160
  (comment error)
  (assign proc (op lookup-variable-value) (const error) (reg env))
  (comment target)
  (assign val (op lookup-variable-value) (const target) (reg env))
  (assign argl (op list) (reg val))
  (comment "return linkage, target not val -- COMPILE")
  (assign val  (const "return linkage, target not val -- COMPILE"))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172142230))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172142231))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172142233))
compound-branch200308172142232
  (goto (label compound-apply-compiled))
compiled-branch200308172142231
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172142233
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172142230
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172142234
false-branch200308172142161
  (comment false)
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if200308172142162
after-if200308172142092
after-if200308172141352
after-if200308172141182
after-lambda200308172141171
  (comment (define (compile-compound-proc-appl target linkage) (cond ((and (eq? target (quote val)) (not (eq? linkage (quote return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) linkage)) (quote (goto (label compound-apply-compiled)))) (quote ()))) ((and (not (eq? target (quote val))) (not (eq? linkage (quote return)))) (let ((proc-return (make-label (quote proc-return)))) (make-instruction-sequence (quote (proc)) all-regs (list (list (quote assign) (quote continue) (list (quote label) proc-return)) (quote (goto (label compound-apply))) proc-return (list (quote assign) target (quote (reg val))) (list (quote goto) (list (quote label) linkage))) (quote ())))) ((and (eq? target (quote val)) (eq? linkage (quote return))) (make-instruction-sequence (quote (proc continue)) all-regs (quote ((goto (label compound-apply-compiled)))) (quote ()))) ((and (not (eq? target (quote val))) (eq? linkage (quote return))) (error "return linkage, target not val -- COMPILE" target)))))
  (perform (op define-variable!) (const compile-compound-proc-appl) (reg val) (reg env))
  (assign val  (const ok))
  (comment (quote (env proc val argl continue)))
  (assign val  (const (env proc val argl continue)))
  (comment (define all-regs (quote (env proc val argl continue))))
  (perform (op define-variable!) (const all-regs) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (s) (if (symbol? s) (quote ()) (car s))))
  (assign val (op make-compiled-procedure) (label entry200308172142500) (reg env))
  (goto (label after-lambda200308172142501))
  (comment (lambda (s) (if (symbol? s) (quote ()) (car s))))
entry200308172142500
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (s)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment symbol?)
  (assign proc (op lookup-variable-value) (const symbol?) (reg env))
  (comment s)
  (assign val (op lookup-variable-value) (const s) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172142505))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172142506))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172142508))
compound-branch200308172142507
  (assign continue (label after-call200308172142509))
  (goto (label compound-apply-compiled))
compiled-branch200308172142506
  (assign continue (label after-call200308172142509))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172142508
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172142505
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172142509
  (restore env)
  (restore continue)
  (comment (if (symbol? s) (quote ()) (car s)))
  (test (op false?) (reg val))
  (branch (label false-branch200308172142503))
true-branch200308172142502
  (comment (quote ()))
  (assign val  (const ()))
  (goto (reg continue))
false-branch200308172142503
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment s)
  (assign val (op lookup-variable-value) (const s) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172142520))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172142521))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172142523))
compound-branch200308172142522
  (goto (label compound-apply-compiled))
compiled-branch200308172142521
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172142523
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172142520
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172142524
after-if200308172142504
after-lambda200308172142501
  (comment (define (registers-needed s) (if (symbol? s) (quote ()) (car s))))
  (perform (op define-variable!) (const registers-needed) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (s) (if (symbol? s) (quote ()) (cadr s))))
  (assign val (op make-compiled-procedure) (label entry200308172142550) (reg env))
  (goto (label after-lambda200308172142551))
  (comment (lambda (s) (if (symbol? s) (quote ()) (cadr s))))
entry200308172142550
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (s)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment symbol?)
  (assign proc (op lookup-variable-value) (const symbol?) (reg env))
  (comment s)
  (assign val (op lookup-variable-value) (const s) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172142560))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172142561))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172142563))
compound-branch200308172142562
  (assign continue (label after-call200308172142564))
  (goto (label compound-apply-compiled))
compiled-branch200308172142561
  (assign continue (label after-call200308172142564))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172142563
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172142560
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172142564
  (restore env)
  (restore continue)
  (comment (if (symbol? s) (quote ()) (cadr s)))
  (test (op false?) (reg val))
  (branch (label false-branch200308172142553))
true-branch200308172142552
  (comment (quote ()))
  (assign val  (const ()))
  (goto (reg continue))
false-branch200308172142553
  (comment cadr)
  (assign proc (op lookup-variable-value) (const cadr) (reg env))
  (comment s)
  (assign val (op lookup-variable-value) (const s) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172142570))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172142571))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172142573))
compound-branch200308172142572
  (goto (label compound-apply-compiled))
compiled-branch200308172142571
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172142573
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172142570
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172142574
after-if200308172142554
after-lambda200308172142551
  (comment (define (registers-modified s) (if (symbol? s) (quote ()) (cadr s))))
  (perform (op define-variable!) (const registers-modified) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (s) (if (symbol? s) (list s) (caddr s))))
  (assign val (op make-compiled-procedure) (label entry200308172143000) (reg env))
  (goto (label after-lambda200308172143001))
  (comment (lambda (s) (if (symbol? s) (list s) (caddr s))))
entry200308172143000
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (s)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment symbol?)
  (assign proc (op lookup-variable-value) (const symbol?) (reg env))
  (comment s)
  (assign val (op lookup-variable-value) (const s) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143010))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143011))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143013))
compound-branch200308172143012
  (assign continue (label after-call200308172143014))
  (goto (label compound-apply-compiled))
compiled-branch200308172143011
  (assign continue (label after-call200308172143014))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143013
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143010
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143014
  (restore env)
  (restore continue)
  (comment (if (symbol? s) (list s) (caddr s)))
  (test (op false?) (reg val))
  (branch (label false-branch200308172143003))
true-branch200308172143002
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment s)
  (assign val (op lookup-variable-value) (const s) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143020))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143021))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143023))
compound-branch200308172143022
  (goto (label compound-apply-compiled))
compiled-branch200308172143021
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143023
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172143020
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172143024
false-branch200308172143003
  (comment caddr)
  (assign proc (op lookup-variable-value) (const caddr) (reg env))
  (comment s)
  (assign val (op lookup-variable-value) (const s) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143040))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143041))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143043))
compound-branch200308172143042
  (goto (label compound-apply-compiled))
compiled-branch200308172143041
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143043
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172143040
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172143044
after-if200308172143004
after-lambda200308172143001
  (comment (define (statements s) (if (symbol? s) (list s) (caddr s))))
  (perform (op define-variable!) (const statements) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (seq reg) (memq reg (registers-needed seq))))
  (assign val (op make-compiled-procedure) (label entry200308172143080) (reg env))
  (goto (label after-lambda200308172143081))
  (comment (lambda (seq reg) (memq reg (registers-needed seq))))
entry200308172143080
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq reg)) (reg argl) (reg env))
  (comment memq)
  (assign proc (op lookup-variable-value) (const memq) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment registers-needed)
  (assign proc (op lookup-variable-value) (const registers-needed) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143082))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143083))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143085))
compound-branch200308172143084
  (assign continue (label after-call200308172143086))
  (goto (label compound-apply-compiled))
compiled-branch200308172143083
  (assign continue (label after-call200308172143086))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143085
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143082
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143086
  (assign argl (op list) (reg val))
  (restore env)
  (comment reg)
  (assign val (op lookup-variable-value) (const reg) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143100))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143101))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143103))
compound-branch200308172143102
  (goto (label compound-apply-compiled))
compiled-branch200308172143101
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143103
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172143100
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172143104
after-lambda200308172143081
  (comment (define (needs-register? seq reg) (memq reg (registers-needed seq))))
  (perform (op define-variable!) (const needs-register?) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (seq reg) (memq reg (registers-modified seq))))
  (assign val (op make-compiled-procedure) (label entry200308172143120) (reg env))
  (goto (label after-lambda200308172143121))
  (comment (lambda (seq reg) (memq reg (registers-modified seq))))
entry200308172143120
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq reg)) (reg argl) (reg env))
  (comment memq)
  (assign proc (op lookup-variable-value) (const memq) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment registers-modified)
  (assign proc (op lookup-variable-value) (const registers-modified) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143130))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143131))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143133))
compound-branch200308172143132
  (assign continue (label after-call200308172143134))
  (goto (label compound-apply-compiled))
compiled-branch200308172143131
  (assign continue (label after-call200308172143134))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143133
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143130
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143134
  (assign argl (op list) (reg val))
  (restore env)
  (comment reg)
  (assign val (op lookup-variable-value) (const reg) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143150))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143151))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143153))
compound-branch200308172143152
  (goto (label compound-apply-compiled))
compiled-branch200308172143151
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143153
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172143150
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172143154
after-lambda200308172143121
  (comment (define (modifies-register? seq reg) (memq reg (registers-modified seq))))
  (perform (op define-variable!) (const modifies-register?) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda seqs (define (append-2-sequences seq1 seq2) (make-instruction-sequence (list-union (registers-needed seq1) (list-difference (registers-needed seq2) (registers-modified seq1))) (list-union (registers-modified seq1) (registers-modified seq2)) (append (statements seq1) (statements seq2)) (quote ()))) (define (append-seq-list seqs) (if (null? seqs) (empty-instruction-sequence) (append-2-sequences (car seqs) (append-seq-list (cdr seqs))))) (append-seq-list seqs)))
  (assign val (op make-compiled-procedure) (label entry200308172143170) (reg env))
  (goto (label after-lambda200308172143171))
  (comment (lambda seqs (define (append-2-sequences seq1 seq2) (make-instruction-sequence (list-union (registers-needed seq1) (list-difference (registers-needed seq2) (registers-modified seq1))) (list-union (registers-modified seq1) (registers-modified seq2)) (append (statements seq1) (statements seq2)) (quote ()))) (define (append-seq-list seqs) (if (null? seqs) (empty-instruction-sequence) (append-2-sequences (car seqs) (append-seq-list (cdr seqs))))) (append-seq-list seqs)))
entry200308172143170
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const seqs) (reg argl) (reg env))
  (comment (lambda (append-2-sequences append-seq-list) (set! append-2-sequences (lambda (seq1 seq2) (make-instruction-sequence (list-union (registers-needed seq1) (list-difference (registers-needed seq2) (registers-modified seq1))) (list-union (registers-modified seq1) (registers-modified seq2)) (append (statements seq1) (statements seq2)) (quote ())))) (set! append-seq-list (lambda (seqs) (if (null? seqs) (empty-instruction-sequence) (append-2-sequences (car seqs) (append-seq-list (cdr seqs)))))) (append-seq-list seqs)))
  (assign proc (op make-compiled-procedure) (label entry200308172143180) (reg env))
  (goto (label after-lambda200308172143181))
  (comment (lambda (append-2-sequences append-seq-list) (set! append-2-sequences (lambda (seq1 seq2) (make-instruction-sequence (list-union (registers-needed seq1) (list-difference (registers-needed seq2) (registers-modified seq1))) (list-union (registers-modified seq1) (registers-modified seq2)) (append (statements seq1) (statements seq2)) (quote ())))) (set! append-seq-list (lambda (seqs) (if (null? seqs) (empty-instruction-sequence) (append-2-sequences (car seqs) (append-seq-list (cdr seqs)))))) (append-seq-list seqs)))
entry200308172143180
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (append-2-sequences append-seq-list)) (reg argl) (reg env))
  (comment (lambda (seq1 seq2) (make-instruction-sequence (list-union (registers-needed seq1) (list-difference (registers-needed seq2) (registers-modified seq1))) (list-union (registers-modified seq1) (registers-modified seq2)) (append (statements seq1) (statements seq2)) (quote ()))))
  (assign val (op make-compiled-procedure) (label entry200308172143182) (reg env))
  (goto (label after-lambda200308172143183))
  (comment (lambda (seq1 seq2) (make-instruction-sequence (list-union (registers-needed seq1) (list-difference (registers-needed seq2) (registers-modified seq1))) (list-union (registers-modified seq1) (registers-modified seq2)) (append (statements seq1) (statements seq2)) (quote ()))))
entry200308172143182
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq1 seq2)) (reg argl) (reg env))
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save continue)
  (save proc)
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment append)
  (assign proc (op lookup-variable-value) (const append) (reg env))
  (save proc)
  (save env)
  (comment statements)
  (assign proc (op lookup-variable-value) (const statements) (reg env))
  (comment seq2)
  (assign val (op lookup-variable-value) (const seq2) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143360))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143361))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143363))
compound-branch200308172143362
  (assign continue (label after-call200308172143364))
  (goto (label compound-apply-compiled))
compiled-branch200308172143361
  (assign continue (label after-call200308172143364))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143363
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143360
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143364
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment statements)
  (assign proc (op lookup-variable-value) (const statements) (reg env))
  (comment seq1)
  (assign val (op lookup-variable-value) (const seq1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143340))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143341))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143343))
compound-branch200308172143342
  (assign continue (label after-call200308172143344))
  (goto (label compound-apply-compiled))
compiled-branch200308172143341
  (assign continue (label after-call200308172143344))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143343
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143340
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143344
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143380))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143381))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143383))
compound-branch200308172143382
  (assign continue (label after-call200308172143384))
  (goto (label compound-apply-compiled))
compiled-branch200308172143381
  (assign continue (label after-call200308172143384))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143383
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143380
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143384
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (comment list-union)
  (assign proc (op lookup-variable-value) (const list-union) (reg env))
  (save proc)
  (save env)
  (comment registers-modified)
  (assign proc (op lookup-variable-value) (const registers-modified) (reg env))
  (comment seq2)
  (assign val (op lookup-variable-value) (const seq2) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143300))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143301))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143303))
compound-branch200308172143302
  (assign continue (label after-call200308172143304))
  (goto (label compound-apply-compiled))
compiled-branch200308172143301
  (assign continue (label after-call200308172143304))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143303
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143300
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143304
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment registers-modified)
  (assign proc (op lookup-variable-value) (const registers-modified) (reg env))
  (comment seq1)
  (assign val (op lookup-variable-value) (const seq1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143290))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143291))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143293))
compound-branch200308172143292
  (assign continue (label after-call200308172143294))
  (goto (label compound-apply-compiled))
compiled-branch200308172143291
  (assign continue (label after-call200308172143294))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143293
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143290
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143294
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143320))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143321))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143323))
compound-branch200308172143322
  (assign continue (label after-call200308172143324))
  (goto (label compound-apply-compiled))
compiled-branch200308172143321
  (assign continue (label after-call200308172143324))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143323
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143320
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143324
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment list-union)
  (assign proc (op lookup-variable-value) (const list-union) (reg env))
  (save proc)
  (save env)
  (comment list-difference)
  (assign proc (op lookup-variable-value) (const list-difference) (reg env))
  (save proc)
  (save env)
  (comment registers-modified)
  (assign proc (op lookup-variable-value) (const registers-modified) (reg env))
  (comment seq1)
  (assign val (op lookup-variable-value) (const seq1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143220))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143221))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143223))
compound-branch200308172143222
  (assign continue (label after-call200308172143224))
  (goto (label compound-apply-compiled))
compiled-branch200308172143221
  (assign continue (label after-call200308172143224))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143223
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143220
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143224
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment registers-needed)
  (assign proc (op lookup-variable-value) (const registers-needed) (reg env))
  (comment seq2)
  (assign val (op lookup-variable-value) (const seq2) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143210))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143211))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143213))
compound-branch200308172143212
  (assign continue (label after-call200308172143214))
  (goto (label compound-apply-compiled))
compiled-branch200308172143211
  (assign continue (label after-call200308172143214))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143213
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143210
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143214
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143240))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143241))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143243))
compound-branch200308172143242
  (assign continue (label after-call200308172143244))
  (goto (label compound-apply-compiled))
compiled-branch200308172143241
  (assign continue (label after-call200308172143244))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143243
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143240
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143244
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment registers-needed)
  (assign proc (op lookup-variable-value) (const registers-needed) (reg env))
  (comment seq1)
  (assign val (op lookup-variable-value) (const seq1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143190))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143191))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143193))
compound-branch200308172143192
  (assign continue (label after-call200308172143194))
  (goto (label compound-apply-compiled))
compiled-branch200308172143191
  (assign continue (label after-call200308172143194))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143193
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143190
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143194
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143260))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143261))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143263))
compound-branch200308172143262
  (assign continue (label after-call200308172143264))
  (goto (label compound-apply-compiled))
compiled-branch200308172143261
  (assign continue (label after-call200308172143264))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143263
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143260
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143264
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143430))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143431))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143433))
compound-branch200308172143432
  (goto (label compound-apply-compiled))
compiled-branch200308172143431
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143433
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172143430
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172143434
after-lambda200308172143183
  (comment (set! append-2-sequences (lambda (seq1 seq2) (make-instruction-sequence (list-union (registers-needed seq1) (list-difference (registers-needed seq2) (registers-modified seq1))) (list-union (registers-modified seq1) (registers-modified seq2)) (append (statements seq1) (statements seq2)) (quote ())))))
  (perform (op set-variable-value!) (const append-2-sequences) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (seqs) (if (null? seqs) (empty-instruction-sequence) (append-2-sequences (car seqs) (append-seq-list (cdr seqs))))))
  (assign val (op make-compiled-procedure) (label entry200308172143500) (reg env))
  (goto (label after-lambda200308172143501))
  (comment (lambda (seqs) (if (null? seqs) (empty-instruction-sequence) (append-2-sequences (car seqs) (append-seq-list (cdr seqs))))))
entry200308172143500
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seqs)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143505))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143506))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143508))
compound-branch200308172143507
  (assign continue (label after-call200308172143509))
  (goto (label compound-apply-compiled))
compiled-branch200308172143506
  (assign continue (label after-call200308172143509))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143508
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143505
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143509
  (restore env)
  (restore continue)
  (comment (if (null? seqs) (empty-instruction-sequence) (append-2-sequences (car seqs) (append-seq-list (cdr seqs)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172143503))
true-branch200308172143502
  (comment empty-instruction-sequence)
  (assign proc (op lookup-variable-value) (const empty-instruction-sequence) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143520))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143521))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143523))
compound-branch200308172143522
  (goto (label compound-apply-compiled))
compiled-branch200308172143521
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143523
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172143520
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172143524
false-branch200308172143503
  (comment append-2-sequences)
  (assign proc (op lookup-variable-value) (const append-2-sequences) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment append-seq-list)
  (assign proc (op lookup-variable-value) (const append-seq-list) (reg env))
  (save proc)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143550))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143551))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143553))
compound-branch200308172143552
  (assign continue (label after-call200308172143554))
  (goto (label compound-apply-compiled))
compiled-branch200308172143551
  (assign continue (label after-call200308172143554))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143553
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143550
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143554
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143560))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143561))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143563))
compound-branch200308172143562
  (assign continue (label after-call200308172143564))
  (goto (label compound-apply-compiled))
compiled-branch200308172143561
  (assign continue (label after-call200308172143564))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143563
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143560
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143564
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143540))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143541))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143543))
compound-branch200308172143542
  (assign continue (label after-call200308172143544))
  (goto (label compound-apply-compiled))
compiled-branch200308172143541
  (assign continue (label after-call200308172143544))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143543
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172143540
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172143544
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172143590))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172143591))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172143593))
compound-branch200308172143592
  (goto (label compound-apply-compiled))
compiled-branch200308172143591
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172143593
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172143590
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172143594
after-if200308172143504
after-lambda200308172143501
  (comment (set! append-seq-list (lambda (seqs) (if (null? seqs) (empty-instruction-sequence) (append-2-sequences (car seqs) (append-seq-list (cdr seqs)))))))
  (perform (op set-variable-value!) (const append-seq-list) (reg val) (reg env))
  (assign val  (const ok))
  (comment append-seq-list)
  (assign proc (op lookup-variable-value) (const append-seq-list) (reg env))
  (comment seqs)
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144050))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144051))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144053))
compound-branch200308172144052
  (goto (label compound-apply-compiled))
compiled-branch200308172144051
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144053
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172144050
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172144054
after-lambda200308172143181
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op list) (reg val))
  (comment (quote *unassigned*))
  (assign val  (const *unassigned*))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144110))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144111))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144113))
compound-branch200308172144112
  (goto (label compound-apply-compiled))
compiled-branch200308172144111
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144113
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172144110
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172144114
after-lambda200308172143171
  (comment (define (append-instruction-sequences . seqs) (define (append-2-sequences seq1 seq2) (make-instruction-sequence (list-union (registers-needed seq1) (list-difference (registers-needed seq2) (registers-modified seq1))) (list-union (registers-modified seq1) (registers-modified seq2)) (append (statements seq1) (statements seq2)) (quote ()))) (define (append-seq-list seqs) (if (null? seqs) (empty-instruction-sequence) (append-2-sequences (car seqs) (append-seq-list (cdr seqs))))) (append-seq-list seqs)))
  (perform (op define-variable!) (const append-instruction-sequences) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (s1 s2) (cond ((null? s1) s2) ((memq (car s1) s2) (list-union (cdr s1) s2)) (else (cons (car s1) (list-union (cdr s1) s2))))))
  (assign val (op make-compiled-procedure) (label entry200308172144180) (reg env))
  (goto (label after-lambda200308172144181))
  (comment (lambda (s1 s2) (cond ((null? s1) s2) ((memq (car s1) s2) (list-union (cdr s1) s2)) (else (cons (car s1) (list-union (cdr s1) s2))))))
entry200308172144180
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (s1 s2)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment s1)
  (assign val (op lookup-variable-value) (const s1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144193))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144194))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144196))
compound-branch200308172144195
  (assign continue (label after-call200308172144197))
  (goto (label compound-apply-compiled))
compiled-branch200308172144194
  (assign continue (label after-call200308172144197))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144196
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172144193
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172144197
  (restore env)
  (restore continue)
  (comment (if (null? s1) s2 (if (memq (car s1) s2) (list-union (cdr s1) s2) (cons (car s1) (list-union (cdr s1) s2)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172144191))
true-branch200308172144190
  (comment s2)
  (assign val (op lookup-variable-value) (const s2) (reg env))
  (goto (reg continue))
false-branch200308172144191
  (save continue)
  (save env)
  (comment memq)
  (assign proc (op lookup-variable-value) (const memq) (reg env))
  (save proc)
  (comment s2)
  (assign val (op lookup-variable-value) (const s2) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment s1)
  (assign val (op lookup-variable-value) (const s1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144210))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144211))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144213))
compound-branch200308172144212
  (assign continue (label after-call200308172144214))
  (goto (label compound-apply-compiled))
compiled-branch200308172144211
  (assign continue (label after-call200308172144214))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144213
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172144210
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172144214
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144230))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144231))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144233))
compound-branch200308172144232
  (assign continue (label after-call200308172144234))
  (goto (label compound-apply-compiled))
compiled-branch200308172144231
  (assign continue (label after-call200308172144234))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144233
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172144230
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172144234
  (restore env)
  (restore continue)
  (comment (if (memq (car s1) s2) (list-union (cdr s1) s2) (cons (car s1) (list-union (cdr s1) s2))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172144201))
true-branch200308172144200
  (comment list-union)
  (assign proc (op lookup-variable-value) (const list-union) (reg env))
  (save continue)
  (save proc)
  (comment s2)
  (assign val (op lookup-variable-value) (const s2) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment s1)
  (assign val (op lookup-variable-value) (const s1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144240))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144241))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144243))
compound-branch200308172144242
  (assign continue (label after-call200308172144244))
  (goto (label compound-apply-compiled))
compiled-branch200308172144241
  (assign continue (label after-call200308172144244))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144243
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172144240
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172144244
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144260))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144261))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144263))
compound-branch200308172144262
  (goto (label compound-apply-compiled))
compiled-branch200308172144261
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144263
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172144260
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172144264
false-branch200308172144201
  (comment cons)
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment list-union)
  (assign proc (op lookup-variable-value) (const list-union) (reg env))
  (save proc)
  (comment s2)
  (assign val (op lookup-variable-value) (const s2) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment s1)
  (assign val (op lookup-variable-value) (const s1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144300))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144301))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144303))
compound-branch200308172144302
  (assign continue (label after-call200308172144304))
  (goto (label compound-apply-compiled))
compiled-branch200308172144301
  (assign continue (label after-call200308172144304))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144303
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172144300
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172144304
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144320))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144321))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144323))
compound-branch200308172144322
  (assign continue (label after-call200308172144324))
  (goto (label compound-apply-compiled))
compiled-branch200308172144321
  (assign continue (label after-call200308172144324))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144323
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172144320
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172144324
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment s1)
  (assign val (op lookup-variable-value) (const s1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144280))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144281))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144283))
compound-branch200308172144282
  (assign continue (label after-call200308172144284))
  (goto (label compound-apply-compiled))
compiled-branch200308172144281
  (assign continue (label after-call200308172144284))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144283
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172144280
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172144284
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144340))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144341))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144343))
compound-branch200308172144342
  (goto (label compound-apply-compiled))
compiled-branch200308172144341
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144343
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172144340
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172144344
after-if200308172144202
after-if200308172144192
after-lambda200308172144181
  (comment (define (list-union s1 s2) (cond ((null? s1) s2) ((memq (car s1) s2) (list-union (cdr s1) s2)) (else (cons (car s1) (list-union (cdr s1) s2))))))
  (perform (op define-variable!) (const list-union) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (s1 s2) (cond ((null? s1) (quote ())) ((memq (car s1) s2) (list-difference (cdr s1) s2)) (else (cons (car s1) (list-difference (cdr s1) s2))))))
  (assign val (op make-compiled-procedure) (label entry200308172144440) (reg env))
  (goto (label after-lambda200308172144441))
  (comment (lambda (s1 s2) (cond ((null? s1) (quote ())) ((memq (car s1) s2) (list-difference (cdr s1) s2)) (else (cons (car s1) (list-difference (cdr s1) s2))))))
entry200308172144440
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (s1 s2)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment s1)
  (assign val (op lookup-variable-value) (const s1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144450))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144451))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144453))
compound-branch200308172144452
  (assign continue (label after-call200308172144454))
  (goto (label compound-apply-compiled))
compiled-branch200308172144451
  (assign continue (label after-call200308172144454))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144453
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172144450
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172144454
  (restore env)
  (restore continue)
  (comment (if (null? s1) (quote ()) (if (memq (car s1) s2) (list-difference (cdr s1) s2) (cons (car s1) (list-difference (cdr s1) s2)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172144443))
true-branch200308172144442
  (comment (quote ()))
  (assign val  (const ()))
  (goto (reg continue))
false-branch200308172144443
  (save continue)
  (save env)
  (comment memq)
  (assign proc (op lookup-variable-value) (const memq) (reg env))
  (save proc)
  (comment s2)
  (assign val (op lookup-variable-value) (const s2) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment s1)
  (assign val (op lookup-variable-value) (const s1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144470))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144471))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144473))
compound-branch200308172144472
  (assign continue (label after-call200308172144474))
  (goto (label compound-apply-compiled))
compiled-branch200308172144471
  (assign continue (label after-call200308172144474))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144473
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172144470
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172144474
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144480))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144481))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144483))
compound-branch200308172144482
  (assign continue (label after-call200308172144484))
  (goto (label compound-apply-compiled))
compiled-branch200308172144481
  (assign continue (label after-call200308172144484))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144483
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172144480
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172144484
  (restore env)
  (restore continue)
  (comment (if (memq (car s1) s2) (list-difference (cdr s1) s2) (cons (car s1) (list-difference (cdr s1) s2))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172144461))
true-branch200308172144460
  (comment list-difference)
  (assign proc (op lookup-variable-value) (const list-difference) (reg env))
  (save continue)
  (save proc)
  (comment s2)
  (assign val (op lookup-variable-value) (const s2) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment s1)
  (assign val (op lookup-variable-value) (const s1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144500))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144501))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144503))
compound-branch200308172144502
  (assign continue (label after-call200308172144504))
  (goto (label compound-apply-compiled))
compiled-branch200308172144501
  (assign continue (label after-call200308172144504))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144503
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172144500
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172144504
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144520))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144521))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144523))
compound-branch200308172144522
  (goto (label compound-apply-compiled))
compiled-branch200308172144521
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144523
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172144520
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172144524
false-branch200308172144461
  (comment cons)
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment list-difference)
  (assign proc (op lookup-variable-value) (const list-difference) (reg env))
  (save proc)
  (comment s2)
  (assign val (op lookup-variable-value) (const s2) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment s1)
  (assign val (op lookup-variable-value) (const s1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144560))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144561))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144563))
compound-branch200308172144562
  (assign continue (label after-call200308172144564))
  (goto (label compound-apply-compiled))
compiled-branch200308172144561
  (assign continue (label after-call200308172144564))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144563
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172144560
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172144564
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144580))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144581))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144583))
compound-branch200308172144582
  (assign continue (label after-call200308172144584))
  (goto (label compound-apply-compiled))
compiled-branch200308172144581
  (assign continue (label after-call200308172144584))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144583
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172144580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172144584
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment s1)
  (assign val (op lookup-variable-value) (const s1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172144540))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172144541))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172144543))
compound-branch200308172144542
  (assign continue (label after-call200308172144544))
  (goto (label compound-apply-compiled))
compiled-branch200308172144541
  (assign continue (label after-call200308172144544))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172144543
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172144540
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172144544
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145000))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145001))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145003))
compound-branch200308172145002
  (goto (label compound-apply-compiled))
compiled-branch200308172145001
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145003
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172145000
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172145004
after-if200308172144462
after-if200308172144444
after-lambda200308172144441
  (comment (define (list-difference s1 s2) (cond ((null? s1) (quote ())) ((memq (car s1) s2) (list-difference (cdr s1) s2)) (else (cons (car s1) (list-difference (cdr s1) s2))))))
  (perform (op define-variable!) (const list-difference) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (regs seq1 seq2) (if (null? regs) (append-instruction-sequences seq1 seq2) (let ((first-reg (car regs))) (if (and (needs-register? seq2 first-reg) (modifies-register? seq1 first-reg)) (preserving (cdr regs) (make-instruction-sequence (list-union (list first-reg) (registers-needed seq1)) (list-difference (registers-modified seq1) (list first-reg)) (append (list (list (quote save) first-reg)) (statements seq1) (list (list (quote restore) first-reg))) (quote ())) seq2) (preserving (cdr regs) seq1 seq2))))))
  (assign val (op make-compiled-procedure) (label entry200308172145100) (reg env))
  (goto (label after-lambda200308172145101))
  (comment (lambda (regs seq1 seq2) (if (null? regs) (append-instruction-sequences seq1 seq2) (let ((first-reg (car regs))) (if (and (needs-register? seq2 first-reg) (modifies-register? seq1 first-reg)) (preserving (cdr regs) (make-instruction-sequence (list-union (list first-reg) (registers-needed seq1)) (list-difference (registers-modified seq1) (list first-reg)) (append (list (list (quote save) first-reg)) (statements seq1) (list (list (quote restore) first-reg))) (quote ())) seq2) (preserving (cdr regs) seq1 seq2))))))
entry200308172145100
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (regs seq1 seq2)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment null?)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (comment regs)
  (assign val (op lookup-variable-value) (const regs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145113))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145114))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145116))
compound-branch200308172145115
  (assign continue (label after-call200308172145117))
  (goto (label compound-apply-compiled))
compiled-branch200308172145114
  (assign continue (label after-call200308172145117))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145116
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145113
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145117
  (restore env)
  (restore continue)
  (comment (if (null? regs) (append-instruction-sequences seq1 seq2) (let ((first-reg (car regs))) (if (and (needs-register? seq2 first-reg) (modifies-register? seq1 first-reg)) (preserving (cdr regs) (make-instruction-sequence (list-union (list first-reg) (registers-needed seq1)) (list-difference (registers-modified seq1) (list first-reg)) (append (list (list (quote save) first-reg)) (statements seq1) (list (list (quote restore) first-reg))) (quote ())) seq2) (preserving (cdr regs) seq1 seq2)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308172145111))
true-branch200308172145110
  (comment append-instruction-sequences)
  (assign proc (op lookup-variable-value) (const append-instruction-sequences) (reg env))
  (comment seq2)
  (assign val (op lookup-variable-value) (const seq2) (reg env))
  (assign argl (op list) (reg val))
  (comment seq1)
  (assign val (op lookup-variable-value) (const seq1) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145130))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145131))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145133))
compound-branch200308172145132
  (goto (label compound-apply-compiled))
compiled-branch200308172145131
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145133
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172145130
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172145134
false-branch200308172145111
  (comment (lambda (first-reg) (if (and (needs-register? seq2 first-reg) (modifies-register? seq1 first-reg)) (preserving (cdr regs) (make-instruction-sequence (list-union (list first-reg) (registers-needed seq1)) (list-difference (registers-modified seq1) (list first-reg)) (append (list (list (quote save) first-reg)) (statements seq1) (list (list (quote restore) first-reg))) (quote ())) seq2) (preserving (cdr regs) seq1 seq2))))
  (assign proc (op make-compiled-procedure) (label entry200308172145140) (reg env))
  (goto (label after-lambda200308172145141))
  (comment (lambda (first-reg) (if (and (needs-register? seq2 first-reg) (modifies-register? seq1 first-reg)) (preserving (cdr regs) (make-instruction-sequence (list-union (list first-reg) (registers-needed seq1)) (list-difference (registers-modified seq1) (list first-reg)) (append (list (list (quote save) first-reg)) (statements seq1) (list (list (quote restore) first-reg))) (quote ())) seq2) (preserving (cdr regs) seq1 seq2))))
entry200308172145140
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first-reg)) (reg argl) (reg env))
  (save continue)
  (save env)
  (save env)
  (comment needs-register?)
  (assign proc (op lookup-variable-value) (const needs-register?) (reg env))
  (comment first-reg)
  (assign val (op lookup-variable-value) (const first-reg) (reg env))
  (assign argl (op list) (reg val))
  (comment seq2)
  (assign val (op lookup-variable-value) (const seq2) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145154))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145155))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145157))
compound-branch200308172145156
  (assign continue (label after-call200308172145158))
  (goto (label compound-apply-compiled))
compiled-branch200308172145155
  (assign continue (label after-call200308172145158))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145157
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145154
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145158
  (restore env)
  (comment ((needs-register? seq2 first-reg) (modifies-register? seq1 first-reg)))
  (test (op false?) (reg val))
  (branch (label and-false-found200308172145153))
  (comment modifies-register?)
  (assign proc (op lookup-variable-value) (const modifies-register?) (reg env))
  (comment first-reg)
  (assign val (op lookup-variable-value) (const first-reg) (reg env))
  (assign argl (op list) (reg val))
  (comment seq1)
  (assign val (op lookup-variable-value) (const seq1) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145170))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145171))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145173))
compound-branch200308172145172
  (assign continue (label after-call200308172145174))
  (goto (label compound-apply-compiled))
compiled-branch200308172145171
  (assign continue (label after-call200308172145174))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145173
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145170
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145174
and-false-found200308172145153
  (restore env)
  (restore continue)
  (comment (if (and (needs-register? seq2 first-reg) (modifies-register? seq1 first-reg)) (preserving (cdr regs) (make-instruction-sequence (list-union (list first-reg) (registers-needed seq1)) (list-difference (registers-modified seq1) (list first-reg)) (append (list (list (quote save) first-reg)) (statements seq1) (list (list (quote restore) first-reg))) (quote ())) seq2) (preserving (cdr regs) seq1 seq2)))
  (test (op false?) (reg val))
  (branch (label false-branch200308172145151))
true-branch200308172145150
  (comment preserving)
  (assign proc (op lookup-variable-value) (const preserving) (reg env))
  (save continue)
  (save proc)
  (comment seq2)
  (assign val (op lookup-variable-value) (const seq2) (reg env))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save proc)
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment append)
  (assign proc (op lookup-variable-value) (const append) (reg env))
  (save proc)
  (save env)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment first-reg)
  (assign val (op lookup-variable-value) (const first-reg) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote restore))
  (assign val  (const restore))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145380))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145381))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145383))
compound-branch200308172145382
  (assign continue (label after-call200308172145384))
  (goto (label compound-apply-compiled))
compiled-branch200308172145381
  (assign continue (label after-call200308172145384))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145383
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145380
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145384
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145400))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145401))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145403))
compound-branch200308172145402
  (assign continue (label after-call200308172145404))
  (goto (label compound-apply-compiled))
compiled-branch200308172145401
  (assign continue (label after-call200308172145404))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145403
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145400
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145404
  (assign argl (op list) (reg val))
  (restore env)
  (save env)
  (save argl)
  (comment statements)
  (assign proc (op lookup-variable-value) (const statements) (reg env))
  (comment seq1)
  (assign val (op lookup-variable-value) (const seq1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145360))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145361))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145363))
compound-branch200308172145362
  (assign continue (label after-call200308172145364))
  (goto (label compound-apply-compiled))
compiled-branch200308172145361
  (assign continue (label after-call200308172145364))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145363
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145360
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145364
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (save proc)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment first-reg)
  (assign val (op lookup-variable-value) (const first-reg) (reg env))
  (assign argl (op list) (reg val))
  (comment (quote save))
  (assign val  (const save))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145330))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145331))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145333))
compound-branch200308172145332
  (assign continue (label after-call200308172145334))
  (goto (label compound-apply-compiled))
compiled-branch200308172145331
  (assign continue (label after-call200308172145334))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145333
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145330
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145334
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145340))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145341))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145343))
compound-branch200308172145342
  (assign continue (label after-call200308172145344))
  (goto (label compound-apply-compiled))
compiled-branch200308172145341
  (assign continue (label after-call200308172145344))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145343
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145340
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145344
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145430))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145431))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145433))
compound-branch200308172145432
  (assign continue (label after-call200308172145434))
  (goto (label compound-apply-compiled))
compiled-branch200308172145431
  (assign continue (label after-call200308172145434))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145433
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145430
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145434
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (comment list-difference)
  (assign proc (op lookup-variable-value) (const list-difference) (reg env))
  (save proc)
  (save env)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment first-reg)
  (assign val (op lookup-variable-value) (const first-reg) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145290))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145291))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145293))
compound-branch200308172145292
  (assign continue (label after-call200308172145294))
  (goto (label compound-apply-compiled))
compiled-branch200308172145291
  (assign continue (label after-call200308172145294))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145293
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145290
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145294
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment registers-modified)
  (assign proc (op lookup-variable-value) (const registers-modified) (reg env))
  (comment seq1)
  (assign val (op lookup-variable-value) (const seq1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145270))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145271))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145273))
compound-branch200308172145272
  (assign continue (label after-call200308172145274))
  (goto (label compound-apply-compiled))
compiled-branch200308172145271
  (assign continue (label after-call200308172145274))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145273
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145270
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145274
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145310))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145311))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145313))
compound-branch200308172145312
  (assign continue (label after-call200308172145314))
  (goto (label compound-apply-compiled))
compiled-branch200308172145311
  (assign continue (label after-call200308172145314))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145313
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145310
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145314
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment list-union)
  (assign proc (op lookup-variable-value) (const list-union) (reg env))
  (save proc)
  (save env)
  (comment registers-needed)
  (assign proc (op lookup-variable-value) (const registers-needed) (reg env))
  (comment seq1)
  (assign val (op lookup-variable-value) (const seq1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145230))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145231))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145233))
compound-branch200308172145232
  (assign continue (label after-call200308172145234))
  (goto (label compound-apply-compiled))
compiled-branch200308172145231
  (assign continue (label after-call200308172145234))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145233
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145230
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145234
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment list)
  (assign proc (op lookup-variable-value) (const list) (reg env))
  (comment first-reg)
  (assign val (op lookup-variable-value) (const first-reg) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145220))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145221))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145223))
compound-branch200308172145222
  (assign continue (label after-call200308172145224))
  (goto (label compound-apply-compiled))
compiled-branch200308172145221
  (assign continue (label after-call200308172145224))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145223
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145220
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145224
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145250))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145251))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145253))
compound-branch200308172145252
  (assign continue (label after-call200308172145254))
  (goto (label compound-apply-compiled))
compiled-branch200308172145251
  (assign continue (label after-call200308172145254))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145253
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145250
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145254
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145490))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145491))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145493))
compound-branch200308172145492
  (assign continue (label after-call200308172145494))
  (goto (label compound-apply-compiled))
compiled-branch200308172145491
  (assign continue (label after-call200308172145494))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145493
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145490
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145494
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment regs)
  (assign val (op lookup-variable-value) (const regs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145200))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145201))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145203))
compound-branch200308172145202
  (assign continue (label after-call200308172145204))
  (goto (label compound-apply-compiled))
compiled-branch200308172145201
  (assign continue (label after-call200308172145204))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145203
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172145200
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172145204
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172145560))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172145561))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172145563))
compound-branch200308172145562
  (goto (label compound-apply-compiled))
compiled-branch200308172145561
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172145563
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172145560
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172145564
false-branch200308172145151
  (comment preserving)
  (assign proc (op lookup-variable-value) (const preserving) (reg env))
  (save continue)
  (save proc)
  (comment seq2)
  (assign val (op lookup-variable-value) (const seq2) (reg env))
  (assign argl (op list) (reg val))
  (comment seq1)
  (assign val (op lookup-variable-value) (const seq1) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (save argl)
  (comment cdr)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (comment regs)
  (assign val (op lookup-variable-value) (const regs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146010))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146011))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146013))
compound-branch200308172146012
  (assign continue (label after-call200308172146014))
  (goto (label compound-apply-compiled))
compiled-branch200308172146011
  (assign continue (label after-call200308172146014))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146013
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172146010
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172146014
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146030))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146031))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146033))
compound-branch200308172146032
  (goto (label compound-apply-compiled))
compiled-branch200308172146031
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146033
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172146030
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172146034
after-if200308172145152
after-lambda200308172145141
  (save continue)
  (save proc)
  (comment car)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (comment regs)
  (assign val (op lookup-variable-value) (const regs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146140))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146141))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146143))
compound-branch200308172146142
  (assign continue (label after-call200308172146144))
  (goto (label compound-apply-compiled))
compiled-branch200308172146141
  (assign continue (label after-call200308172146144))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146143
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172146140
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172146144
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146160))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146161))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146163))
compound-branch200308172146162
  (goto (label compound-apply-compiled))
compiled-branch200308172146161
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146163
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172146160
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172146164
after-if200308172145112
after-lambda200308172145101
  (comment (define (preserving regs seq1 seq2) (if (null? regs) (append-instruction-sequences seq1 seq2) (let ((first-reg (car regs))) (if (and (needs-register? seq2 first-reg) (modifies-register? seq1 first-reg)) (preserving (cdr regs) (make-instruction-sequence (list-union (list first-reg) (registers-needed seq1)) (list-difference (registers-modified seq1) (list first-reg)) (append (list (list (quote save) first-reg)) (statements seq1) (list (list (quote restore) first-reg))) (quote ())) seq2) (preserving (cdr regs) seq1 seq2))))))
  (perform (op define-variable!) (const preserving) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (seq body-seq) (make-instruction-sequence (registers-needed seq) (registers-modified seq) (append (statements seq) (statements body-seq)) (quote ()))))
  (assign val (op make-compiled-procedure) (label entry200308172146310) (reg env))
  (goto (label after-lambda200308172146311))
  (comment (lambda (seq body-seq) (make-instruction-sequence (registers-needed seq) (registers-modified seq) (append (statements seq) (statements body-seq)) (quote ()))))
entry200308172146310
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq body-seq)) (reg argl) (reg env))
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save continue)
  (save proc)
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment append)
  (assign proc (op lookup-variable-value) (const append) (reg env))
  (save proc)
  (save env)
  (comment statements)
  (assign proc (op lookup-variable-value) (const statements) (reg env))
  (comment body-seq)
  (assign val (op lookup-variable-value) (const body-seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146370))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146371))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146373))
compound-branch200308172146372
  (assign continue (label after-call200308172146374))
  (goto (label compound-apply-compiled))
compiled-branch200308172146371
  (assign continue (label after-call200308172146374))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146373
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172146370
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172146374
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment statements)
  (assign proc (op lookup-variable-value) (const statements) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146350))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146351))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146353))
compound-branch200308172146352
  (assign continue (label after-call200308172146354))
  (goto (label compound-apply-compiled))
compiled-branch200308172146351
  (assign continue (label after-call200308172146354))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146353
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172146350
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172146354
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146390))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146391))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146393))
compound-branch200308172146392
  (assign continue (label after-call200308172146394))
  (goto (label compound-apply-compiled))
compiled-branch200308172146391
  (assign continue (label after-call200308172146394))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146393
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172146390
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172146394
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (comment registers-modified)
  (assign proc (op lookup-variable-value) (const registers-modified) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146340))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146341))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146343))
compound-branch200308172146342
  (assign continue (label after-call200308172146344))
  (goto (label compound-apply-compiled))
compiled-branch200308172146341
  (assign continue (label after-call200308172146344))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146343
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172146340
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172146344
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment registers-needed)
  (assign proc (op lookup-variable-value) (const registers-needed) (reg env))
  (comment seq)
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146320))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146321))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146323))
compound-branch200308172146322
  (assign continue (label after-call200308172146324))
  (goto (label compound-apply-compiled))
compiled-branch200308172146321
  (assign continue (label after-call200308172146324))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146323
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172146320
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172146324
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146430))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146431))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146433))
compound-branch200308172146432
  (goto (label compound-apply-compiled))
compiled-branch200308172146431
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146433
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172146430
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172146434
after-lambda200308172146311
  (comment (define (tack-on-instruction-sequence seq body-seq) (make-instruction-sequence (registers-needed seq) (registers-modified seq) (append (statements seq) (statements body-seq)) (quote ()))))
  (perform (op define-variable!) (const tack-on-instruction-sequence) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (seq1 seq2) (make-instruction-sequence (list-union (registers-needed seq1) (registers-needed seq2)) (list-union (registers-modified seq1) (registers-modified seq2)) (append (statements seq1) (statements seq2)) (quote ()))))
  (assign val (op make-compiled-procedure) (label entry200308172146470) (reg env))
  (goto (label after-lambda200308172146471))
  (comment (lambda (seq1 seq2) (make-instruction-sequence (list-union (registers-needed seq1) (registers-needed seq2)) (list-union (registers-modified seq1) (registers-modified seq2)) (append (statements seq1) (statements seq2)) (quote ()))))
entry200308172146470
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seq1 seq2)) (reg argl) (reg env))
  (comment make-instruction-sequence)
  (assign proc (op lookup-variable-value) (const make-instruction-sequence) (reg env))
  (save continue)
  (save proc)
  (comment (quote ()))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (save env)
  (save argl)
  (comment append)
  (assign proc (op lookup-variable-value) (const append) (reg env))
  (save proc)
  (save env)
  (comment statements)
  (assign proc (op lookup-variable-value) (const statements) (reg env))
  (comment seq2)
  (assign val (op lookup-variable-value) (const seq2) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172147010))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172147011))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172147013))
compound-branch200308172147012
  (assign continue (label after-call200308172147014))
  (goto (label compound-apply-compiled))
compiled-branch200308172147011
  (assign continue (label after-call200308172147014))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172147013
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172147010
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172147014
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment statements)
  (assign proc (op lookup-variable-value) (const statements) (reg env))
  (comment seq1)
  (assign val (op lookup-variable-value) (const seq1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146590))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146591))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146593))
compound-branch200308172146592
  (assign continue (label after-call200308172146594))
  (goto (label compound-apply-compiled))
compiled-branch200308172146591
  (assign continue (label after-call200308172146594))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146593
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172146590
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172146594
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172147030))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172147031))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172147033))
compound-branch200308172147032
  (assign continue (label after-call200308172147034))
  (goto (label compound-apply-compiled))
compiled-branch200308172147031
  (assign continue (label after-call200308172147034))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172147033
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172147030
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172147034
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save env)
  (save argl)
  (comment list-union)
  (assign proc (op lookup-variable-value) (const list-union) (reg env))
  (save proc)
  (save env)
  (comment registers-modified)
  (assign proc (op lookup-variable-value) (const registers-modified) (reg env))
  (comment seq2)
  (assign val (op lookup-variable-value) (const seq2) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146550))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146551))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146553))
compound-branch200308172146552
  (assign continue (label after-call200308172146554))
  (goto (label compound-apply-compiled))
compiled-branch200308172146551
  (assign continue (label after-call200308172146554))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146553
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172146550
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172146554
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment registers-modified)
  (assign proc (op lookup-variable-value) (const registers-modified) (reg env))
  (comment seq1)
  (assign val (op lookup-variable-value) (const seq1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146530))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146531))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146540))
compound-branch200308172146532
  (assign continue (label after-call200308172146541))
  (goto (label compound-apply-compiled))
compiled-branch200308172146531
  (assign continue (label after-call200308172146541))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146540
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172146530
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172146541
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146570))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146571))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146573))
compound-branch200308172146572
  (assign continue (label after-call200308172146574))
  (goto (label compound-apply-compiled))
compiled-branch200308172146571
  (assign continue (label after-call200308172146574))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146573
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172146570
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172146574
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore env)
  (save argl)
  (comment list-union)
  (assign proc (op lookup-variable-value) (const list-union) (reg env))
  (save proc)
  (save env)
  (comment registers-needed)
  (assign proc (op lookup-variable-value) (const registers-needed) (reg env))
  (comment seq2)
  (assign val (op lookup-variable-value) (const seq2) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146490))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146491))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146493))
compound-branch200308172146492
  (assign continue (label after-call200308172146494))
  (goto (label compound-apply-compiled))
compiled-branch200308172146491
  (assign continue (label after-call200308172146494))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146493
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172146490
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172146494
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment registers-needed)
  (assign proc (op lookup-variable-value) (const registers-needed) (reg env))
  (comment seq1)
  (assign val (op lookup-variable-value) (const seq1) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146480))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146481))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146483))
compound-branch200308172146482
  (assign continue (label after-call200308172146484))
  (goto (label compound-apply-compiled))
compiled-branch200308172146481
  (assign continue (label after-call200308172146484))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146483
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172146480
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172146484
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172146510))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172146511))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172146513))
compound-branch200308172146512
  (assign continue (label after-call200308172146514))
  (goto (label compound-apply-compiled))
compiled-branch200308172146511
  (assign continue (label after-call200308172146514))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172146513
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172146510
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172146514
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172147080))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172147081))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172147083))
compound-branch200308172147082
  (goto (label compound-apply-compiled))
compiled-branch200308172147081
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172147083
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308172147080
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308172147084
after-lambda200308172146471
  (comment (define (parallel-instruction-sequences seq1 seq2) (make-instruction-sequence (list-union (registers-needed seq1) (registers-needed seq2)) (list-union (registers-modified seq1) (registers-modified seq2)) (append (statements seq1) (statements seq2)) (quote ()))))
  (perform (op define-variable!) (const parallel-instruction-sequences) (reg val) (reg env))
  (assign val  (const ok))
  (comment (quote (COMPILER LOADED)))
  (assign val  (const (COMPILER LOADED)))
))
