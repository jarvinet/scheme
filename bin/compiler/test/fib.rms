
; This file is generated by the pretty printer
; The needs- and modifies-registers are discarded
(()()
(
  (comment (lambda (n) (if (< n 2) n (+ (fib1 (- n 2)) (fib1 (- n 1))))))
  (assign val (op make-compiled-procedure) (label entry200308202111421) (reg env))
  (goto (label after-lambda200308202111420))
  (comment (lambda (n) (if (< n 2) n (+ (fib1 (- n 2)) (fib1 (- n 1))))))
entry200308202111421
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (n)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment <)
  (assign proc (op lookup-variable-value) (const <) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111464))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111463))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111461))
compound-branch200308202111462
  (assign continue (label after-call200308202111460))
  (goto (label compound-apply-compiled))
compiled-branch200308202111463
  (assign continue (label after-call200308202111460))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111461
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111464
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111460
  (restore env)
  (restore continue)
  (comment (if (< n 2) n (+ (fib1 (- n 2)) (fib1 (- n 1)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308202111423))
true-branch200308202111424
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (goto (reg continue))
false-branch200308202111423
  (comment +)
  (assign proc (op lookup-variable-value) (const +) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment fib1)
  (assign proc (op lookup-variable-value) (const fib1) (reg env))
  (save proc)
  (comment -)
  (assign proc (op lookup-variable-value) (const -) (reg env))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111429))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111428))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111426))
compound-branch200308202111427
  (assign continue (label after-call200308202111425))
  (goto (label compound-apply-compiled))
compiled-branch200308202111428
  (assign continue (label after-call200308202111425))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111426
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111429
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111425
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003082021114214))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003082021114213))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003082021114211))
compound-branch2003082021114212
  (assign continue (label after-call2003082021114210))
  (goto (label compound-apply-compiled))
compiled-branch2003082021114213
  (assign continue (label after-call2003082021114210))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003082021114211
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003082021114214
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003082021114210
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment fib1)
  (assign proc (op lookup-variable-value) (const fib1) (reg env))
  (save proc)
  (comment -)
  (assign proc (op lookup-variable-value) (const -) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111434))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111433))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111431))
compound-branch200308202111432
  (assign continue (label after-call200308202111430))
  (goto (label compound-apply-compiled))
compiled-branch200308202111433
  (assign continue (label after-call200308202111430))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111431
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111434
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111430
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111444))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111443))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111441))
compound-branch200308202111442
  (assign continue (label after-call200308202111440))
  (goto (label compound-apply-compiled))
compiled-branch200308202111443
  (assign continue (label after-call200308202111440))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111441
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111444
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111440
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111449))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111448))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111446))
compound-branch200308202111447
  (goto (label compound-apply-compiled))
compiled-branch200308202111448
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111446
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308202111449
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308202111445
after-if200308202111422
after-lambda200308202111420
  (comment (define (fib1 n) (if (< n 2) n (+ (fib1 (- n 2)) (fib1 (- n 1))))))
  (perform (op define-variable!) (const fib1) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (n) (if (integer-less-than n 2) n (integer-add (fib2 (integer-minus n 2)) (fib2 (integer-minus n 1))))))
  (assign val (op make-compiled-procedure) (label entry200308202111351) (reg env))
  (goto (label after-lambda200308202111350))
  (comment (lambda (n) (if (integer-less-than n 2) n (integer-add (fib2 (integer-minus n 2)) (fib2 (integer-minus n 1))))))
entry200308202111351
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (n)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment integer-less-than)
  (assign proc (op lookup-variable-value) (const integer-less-than) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111404))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111403))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111401))
compound-branch200308202111402
  (assign continue (label after-call200308202111400))
  (goto (label compound-apply-compiled))
compiled-branch200308202111403
  (assign continue (label after-call200308202111400))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111401
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111404
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111400
  (restore env)
  (restore continue)
  (comment (if (integer-less-than n 2) n (integer-add (fib2 (integer-minus n 2)) (fib2 (integer-minus n 1)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308202111353))
true-branch200308202111354
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (goto (reg continue))
false-branch200308202111353
  (comment integer-add)
  (assign proc (op lookup-variable-value) (const integer-add) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment fib2)
  (assign proc (op lookup-variable-value) (const fib2) (reg env))
  (save proc)
  (comment integer-minus)
  (assign proc (op lookup-variable-value) (const integer-minus) (reg env))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111359))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111358))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111356))
compound-branch200308202111357
  (assign continue (label after-call200308202111355))
  (goto (label compound-apply-compiled))
compiled-branch200308202111358
  (assign continue (label after-call200308202111355))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111356
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111359
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111355
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111364))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111363))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111361))
compound-branch200308202111362
  (assign continue (label after-call200308202111360))
  (goto (label compound-apply-compiled))
compiled-branch200308202111363
  (assign continue (label after-call200308202111360))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111361
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111364
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111360
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment fib2)
  (assign proc (op lookup-variable-value) (const fib2) (reg env))
  (save proc)
  (comment integer-minus)
  (assign proc (op lookup-variable-value) (const integer-minus) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111369))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111368))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111366))
compound-branch200308202111367
  (assign continue (label after-call200308202111365))
  (goto (label compound-apply-compiled))
compiled-branch200308202111368
  (assign continue (label after-call200308202111365))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111366
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111369
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111365
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111374))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111373))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111371))
compound-branch200308202111372
  (assign continue (label after-call200308202111370))
  (goto (label compound-apply-compiled))
compiled-branch200308202111373
  (assign continue (label after-call200308202111370))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111371
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111374
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111370
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111379))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111378))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111376))
compound-branch200308202111377
  (goto (label compound-apply-compiled))
compiled-branch200308202111378
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111376
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308202111379
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308202111375
after-if200308202111352
after-lambda200308202111350
  (comment (define (fib2 n) (if (integer-less-than n 2) n (integer-add (fib2 (integer-minus n 2)) (fib2 (integer-minus n 1))))))
  (perform (op define-variable!) (const fib2) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (n) (if (< n 2) n (integer-add (fib3 (integer-minus n 2)) (fib3 (integer-minus n 1))))))
  (assign val (op make-compiled-procedure) (label entry200308202111291) (reg env))
  (goto (label after-lambda200308202111290))
  (comment (lambda (n) (if (< n 2) n (integer-add (fib3 (integer-minus n 2)) (fib3 (integer-minus n 1))))))
entry200308202111291
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (n)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment <)
  (assign proc (op lookup-variable-value) (const <) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111334))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111333))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111331))
compound-branch200308202111332
  (assign continue (label after-call200308202111330))
  (goto (label compound-apply-compiled))
compiled-branch200308202111333
  (assign continue (label after-call200308202111330))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111331
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111334
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111330
  (restore env)
  (restore continue)
  (comment (if (< n 2) n (integer-add (fib3 (integer-minus n 2)) (fib3 (integer-minus n 1)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308202111293))
true-branch200308202111294
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (goto (reg continue))
false-branch200308202111293
  (comment integer-add)
  (assign proc (op lookup-variable-value) (const integer-add) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment fib3)
  (assign proc (op lookup-variable-value) (const fib3) (reg env))
  (save proc)
  (comment integer-minus)
  (assign proc (op lookup-variable-value) (const integer-minus) (reg env))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111299))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111298))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111296))
compound-branch200308202111297
  (assign continue (label after-call200308202111295))
  (goto (label compound-apply-compiled))
compiled-branch200308202111298
  (assign continue (label after-call200308202111295))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111296
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111299
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111295
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003082021112914))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003082021112913))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003082021112911))
compound-branch2003082021112912
  (assign continue (label after-call2003082021112910))
  (goto (label compound-apply-compiled))
compiled-branch2003082021112913
  (assign continue (label after-call2003082021112910))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003082021112911
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003082021112914
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003082021112910
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment fib3)
  (assign proc (op lookup-variable-value) (const fib3) (reg env))
  (save proc)
  (comment integer-minus)
  (assign proc (op lookup-variable-value) (const integer-minus) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111304))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111303))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111301))
compound-branch200308202111302
  (assign continue (label after-call200308202111300))
  (goto (label compound-apply-compiled))
compiled-branch200308202111303
  (assign continue (label after-call200308202111300))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111301
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111304
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111300
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111309))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111308))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111306))
compound-branch200308202111307
  (assign continue (label after-call200308202111305))
  (goto (label compound-apply-compiled))
compiled-branch200308202111308
  (assign continue (label after-call200308202111305))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111306
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111309
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111305
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111314))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111313))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111311))
compound-branch200308202111312
  (goto (label compound-apply-compiled))
compiled-branch200308202111313
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111311
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308202111314
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308202111310
after-if200308202111292
after-lambda200308202111290
  (comment (define (fib3 n) (if (< n 2) n (integer-add (fib3 (integer-minus n 2)) (fib3 (integer-minus n 1))))))
  (perform (op define-variable!) (const fib3) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (n) (if (integer-less-than n 2) n (+ (fib4 (integer-minus n 2)) (fib4 (integer-minus n 1))))))
  (assign val (op make-compiled-procedure) (label entry200308202111231) (reg env))
  (goto (label after-lambda200308202111230))
  (comment (lambda (n) (if (integer-less-than n 2) n (+ (fib4 (integer-minus n 2)) (fib4 (integer-minus n 1))))))
entry200308202111231
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (n)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment integer-less-than)
  (assign proc (op lookup-variable-value) (const integer-less-than) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111274))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111273))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111271))
compound-branch200308202111272
  (assign continue (label after-call200308202111270))
  (goto (label compound-apply-compiled))
compiled-branch200308202111273
  (assign continue (label after-call200308202111270))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111271
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111274
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111270
  (restore env)
  (restore continue)
  (comment (if (integer-less-than n 2) n (+ (fib4 (integer-minus n 2)) (fib4 (integer-minus n 1)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308202111233))
true-branch200308202111234
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (goto (reg continue))
false-branch200308202111233
  (comment +)
  (assign proc (op lookup-variable-value) (const +) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment fib4)
  (assign proc (op lookup-variable-value) (const fib4) (reg env))
  (save proc)
  (comment integer-minus)
  (assign proc (op lookup-variable-value) (const integer-minus) (reg env))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111239))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111238))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111236))
compound-branch200308202111237
  (assign continue (label after-call200308202111235))
  (goto (label compound-apply-compiled))
compiled-branch200308202111238
  (assign continue (label after-call200308202111235))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111236
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111239
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111235
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003082021112314))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003082021112313))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003082021112311))
compound-branch2003082021112312
  (assign continue (label after-call2003082021112310))
  (goto (label compound-apply-compiled))
compiled-branch2003082021112313
  (assign continue (label after-call2003082021112310))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003082021112311
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003082021112314
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003082021112310
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment fib4)
  (assign proc (op lookup-variable-value) (const fib4) (reg env))
  (save proc)
  (comment integer-minus)
  (assign proc (op lookup-variable-value) (const integer-minus) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111244))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111243))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111241))
compound-branch200308202111242
  (assign continue (label after-call200308202111240))
  (goto (label compound-apply-compiled))
compiled-branch200308202111243
  (assign continue (label after-call200308202111240))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111241
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111244
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111240
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111249))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111248))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111246))
compound-branch200308202111247
  (assign continue (label after-call200308202111245))
  (goto (label compound-apply-compiled))
compiled-branch200308202111248
  (assign continue (label after-call200308202111245))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111246
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111249
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111245
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111264))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111263))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111261))
compound-branch200308202111262
  (goto (label compound-apply-compiled))
compiled-branch200308202111263
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111261
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308202111264
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308202111260
after-if200308202111232
after-lambda200308202111230
  (comment (define (fib4 n) (if (integer-less-than n 2) n (+ (fib4 (integer-minus n 2)) (fib4 (integer-minus n 1))))))
  (perform (op define-variable!) (const fib4) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (n) (if (integer-less-than n 2) n (integer-add (fib5 (- n 2)) (fib5 (- n 1))))))
  (assign val (op make-compiled-procedure) (label entry200308202111171) (reg env))
  (goto (label after-lambda200308202111170))
  (comment (lambda (n) (if (integer-less-than n 2) n (integer-add (fib5 (- n 2)) (fib5 (- n 1))))))
entry200308202111171
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (n)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment integer-less-than)
  (assign proc (op lookup-variable-value) (const integer-less-than) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111214))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111213))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111211))
compound-branch200308202111212
  (assign continue (label after-call200308202111210))
  (goto (label compound-apply-compiled))
compiled-branch200308202111213
  (assign continue (label after-call200308202111210))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111211
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111214
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111210
  (restore env)
  (restore continue)
  (comment (if (integer-less-than n 2) n (integer-add (fib5 (- n 2)) (fib5 (- n 1)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308202111173))
true-branch200308202111174
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (goto (reg continue))
false-branch200308202111173
  (comment integer-add)
  (assign proc (op lookup-variable-value) (const integer-add) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment fib5)
  (assign proc (op lookup-variable-value) (const fib5) (reg env))
  (save proc)
  (comment -)
  (assign proc (op lookup-variable-value) (const -) (reg env))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111179))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111178))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111176))
compound-branch200308202111177
  (assign continue (label after-call200308202111175))
  (goto (label compound-apply-compiled))
compiled-branch200308202111178
  (assign continue (label after-call200308202111175))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111176
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111179
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111175
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003082021111714))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003082021111713))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003082021111711))
compound-branch2003082021111712
  (assign continue (label after-call2003082021111710))
  (goto (label compound-apply-compiled))
compiled-branch2003082021111713
  (assign continue (label after-call2003082021111710))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003082021111711
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003082021111714
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003082021111710
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment fib5)
  (assign proc (op lookup-variable-value) (const fib5) (reg env))
  (save proc)
  (comment -)
  (assign proc (op lookup-variable-value) (const -) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111184))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111183))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111181))
compound-branch200308202111182
  (assign continue (label after-call200308202111180))
  (goto (label compound-apply-compiled))
compiled-branch200308202111183
  (assign continue (label after-call200308202111180))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111181
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111184
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111180
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111189))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111188))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111186))
compound-branch200308202111187
  (assign continue (label after-call200308202111185))
  (goto (label compound-apply-compiled))
compiled-branch200308202111188
  (assign continue (label after-call200308202111185))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111186
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111189
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111185
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111194))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111193))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111191))
compound-branch200308202111192
  (goto (label compound-apply-compiled))
compiled-branch200308202111193
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111191
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308202111194
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308202111190
after-if200308202111172
after-lambda200308202111170
  (comment (define (fib5 n) (if (integer-less-than n 2) n (integer-add (fib5 (- n 2)) (fib5 (- n 1))))))
  (perform (op define-variable!) (const fib5) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (n) (if (< n 2) n (integer-add (fib6 (- n 2)) (fib6 (- n 1))))))
  (assign val (op make-compiled-procedure) (label entry200308202111111) (reg env))
  (goto (label after-lambda200308202111110))
  (comment (lambda (n) (if (< n 2) n (integer-add (fib6 (- n 2)) (fib6 (- n 1))))))
entry200308202111111
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (n)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment <)
  (assign proc (op lookup-variable-value) (const <) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111154))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111153))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111151))
compound-branch200308202111152
  (assign continue (label after-call200308202111150))
  (goto (label compound-apply-compiled))
compiled-branch200308202111153
  (assign continue (label after-call200308202111150))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111151
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111154
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111150
  (restore env)
  (restore continue)
  (comment (if (< n 2) n (integer-add (fib6 (- n 2)) (fib6 (- n 1)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308202111113))
true-branch200308202111114
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (goto (reg continue))
false-branch200308202111113
  (comment integer-add)
  (assign proc (op lookup-variable-value) (const integer-add) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment fib6)
  (assign proc (op lookup-variable-value) (const fib6) (reg env))
  (save proc)
  (comment -)
  (assign proc (op lookup-variable-value) (const -) (reg env))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111119))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111118))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111116))
compound-branch200308202111117
  (assign continue (label after-call200308202111115))
  (goto (label compound-apply-compiled))
compiled-branch200308202111118
  (assign continue (label after-call200308202111115))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111116
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111119
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111115
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003082021111114))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003082021111113))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003082021111111))
compound-branch2003082021111112
  (assign continue (label after-call2003082021111110))
  (goto (label compound-apply-compiled))
compiled-branch2003082021111113
  (assign continue (label after-call2003082021111110))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003082021111111
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003082021111114
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003082021111110
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment fib6)
  (assign proc (op lookup-variable-value) (const fib6) (reg env))
  (save proc)
  (comment -)
  (assign proc (op lookup-variable-value) (const -) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111124))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111123))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111121))
compound-branch200308202111122
  (assign continue (label after-call200308202111120))
  (goto (label compound-apply-compiled))
compiled-branch200308202111123
  (assign continue (label after-call200308202111120))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111121
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111124
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111120
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111129))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111128))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111126))
compound-branch200308202111127
  (assign continue (label after-call200308202111125))
  (goto (label compound-apply-compiled))
compiled-branch200308202111128
  (assign continue (label after-call200308202111125))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111126
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111129
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111125
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111134))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111133))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111131))
compound-branch200308202111132
  (goto (label compound-apply-compiled))
compiled-branch200308202111133
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111131
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308202111134
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308202111130
after-if200308202111112
after-lambda200308202111110
  (comment (define (fib6 n) (if (< n 2) n (integer-add (fib6 (- n 2)) (fib6 (- n 1))))))
  (perform (op define-variable!) (const fib6) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (n) (if (< n 2) n (+ (fib7 (integer-minus n 2)) (fib7 (integer-minus n 1))))))
  (assign val (op make-compiled-procedure) (label entry200308202111061) (reg env))
  (goto (label after-lambda200308202111060))
  (comment (lambda (n) (if (< n 2) n (+ (fib7 (integer-minus n 2)) (fib7 (integer-minus n 1))))))
entry200308202111061
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (n)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment <)
  (assign proc (op lookup-variable-value) (const <) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111094))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111093))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111091))
compound-branch200308202111092
  (assign continue (label after-call200308202111090))
  (goto (label compound-apply-compiled))
compiled-branch200308202111093
  (assign continue (label after-call200308202111090))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111091
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111094
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111090
  (restore env)
  (restore continue)
  (comment (if (< n 2) n (+ (fib7 (integer-minus n 2)) (fib7 (integer-minus n 1)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308202111063))
true-branch200308202111064
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (goto (reg continue))
false-branch200308202111063
  (comment +)
  (assign proc (op lookup-variable-value) (const +) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment fib7)
  (assign proc (op lookup-variable-value) (const fib7) (reg env))
  (save proc)
  (comment integer-minus)
  (assign proc (op lookup-variable-value) (const integer-minus) (reg env))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111069))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111068))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111066))
compound-branch200308202111067
  (assign continue (label after-call200308202111065))
  (goto (label compound-apply-compiled))
compiled-branch200308202111068
  (assign continue (label after-call200308202111065))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111066
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111069
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111065
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003082021110614))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003082021110613))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003082021110611))
compound-branch2003082021110612
  (assign continue (label after-call2003082021110610))
  (goto (label compound-apply-compiled))
compiled-branch2003082021110613
  (assign continue (label after-call2003082021110610))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003082021110611
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003082021110614
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003082021110610
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment fib7)
  (assign proc (op lookup-variable-value) (const fib7) (reg env))
  (save proc)
  (comment integer-minus)
  (assign proc (op lookup-variable-value) (const integer-minus) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111074))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111073))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111071))
compound-branch200308202111072
  (assign continue (label after-call200308202111070))
  (goto (label compound-apply-compiled))
compiled-branch200308202111073
  (assign continue (label after-call200308202111070))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111071
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111074
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111070
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111079))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111078))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111076))
compound-branch200308202111077
  (assign continue (label after-call200308202111075))
  (goto (label compound-apply-compiled))
compiled-branch200308202111078
  (assign continue (label after-call200308202111075))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111076
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111079
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111075
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111084))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111083))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111081))
compound-branch200308202111082
  (goto (label compound-apply-compiled))
compiled-branch200308202111083
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111081
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308202111084
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308202111080
after-if200308202111062
after-lambda200308202111060
  (comment (define (fib7 n) (if (< n 2) n (+ (fib7 (integer-minus n 2)) (fib7 (integer-minus n 1))))))
  (perform (op define-variable!) (const fib7) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda (n) (if (integer-less-than n 2) n (+ (fib8 (- n 2)) (fib8 (- n 1))))))
  (assign val (op make-compiled-procedure) (label entry200308202111011) (reg env))
  (goto (label after-lambda200308202111010))
  (comment (lambda (n) (if (integer-less-than n 2) n (+ (fib8 (- n 2)) (fib8 (- n 1))))))
entry200308202111011
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (n)) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment integer-less-than)
  (assign proc (op lookup-variable-value) (const integer-less-than) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111044))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111043))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111041))
compound-branch200308202111042
  (assign continue (label after-call200308202111040))
  (goto (label compound-apply-compiled))
compiled-branch200308202111043
  (assign continue (label after-call200308202111040))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111041
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111044
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111040
  (restore env)
  (restore continue)
  (comment (if (integer-less-than n 2) n (+ (fib8 (- n 2)) (fib8 (- n 1)))))
  (test (op false?) (reg val))
  (branch (label false-branch200308202111013))
true-branch200308202111014
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (goto (reg continue))
false-branch200308202111013
  (comment +)
  (assign proc (op lookup-variable-value) (const +) (reg env))
  (save continue)
  (save proc)
  (save env)
  (comment fib8)
  (assign proc (op lookup-variable-value) (const fib8) (reg env))
  (save proc)
  (comment -)
  (assign proc (op lookup-variable-value) (const -) (reg env))
  (comment 1)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111024))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111023))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111021))
compound-branch200308202111022
  (assign continue (label after-call200308202111020))
  (goto (label compound-apply-compiled))
compiled-branch200308202111023
  (assign continue (label after-call200308202111020))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111021
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111024
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111020
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111029))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111028))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111026))
compound-branch200308202111027
  (assign continue (label after-call200308202111025))
  (goto (label compound-apply-compiled))
compiled-branch200308202111028
  (assign continue (label after-call200308202111025))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111026
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111029
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111025
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (comment fib8)
  (assign proc (op lookup-variable-value) (const fib8) (reg env))
  (save proc)
  (comment -)
  (assign proc (op lookup-variable-value) (const -) (reg env))
  (comment 2)
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (comment n)
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch2003082021110214))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch2003082021110213))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch2003082021110211))
compound-branch2003082021110212
  (assign continue (label after-call2003082021110210))
  (goto (label compound-apply-compiled))
compiled-branch2003082021110213
  (assign continue (label after-call2003082021110210))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch2003082021110211
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch2003082021110214
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call2003082021110210
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111034))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111033))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111031))
compound-branch200308202111032
  (assign continue (label after-call200308202111030))
  (goto (label compound-apply-compiled))
compiled-branch200308202111033
  (assign continue (label after-call200308202111030))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111031
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308202111034
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308202111030
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308202111039))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308202111038))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308202111036))
compound-branch200308202111037
  (goto (label compound-apply-compiled))
compiled-branch200308202111038
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308202111036
  (assign val (op apply-continuation) (reg proc) (reg argl))
  (goto (reg continue))
primitive-branch200308202111039
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200308202111035
after-if200308202111012
after-lambda200308202111010
  (comment (define (fib8 n) (if (integer-less-than n 2) n (+ (fib8 (- n 2)) (fib8 (- n 1))))))
  (perform (op define-variable!) (const fib8) (reg val) (reg env))
  (assign val  (const ok))
))
