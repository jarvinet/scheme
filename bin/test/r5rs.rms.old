
; This file is generated by the pretty printer
; The needs- and modifies-registers are discarded
(()()
(
  (assign val (op make-compiled-procedure) (label entry200209021918220) (reg env))
  (goto (label after-lambda200209021918221))
entry200209021918220
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const args) (reg argl) (reg env))
  (assign val (op make-compiled-procedure) (label entry200209021918222) (reg env))
  (goto (label after-lambda200209021918223))
entry200209021918222
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first rest )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918230))
compiled-branch200209021918231
  (assign continue (label after-call200209021918232))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918230
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021918232
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021918225))
true-branch200209021918224
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200209021918225
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const integer-equal) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918243))
compiled-branch200209021918244
  (assign continue (label after-call200209021918245))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918243
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021918245
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918260))
compiled-branch200209021918261
  (assign continue (label after-call200209021918262))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918260
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021918262
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021918241))
true-branch200209021918240
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918290))
compiled-branch200209021918291
  (assign continue (label after-call200209021918292))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918290
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021918292
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918280))
compiled-branch200209021918281
  (assign continue (label after-call200209021918282))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918280
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021918282
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918310))
compiled-branch200209021918311
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918310
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021918312
false-branch200209021918241
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if200209021918242
after-if200209021918226
after-lambda200209021918223
  (perform (op define-variable!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918383))
compiled-branch200209021918384
  (assign continue (label after-call200209021918385))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918383
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021918385
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021918381))
true-branch200209021918380
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200209021918381
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918410))
compiled-branch200209021918411
  (assign continue (label after-call200209021918412))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918410
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021918412
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918400))
compiled-branch200209021918401
  (assign continue (label after-call200209021918402))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918400
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021918402
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918430))
compiled-branch200209021918431
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918430
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021918432
after-if200209021918382
after-lambda200209021918221
  (perform (op define-variable!) (const =) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021918490) (reg env))
  (goto (label after-lambda200209021918491))
entry200209021918490
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const args) (reg argl) (reg env))
  (assign val (op make-compiled-procedure) (label entry200209021918492) (reg env))
  (goto (label after-lambda200209021918493))
entry200209021918492
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first rest )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918500))
compiled-branch200209021918501
  (assign continue (label after-call200209021918502))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918500
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021918502
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021918495))
true-branch200209021918494
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200209021918495
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const integer-less-than) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918513))
compiled-branch200209021918514
  (assign continue (label after-call200209021918515))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918513
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021918515
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918530))
compiled-branch200209021918531
  (assign continue (label after-call200209021918532))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918530
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021918532
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021918511))
true-branch200209021918510
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918560))
compiled-branch200209021918561
  (assign continue (label after-call200209021918562))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918560
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021918562
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918550))
compiled-branch200209021918551
  (assign continue (label after-call200209021918552))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918550
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021918552
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021918580))
compiled-branch200209021918581
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021918580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021918582
false-branch200209021918511
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if200209021918512
after-if200209021918496
after-lambda200209021918493
  (perform (op define-variable!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919053))
compiled-branch200209021919054
  (assign continue (label after-call200209021919055))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919053
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021919055
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021919051))
true-branch200209021919050
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200209021919051
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919080))
compiled-branch200209021919081
  (assign continue (label after-call200209021919082))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919080
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021919082
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919070))
compiled-branch200209021919071
  (assign continue (label after-call200209021919072))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919070
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021919072
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919100))
compiled-branch200209021919101
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919100
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021919102
after-if200209021919052
after-lambda200209021918491
  (perform (op define-variable!) (const <) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021919160) (reg env))
  (goto (label after-lambda200209021919161))
entry200209021919160
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const args) (reg argl) (reg env))
  (assign val (op make-compiled-procedure) (label entry200209021919162) (reg env))
  (goto (label after-lambda200209021919163))
entry200209021919162
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first rest )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919170))
compiled-branch200209021919171
  (assign continue (label after-call200209021919172))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919170
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021919172
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021919165))
true-branch200209021919164
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200209021919165
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const integer-greater-than) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919183))
compiled-branch200209021919184
  (assign continue (label after-call200209021919185))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919183
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021919185
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919200))
compiled-branch200209021919201
  (assign continue (label after-call200209021919202))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919200
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021919202
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021919181))
true-branch200209021919180
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919230))
compiled-branch200209021919231
  (assign continue (label after-call200209021919232))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919230
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021919232
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919210))
compiled-branch200209021919211
  (assign continue (label after-call200209021919212))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919210
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021919212
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919240))
compiled-branch200209021919241
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919240
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021919242
false-branch200209021919181
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if200209021919182
after-if200209021919166
after-lambda200209021919163
  (perform (op define-variable!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919323))
compiled-branch200209021919324
  (assign continue (label after-call200209021919325))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919323
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021919325
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021919321))
true-branch200209021919320
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200209021919321
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919350))
compiled-branch200209021919351
  (assign continue (label after-call200209021919352))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919350
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021919352
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919330))
compiled-branch200209021919331
  (assign continue (label after-call200209021919332))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919330
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021919332
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919360))
compiled-branch200209021919361
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919360
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021919362
after-if200209021919322
after-lambda200209021919161
  (perform (op define-variable!) (const >) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021919430) (reg env))
  (goto (label after-lambda200209021919431))
entry200209021919430
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (x )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const x) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919440))
compiled-branch200209021919441
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919440
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021919442
after-lambda200209021919431
  (perform (op define-variable!) (const zero?) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021919450) (reg env))
  (goto (label after-lambda200209021919451))
entry200209021919450
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (x )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const >) (reg env))
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const x) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919460))
compiled-branch200209021919461
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919460
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021919462
after-lambda200209021919451
  (perform (op define-variable!) (const positive?) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021919480) (reg env))
  (goto (label after-lambda200209021919481))
entry200209021919480
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (x )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const <) (reg env))
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const x) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919490))
compiled-branch200209021919491
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919490
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021919492
after-lambda200209021919481
  (perform (op define-variable!) (const negative?) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021919510) (reg env))
  (goto (label after-lambda200209021919511))
entry200209021919510
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (n )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (save continue)
  (save proc)
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const remainder) (reg env))
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919520))
compiled-branch200209021919521
  (assign continue (label after-call200209021919522))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919520
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021919522
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919530))
compiled-branch200209021919531
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919530
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021919532
after-lambda200209021919511
  (perform (op define-variable!) (const odd?) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021919560) (reg env))
  (goto (label after-lambda200209021919561))
entry200209021919560
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (n )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (save continue)
  (save proc)
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const remainder) (reg env))
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919570))
compiled-branch200209021919571
  (assign continue (label after-call200209021919572))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919570
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021919572
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021919580))
compiled-branch200209021919581
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021919580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021919582
after-lambda200209021919561
  (perform (op define-variable!) (const even?) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021920010) (reg env))
  (goto (label after-lambda200209021920011))
entry200209021920010
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first first . rest )) (reg argl) (reg env))
  (assign val (op make-compiled-procedure) (label entry200209021920012) (reg env))
  (goto (label after-lambda200209021920013))
entry200209021920012
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (smallest seq )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920017))
compiled-branch200209021920018
  (assign continue (label after-call200209021920019))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920017
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021920019
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021920015))
true-branch200209021920014
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (goto (reg continue))
false-branch200209021920015
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const <) (reg env))
  (save proc)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920030))
compiled-branch200209021920031
  (assign continue (label after-call200209021920032))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920030
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021920032
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920040))
compiled-branch200209021920041
  (assign continue (label after-call200209021920042))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920040
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021920042
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021920021))
true-branch200209021920020
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920070))
compiled-branch200209021920071
  (assign continue (label after-call200209021920072))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920070
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021920072
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920060))
compiled-branch200209021920061
  (assign continue (label after-call200209021920062))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920060
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021920062
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920090))
compiled-branch200209021920091
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920090
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021920092
false-branch200209021920021
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920110))
compiled-branch200209021920111
  (assign continue (label after-call200209021920112))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920110
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021920112
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920130))
compiled-branch200209021920131
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920130
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021920132
after-if200209021920022
after-if200209021920016
after-lambda200209021920013
  (perform (op define-variable!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920220))
compiled-branch200209021920221
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920220
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021920222
after-lambda200209021920011
  (perform (op define-variable!) (const min) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021920260) (reg env))
  (goto (label after-lambda200209021920261))
entry200209021920260
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first first . rest )) (reg argl) (reg env))
  (assign val (op make-compiled-procedure) (label entry200209021920262) (reg env))
  (goto (label after-lambda200209021920263))
entry200209021920262
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (smallest rest )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920267))
compiled-branch200209021920268
  (assign continue (label after-call200209021920269))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920267
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021920269
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021920265))
true-branch200209021920264
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (goto (reg continue))
false-branch200209021920265
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const >) (reg env))
  (save proc)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920280))
compiled-branch200209021920281
  (assign continue (label after-call200209021920282))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920280
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021920282
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920300))
compiled-branch200209021920301
  (assign continue (label after-call200209021920302))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920300
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021920302
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021920271))
true-branch200209021920270
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920330))
compiled-branch200209021920331
  (assign continue (label after-call200209021920332))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920330
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021920332
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920310))
compiled-branch200209021920311
  (assign continue (label after-call200209021920312))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920310
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021920312
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920340))
compiled-branch200209021920341
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920340
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021920342
false-branch200209021920271
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920360))
compiled-branch200209021920361
  (assign continue (label after-call200209021920362))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920360
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021920362
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const smallest) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920380))
compiled-branch200209021920381
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920380
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021920382
after-if200209021920272
after-if200209021920266
after-lambda200209021920263
  (perform (op define-variable!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920470))
compiled-branch200209021920471
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920470
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021920472
after-lambda200209021920261
  (perform (op define-variable!) (const max) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021920510) (reg env))
  (goto (label after-lambda200209021920511))
entry200209021920510
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const args) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const accumulate) (reg env))
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (assign val  (const 0))
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (op lookup-variable-value) (const integer-add) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920520))
compiled-branch200209021920521
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920520
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021920522
after-lambda200209021920511
  (perform (op define-variable!) (const +) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021920540) (reg env))
  (goto (label after-lambda200209021920541))
entry200209021920540
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const args) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const accumulate) (reg env))
  (assign val (op lookup-variable-value) (const args) (reg env))
  (assign argl (op list) (reg val))
  (assign val  (const 1))
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (op lookup-variable-value) (const integer-mul) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920550))
compiled-branch200209021920551
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920550
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021920552
after-lambda200209021920541
  (perform (op define-variable!) (const *) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021920570) (reg env))
  (goto (label after-lambda200209021920571))
entry200209021920570
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (first first . rest )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920575))
compiled-branch200209021920576
  (assign continue (label after-call200209021920577))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920575
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021920577
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021920573))
true-branch200209021920572
  (assign proc (op lookup-variable-value) (const integer-minus) (reg env))
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op list) (reg val))
  (assign val  (const 0))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021920590))
compiled-branch200209021920591
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021920590
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021920592
false-branch200209021920573
  (assign proc (op lookup-variable-value) (const fold-left) (reg env))
  (assign val (op lookup-variable-value) (const rest) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const first) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (op lookup-variable-value) (const integer-minus) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921010))
compiled-branch200209021921011
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921010
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021921012
after-if200209021920574
after-lambda200209021920571
  (perform (op define-variable!) (const -) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021921050) (reg env))
  (goto (label after-lambda200209021921051))
entry200209021921050
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921060))
compiled-branch200209021921061
  (assign continue (label after-call200209021921062))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921060
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921062
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921070))
compiled-branch200209021921071
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921070
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021921072
after-lambda200209021921051
  (perform (op define-variable!) (const caar) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021921090) (reg env))
  (goto (label after-lambda200209021921091))
entry200209021921090
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921092))
compiled-branch200209021921093
  (assign continue (label after-call200209021921094))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921092
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921094
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921110))
compiled-branch200209021921111
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921110
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021921112
after-lambda200209021921091
  (perform (op define-variable!) (const cadr) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021921130) (reg env))
  (goto (label after-lambda200209021921131))
entry200209021921130
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921132))
compiled-branch200209021921133
  (assign continue (label after-call200209021921134))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921132
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921134
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921150))
compiled-branch200209021921151
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921150
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021921152
after-lambda200209021921131
  (perform (op define-variable!) (const cdar) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021921170) (reg env))
  (goto (label after-lambda200209021921171))
entry200209021921170
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921172))
compiled-branch200209021921173
  (assign continue (label after-call200209021921174))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921172
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921174
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921180))
compiled-branch200209021921181
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921180
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021921182
after-lambda200209021921171
  (perform (op define-variable!) (const cddr) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021921210) (reg env))
  (goto (label after-lambda200209021921211))
entry200209021921210
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921220))
compiled-branch200209021921221
  (assign continue (label after-call200209021921222))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921220
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921222
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921230))
compiled-branch200209021921231
  (assign continue (label after-call200209021921232))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921230
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921232
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921240))
compiled-branch200209021921241
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921240
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021921242
after-lambda200209021921211
  (perform (op define-variable!) (const caaar) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021921260) (reg env))
  (goto (label after-lambda200209021921261))
entry200209021921260
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921270))
compiled-branch200209021921271
  (assign continue (label after-call200209021921272))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921270
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921272
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921280))
compiled-branch200209021921281
  (assign continue (label after-call200209021921282))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921280
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921282
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921300))
compiled-branch200209021921301
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921300
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021921302
after-lambda200209021921261
  (perform (op define-variable!) (const caadr) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021921320) (reg env))
  (goto (label after-lambda200209021921321))
entry200209021921320
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921330))
compiled-branch200209021921331
  (assign continue (label after-call200209021921332))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921330
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921332
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921340))
compiled-branch200209021921341
  (assign continue (label after-call200209021921342))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921340
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921342
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921350))
compiled-branch200209021921351
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921350
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021921352
after-lambda200209021921321
  (perform (op define-variable!) (const cadar) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021921380) (reg env))
  (goto (label after-lambda200209021921381))
entry200209021921380
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921390))
compiled-branch200209021921391
  (assign continue (label after-call200209021921392))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921390
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921392
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921400))
compiled-branch200209021921401
  (assign continue (label after-call200209021921402))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921400
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921402
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921410))
compiled-branch200209021921411
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921410
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021921412
after-lambda200209021921381
  (perform (op define-variable!) (const caddr) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021921440) (reg env))
  (goto (label after-lambda200209021921441))
entry200209021921440
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921442))
compiled-branch200209021921443
  (assign continue (label after-call200209021921444))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921442
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921444
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921460))
compiled-branch200209021921461
  (assign continue (label after-call200209021921462))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921460
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921462
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921470))
compiled-branch200209021921471
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921470
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021921472
after-lambda200209021921441
  (perform (op define-variable!) (const cdaar) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021921490) (reg env))
  (goto (label after-lambda200209021921491))
entry200209021921490
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921500))
compiled-branch200209021921501
  (assign continue (label after-call200209021921502))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921500
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921502
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921510))
compiled-branch200209021921511
  (assign continue (label after-call200209021921512))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921510
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921512
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921530))
compiled-branch200209021921531
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921530
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021921532
after-lambda200209021921491
  (perform (op define-variable!) (const cdadr) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021921550) (reg env))
  (goto (label after-lambda200209021921551))
entry200209021921550
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921560))
compiled-branch200209021921561
  (assign continue (label after-call200209021921562))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921560
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921562
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921570))
compiled-branch200209021921571
  (assign continue (label after-call200209021921572))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921570
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021921572
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021921580))
compiled-branch200209021921581
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021921580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021921582
after-lambda200209021921551
  (perform (op define-variable!) (const cddar) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021922010) (reg env))
  (goto (label after-lambda200209021922011))
entry200209021922010
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922020))
compiled-branch200209021922021
  (assign continue (label after-call200209021922022))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922020
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922022
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922030))
compiled-branch200209021922031
  (assign continue (label after-call200209021922032))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922030
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922032
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922040))
compiled-branch200209021922041
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922040
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021922042
after-lambda200209021922011
  (perform (op define-variable!) (const cdddr) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021922070) (reg env))
  (goto (label after-lambda200209021922071))
entry200209021922070
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922080))
compiled-branch200209021922081
  (assign continue (label after-call200209021922082))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922080
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922082
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922090))
compiled-branch200209021922091
  (assign continue (label after-call200209021922092))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922090
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922092
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922100))
compiled-branch200209021922101
  (assign continue (label after-call200209021922102))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922100
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922102
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922120))
compiled-branch200209021922121
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922120
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021922122
after-lambda200209021922071
  (perform (op define-variable!) (const caaaar) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021922140) (reg env))
  (goto (label after-lambda200209021922141))
entry200209021922140
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922150))
compiled-branch200209021922151
  (assign continue (label after-call200209021922152))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922150
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922152
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922170))
compiled-branch200209021922171
  (assign continue (label after-call200209021922172))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922170
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922172
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922180))
compiled-branch200209021922181
  (assign continue (label after-call200209021922182))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922180
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922182
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922190))
compiled-branch200209021922191
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922190
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021922192
after-lambda200209021922141
  (perform (op define-variable!) (const caaadr) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021922220) (reg env))
  (goto (label after-lambda200209021922221))
entry200209021922220
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922230))
compiled-branch200209021922231
  (assign continue (label after-call200209021922232))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922230
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922232
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922240))
compiled-branch200209021922241
  (assign continue (label after-call200209021922242))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922240
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922242
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922260))
compiled-branch200209021922261
  (assign continue (label after-call200209021922262))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922260
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922262
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922270))
compiled-branch200209021922271
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922270
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021922272
after-lambda200209021922221
  (perform (op define-variable!) (const caadar) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021922300) (reg env))
  (goto (label after-lambda200209021922301))
entry200209021922300
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922310))
compiled-branch200209021922311
  (assign continue (label after-call200209021922312))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922310
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922312
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922320))
compiled-branch200209021922321
  (assign continue (label after-call200209021922322))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922320
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922322
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922330))
compiled-branch200209021922331
  (assign continue (label after-call200209021922332))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922330
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922332
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922350))
compiled-branch200209021922351
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922350
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021922352
after-lambda200209021922301
  (perform (op define-variable!) (const caaddr) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021922380) (reg env))
  (goto (label after-lambda200209021922381))
entry200209021922380
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922390))
compiled-branch200209021922391
  (assign continue (label after-call200209021922392))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922390
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922392
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922400))
compiled-branch200209021922401
  (assign continue (label after-call200209021922402))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922400
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922402
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922410))
compiled-branch200209021922411
  (assign continue (label after-call200209021922412))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922410
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922412
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922430))
compiled-branch200209021922431
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922430
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021922432
after-lambda200209021922381
  (perform (op define-variable!) (const cadaar) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021922450) (reg env))
  (goto (label after-lambda200209021922451))
entry200209021922450
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922460))
compiled-branch200209021922461
  (assign continue (label after-call200209021922462))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922460
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922462
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922480))
compiled-branch200209021922481
  (assign continue (label after-call200209021922482))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922480
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922482
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922490))
compiled-branch200209021922491
  (assign continue (label after-call200209021922492))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922490
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922492
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922500))
compiled-branch200209021922501
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922500
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021922502
after-lambda200209021922451
  (perform (op define-variable!) (const cadadr) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021922530) (reg env))
  (goto (label after-lambda200209021922531))
entry200209021922530
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922540))
compiled-branch200209021922541
  (assign continue (label after-call200209021922542))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922540
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922542
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922550))
compiled-branch200209021922551
  (assign continue (label after-call200209021922552))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922550
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922552
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922570))
compiled-branch200209021922571
  (assign continue (label after-call200209021922572))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922570
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021922572
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021922580))
compiled-branch200209021922581
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021922580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021922582
after-lambda200209021922531
  (perform (op define-variable!) (const caddar) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021923010) (reg env))
  (goto (label after-lambda200209021923011))
entry200209021923010
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923020))
compiled-branch200209021923021
  (assign continue (label after-call200209021923022))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923020
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923022
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923030))
compiled-branch200209021923031
  (assign continue (label after-call200209021923032))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923030
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923032
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923040))
compiled-branch200209021923041
  (assign continue (label after-call200209021923042))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923040
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923042
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923060))
compiled-branch200209021923061
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923060
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021923062
after-lambda200209021923011
  (perform (op define-variable!) (const cadddr) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021923090) (reg env))
  (goto (label after-lambda200209021923091))
entry200209021923090
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923100))
compiled-branch200209021923101
  (assign continue (label after-call200209021923102))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923100
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923102
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923110))
compiled-branch200209021923111
  (assign continue (label after-call200209021923112))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923110
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923112
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923120))
compiled-branch200209021923121
  (assign continue (label after-call200209021923122))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923120
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923122
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923140))
compiled-branch200209021923141
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923140
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021923142
after-lambda200209021923091
  (perform (op define-variable!) (const cdaaar) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021923170) (reg env))
  (goto (label after-lambda200209021923171))
entry200209021923170
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923180))
compiled-branch200209021923181
  (assign continue (label after-call200209021923182))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923180
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923182
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923190))
compiled-branch200209021923191
  (assign continue (label after-call200209021923192))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923190
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923192
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923200))
compiled-branch200209021923201
  (assign continue (label after-call200209021923202))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923200
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923202
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923220))
compiled-branch200209021923221
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923220
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021923222
after-lambda200209021923171
  (perform (op define-variable!) (const cdaadr) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021923240) (reg env))
  (goto (label after-lambda200209021923241))
entry200209021923240
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923250))
compiled-branch200209021923251
  (assign continue (label after-call200209021923252))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923250
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923252
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923270))
compiled-branch200209021923271
  (assign continue (label after-call200209021923272))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923270
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923272
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923280))
compiled-branch200209021923281
  (assign continue (label after-call200209021923282))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923280
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923282
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923290))
compiled-branch200209021923291
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923290
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021923292
after-lambda200209021923241
  (perform (op define-variable!) (const cdadar) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021923320) (reg env))
  (goto (label after-lambda200209021923321))
entry200209021923320
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923330))
compiled-branch200209021923331
  (assign continue (label after-call200209021923332))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923330
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923332
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923340))
compiled-branch200209021923341
  (assign continue (label after-call200209021923342))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923340
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923342
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923360))
compiled-branch200209021923361
  (assign continue (label after-call200209021923362))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923360
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923362
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923370))
compiled-branch200209021923371
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923370
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021923372
after-lambda200209021923321
  (perform (op define-variable!) (const cdaddr) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021923400) (reg env))
  (goto (label after-lambda200209021923401))
entry200209021923400
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923410))
compiled-branch200209021923411
  (assign continue (label after-call200209021923412))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923410
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923412
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923420))
compiled-branch200209021923421
  (assign continue (label after-call200209021923422))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923420
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923422
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923440))
compiled-branch200209021923441
  (assign continue (label after-call200209021923442))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923440
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923442
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923450))
compiled-branch200209021923451
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923450
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021923452
after-lambda200209021923401
  (perform (op define-variable!) (const cddaar) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021923480) (reg env))
  (goto (label after-lambda200209021923481))
entry200209021923480
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923490))
compiled-branch200209021923491
  (assign continue (label after-call200209021923492))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923490
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923492
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923500))
compiled-branch200209021923501
  (assign continue (label after-call200209021923502))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923500
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923502
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923510))
compiled-branch200209021923511
  (assign continue (label after-call200209021923512))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923510
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923512
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923530))
compiled-branch200209021923531
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923530
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021923532
after-lambda200209021923481
  (perform (op define-variable!) (const cddadr) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021923560) (reg env))
  (goto (label after-lambda200209021923561))
entry200209021923560
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923570))
compiled-branch200209021923571
  (assign continue (label after-call200209021923572))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923570
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923572
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923580))
compiled-branch200209021923581
  (assign continue (label after-call200209021923582))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923582
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021923590))
compiled-branch200209021923591
  (assign continue (label after-call200209021923592))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021923590
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021923592
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924010))
compiled-branch200209021924011
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924010
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021924012
after-lambda200209021923561
  (perform (op define-variable!) (const cdddar) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021924040) (reg env))
  (goto (label after-lambda200209021924041))
entry200209021924040
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (p )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const p) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924050))
compiled-branch200209021924051
  (assign continue (label after-call200209021924052))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924050
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021924052
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924060))
compiled-branch200209021924061
  (assign continue (label after-call200209021924062))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924060
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021924062
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924070))
compiled-branch200209021924071
  (assign continue (label after-call200209021924072))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924070
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021924072
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924090))
compiled-branch200209021924091
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924090
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021924092
after-lambda200209021924041
  (perform (op define-variable!) (const cddddr) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021924120) (reg env))
  (goto (label after-lambda200209021924121))
entry200209021924120
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (lst )) (reg argl) (reg env))
  (assign proc (op make-compiled-procedure) (label entry200209021924122) (reg env))
  (goto (label after-lambda200209021924123))
entry200209021924122
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (hare tortoise tortoise-advance )) (reg argl) (reg env))
  (assign val (op make-compiled-procedure) (label entry200209021924124) (reg env))
  (goto (label after-lambda200209021924125))
entry200209021924124
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const ()) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const hare) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924130))
compiled-branch200209021924131
  (assign continue (label after-call200209021924132))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924130
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021924132
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021924127))
true-branch200209021924126
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
false-branch200209021924127
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const pair?) (reg env))
  (assign val (op lookup-variable-value) (const hare) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924143))
compiled-branch200209021924144
  (assign continue (label after-call200209021924145))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924143
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021924145
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021924141))
true-branch200209021924140
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const hare) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924160))
compiled-branch200209021924161
  (assign continue (label after-call200209021924162))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924160
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021924162
  (restore env)
  (perform (op set-variable-value!) (const hare) (reg val) (reg env))
  (assign val  (const ok))
  (restore continue)
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (assign val (op lookup-variable-value) (const tortoise-advance) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924170))
compiled-branch200209021924171
  (assign continue (label after-call200209021924172))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924170
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021924172
  (restore env)
  (perform (op set-variable-value!) (const tortoise-advance) (reg val) (reg env))
  (assign val  (const ok))
  (restore continue)
  (save continue)
  (assign val (op lookup-variable-value) (const tortoise-advance) (reg env))
  (test (op false?) (reg val))
  (branch (label false-branch200209021924191))
true-branch200209021924190
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const tortoise) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924193))
compiled-branch200209021924194
  (assign continue (label after-call200209021924195))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924193
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021924195
  (restore env)
  (perform (op set-variable-value!) (const tortoise) (reg val) (reg env))
  (assign val  (const ok))
  (goto (label after-if200209021924192))
false-branch200209021924191
  (assign val (op lookup-variable-value) (const false) (reg env))
after-if200209021924192
  (restore continue)
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (assign val (op lookup-variable-value) (const tortoise) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const hare) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924223))
compiled-branch200209021924224
  (assign continue (label after-call200209021924225))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924223
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021924225
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021924221))
true-branch200209021924220
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200209021924221
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924240))
compiled-branch200209021924241
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924240
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021924242
after-if200209021924222
false-branch200209021924141
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if200209021924142
after-if200209021924128
after-lambda200209021924125
  (perform (op define-variable!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924350))
compiled-branch200209021924351
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924350
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021924352
after-lambda200209021924123
  (assign val (op lookup-variable-value) (const true) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924400))
compiled-branch200209021924401
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924400
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021924402
after-lambda200209021924121
  (perform (op define-variable!) (const list?) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021924440) (reg env))
  (goto (label after-lambda200209021924441))
entry200209021924440
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const seq) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const accumulate) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (assign val  (const ()))
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (op lookup-variable-value) (const cons) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924460))
compiled-branch200209021924461
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924460
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021924462
after-lambda200209021924441
  (perform (op define-variable!) (const list) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021924480) (reg env))
  (goto (label after-lambda200209021924481))
entry200209021924480
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (lst )) (reg argl) (reg env))
  (assign val (op make-compiled-procedure) (label entry200209021924482) (reg env))
  (goto (label after-lambda200209021924483))
entry200209021924482
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (result lst )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924487))
compiled-branch200209021924488
  (assign continue (label after-call200209021924489))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924487
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021924489
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021924485))
true-branch200209021924484
  (assign val (op lookup-variable-value) (const result) (reg env))
  (goto (reg continue))
false-branch200209021924485
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924520))
compiled-branch200209021924521
  (assign continue (label after-call200209021924522))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924520
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021924522
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const +) (reg env))
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const result) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924510))
compiled-branch200209021924511
  (assign continue (label after-call200209021924512))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924510
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021924512
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924540))
compiled-branch200209021924541
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924540
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021924542
after-if200209021924486
after-lambda200209021924483
  (perform (op define-variable!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (assign val  (const 0))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021924590))
compiled-branch200209021924591
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021924590
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021924592
after-lambda200209021924481
  (perform (op define-variable!) (const length) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021925020) (reg env))
  (goto (label after-lambda200209021925021))
entry200209021925020
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const seqs) (reg argl) (reg env))
  (assign val (op make-compiled-procedure) (label entry200209021925030) (reg env))
  (goto (label after-lambda200209021925031))
entry200209021925030
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (a b )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const accumulate) (reg env))
  (assign val (op lookup-variable-value) (const a) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const b) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (assign val (op lookup-variable-value) (const cons) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925040))
compiled-branch200209021925041
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925040
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021925042
after-lambda200209021925031
  (perform (op define-variable!) (const append-2) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021925060) (reg env))
  (goto (label after-lambda200209021925061))
entry200209021925060
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (seqs )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925065))
compiled-branch200209021925066
  (assign continue (label after-call200209021925067))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925065
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021925067
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021925063))
true-branch200209021925062
  (assign val  (const ()))
  (goto (reg continue))
false-branch200209021925063
  (assign proc (op lookup-variable-value) (const append-2) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const append-seq-list) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925100))
compiled-branch200209021925101
  (assign continue (label after-call200209021925102))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925100
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021925102
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925110))
compiled-branch200209021925111
  (assign continue (label after-call200209021925112))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925110
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021925112
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925080))
compiled-branch200209021925081
  (assign continue (label after-call200209021925082))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925080
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021925082
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925130))
compiled-branch200209021925131
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925130
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021925132
after-if200209021925064
after-lambda200209021925061
  (perform (op define-variable!) (const append-seq-list) (reg val) (reg env))
  (assign val  (const ok))
  (assign proc (op lookup-variable-value) (const append-seq-list) (reg env))
  (assign val (op lookup-variable-value) (const seqs) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925180))
compiled-branch200209021925181
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925180
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021925182
after-lambda200209021925021
  (perform (op define-variable!) (const append) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021925230) (reg env))
  (goto (label after-lambda200209021925231))
entry200209021925230
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (list )) (reg argl) (reg env))
  (assign val (op make-compiled-procedure) (label entry200209021925232) (reg env))
  (goto (label after-lambda200209021925233))
entry200209021925232
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (list result )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const list) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925237))
compiled-branch200209021925238
  (assign continue (label after-call200209021925239))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925237
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021925239
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021925235))
true-branch200209021925234
  (assign val (op lookup-variable-value) (const result) (reg env))
  (goto (reg continue))
false-branch200209021925235
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save proc)
  (assign val (op lookup-variable-value) (const result) (reg env))
  (assign argl (op list) (reg val))
  (save argl)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const list) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925270))
compiled-branch200209021925271
  (assign continue (label after-call200209021925272))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925270
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021925272
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925280))
compiled-branch200209021925281
  (assign continue (label after-call200209021925282))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925280
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021925282
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const list) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925250))
compiled-branch200209021925251
  (assign continue (label after-call200209021925252))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925250
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021925252
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925310))
compiled-branch200209021925311
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925310
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021925312
after-if200209021925236
after-lambda200209021925233
  (perform (op define-variable!) (const iter) (reg val) (reg env))
  (assign val  (const ok))
  (assign proc (op lookup-variable-value) (const iter) (reg env))
  (assign val  (const ()))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const list) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925370))
compiled-branch200209021925371
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925370
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021925372
after-lambda200209021925231
  (perform (op define-variable!) (const reverse) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021925400) (reg env))
  (goto (label after-lambda200209021925401))
entry200209021925400
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (l k )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const =) (reg env))
  (assign val  (const 0))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const k) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925410))
compiled-branch200209021925411
  (assign continue (label after-call200209021925412))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925410
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021925412
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021925403))
true-branch200209021925402
  (assign val (op lookup-variable-value) (const l) (reg env))
  (goto (reg continue))
false-branch200209021925403
  (assign proc (op lookup-variable-value) (const list-tail) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const -) (reg env))
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const k) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925440))
compiled-branch200209021925441
  (assign continue (label after-call200209021925442))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925440
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021925442
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const l) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925430))
compiled-branch200209021925431
  (assign continue (label after-call200209021925432))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925430
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021925432
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925460))
compiled-branch200209021925461
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925460
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021925462
after-if200209021925404
after-lambda200209021925401
  (perform (op define-variable!) (const list-tail) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021925510) (reg env))
  (goto (label after-lambda200209021925511))
entry200209021925510
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (l k )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const list-tail) (reg env))
  (assign val (op lookup-variable-value) (const k) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const l) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925520))
compiled-branch200209021925521
  (assign continue (label after-call200209021925522))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925520
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021925522
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925530))
compiled-branch200209021925531
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925530
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021925532
after-lambda200209021925511
  (perform (op define-variable!) (const list-ref) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021925560) (reg env))
  (goto (label after-lambda200209021925561))
entry200209021925560
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj lst )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925565))
compiled-branch200209021925566
  (assign continue (label after-call200209021925567))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925565
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021925567
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021925563))
true-branch200209021925562
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200209021925563
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021925580))
compiled-branch200209021925581
  (assign continue (label after-call200209021925582))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021925580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021925582
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926000))
compiled-branch200209021926001
  (assign continue (label after-call200209021926002))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926000
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926002
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021925571))
true-branch200209021925570
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (goto (reg continue))
false-branch200209021925571
  (assign proc (op lookup-variable-value) (const memq) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926020))
compiled-branch200209021926021
  (assign continue (label after-call200209021926022))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926020
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926022
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926040))
compiled-branch200209021926041
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926040
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021926042
after-if200209021925572
after-if200209021925564
after-lambda200209021925561
  (perform (op define-variable!) (const memq) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021926100) (reg env))
  (goto (label after-lambda200209021926101))
entry200209021926100
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj lst )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926110))
compiled-branch200209021926111
  (assign continue (label after-call200209021926112))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926110
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926112
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021926103))
true-branch200209021926102
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200209021926103
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const eqv?) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926130))
compiled-branch200209021926131
  (assign continue (label after-call200209021926132))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926130
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926132
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926140))
compiled-branch200209021926141
  (assign continue (label after-call200209021926142))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926140
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926142
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021926121))
true-branch200209021926120
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (goto (reg continue))
false-branch200209021926121
  (assign proc (op lookup-variable-value) (const memv) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926160))
compiled-branch200209021926161
  (assign continue (label after-call200209021926162))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926160
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926162
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926180))
compiled-branch200209021926181
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926180
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021926182
after-if200209021926122
after-if200209021926104
after-lambda200209021926101
  (perform (op define-variable!) (const memv) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021926250) (reg env))
  (goto (label after-lambda200209021926251))
entry200209021926250
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj lst )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926255))
compiled-branch200209021926256
  (assign continue (label after-call200209021926257))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926255
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926257
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021926253))
true-branch200209021926252
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200209021926253
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const equal?) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926273))
compiled-branch200209021926274
  (assign continue (label after-call200209021926275))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926273
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926275
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926290))
compiled-branch200209021926291
  (assign continue (label after-call200209021926292))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926290
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926292
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021926271))
true-branch200209021926270
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (goto (reg continue))
false-branch200209021926271
  (assign proc (op lookup-variable-value) (const member) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const lst) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926310))
compiled-branch200209021926311
  (assign continue (label after-call200209021926312))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926310
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926312
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926330))
compiled-branch200209021926331
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926330
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021926332
after-if200209021926272
after-if200209021926254
after-lambda200209021926251
  (perform (op define-variable!) (const member) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021926390) (reg env))
  (goto (label after-lambda200209021926391))
entry200209021926390
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj alist )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926403))
compiled-branch200209021926404
  (assign continue (label after-call200209021926405))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926403
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926405
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021926401))
true-branch200209021926400
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200209021926401
  (assign proc (op make-compiled-procedure) (label entry200209021926410) (reg env))
  (goto (label after-lambda200209021926411))
entry200209021926410
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (pair )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const eq?) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926420))
compiled-branch200209021926421
  (assign continue (label after-call200209021926422))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926420
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926422
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926440))
compiled-branch200209021926441
  (assign continue (label after-call200209021926442))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926440
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926442
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021926413))
true-branch200209021926412
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (goto (reg continue))
false-branch200209021926413
  (assign proc (op lookup-variable-value) (const assq) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926460))
compiled-branch200209021926461
  (assign continue (label after-call200209021926462))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926460
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926462
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926470))
compiled-branch200209021926471
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926470
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021926472
after-if200209021926414
after-lambda200209021926411
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926510))
compiled-branch200209021926511
  (assign continue (label after-call200209021926512))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926510
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926512
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926530))
compiled-branch200209021926531
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926530
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021926532
after-if200209021926402
after-lambda200209021926391
  (perform (op define-variable!) (const assq) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021926590) (reg env))
  (goto (label after-lambda200209021926591))
entry200209021926590
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj alist )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021926595))
compiled-branch200209021926596
  (assign continue (label after-call200209021926597))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021926595
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021926597
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021926593))
true-branch200209021926592
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200209021926593
  (assign proc (op make-compiled-procedure) (label entry200209021927010) (reg env))
  (goto (label after-lambda200209021927011))
entry200209021927010
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (pair )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const eqv?) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927020))
compiled-branch200209021927021
  (assign continue (label after-call200209021927022))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927020
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927022
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927030))
compiled-branch200209021927031
  (assign continue (label after-call200209021927032))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927030
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927032
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021927013))
true-branch200209021927012
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (goto (reg continue))
false-branch200209021927013
  (assign proc (op lookup-variable-value) (const assv) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927050))
compiled-branch200209021927051
  (assign continue (label after-call200209021927052))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927050
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927052
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927070))
compiled-branch200209021927071
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927070
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021927072
after-if200209021927014
after-lambda200209021927011
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927110))
compiled-branch200209021927111
  (assign continue (label after-call200209021927112))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927110
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927112
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927120))
compiled-branch200209021927121
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927120
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021927122
after-if200209021926594
after-lambda200209021926591
  (perform (op define-variable!) (const assv) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021927190) (reg env))
  (goto (label after-lambda200209021927191))
entry200209021927190
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (obj alist )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927195))
compiled-branch200209021927196
  (assign continue (label after-call200209021927197))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927195
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927197
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021927193))
true-branch200209021927192
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
false-branch200209021927193
  (assign proc (op make-compiled-procedure) (label entry200209021927210) (reg env))
  (goto (label after-lambda200209021927211))
entry200209021927210
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (pair )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const equal?) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927215))
compiled-branch200209021927216
  (assign continue (label after-call200209021927217))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927215
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927217
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927230))
compiled-branch200209021927231
  (assign continue (label after-call200209021927232))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927230
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927232
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021927213))
true-branch200209021927212
  (assign val (op lookup-variable-value) (const pair) (reg env))
  (goto (reg continue))
false-branch200209021927213
  (assign proc (op lookup-variable-value) (const assoc) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927250))
compiled-branch200209021927251
  (assign continue (label after-call200209021927252))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927250
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927252
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const obj) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927270))
compiled-branch200209021927271
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927270
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021927272
after-if200209021927214
after-lambda200209021927211
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const alist) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927310))
compiled-branch200209021927311
  (assign continue (label after-call200209021927312))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927310
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927312
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927320))
compiled-branch200209021927321
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927320
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021927322
after-if200209021927194
after-lambda200209021927191
  (perform (op define-variable!) (const assoc) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021927390) (reg env))
  (goto (label after-lambda200209021927391))
entry200209021927390
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc seq )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927395))
compiled-branch200209021927396
  (assign continue (label after-call200209021927397))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927395
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927397
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021927393))
true-branch200209021927392
  (assign val  (const ()))
  (goto (reg continue))
false-branch200209021927393
  (assign proc (op lookup-variable-value) (const cons) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const map) (reg env))
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927440))
compiled-branch200209021927441
  (assign continue (label after-call200209021927442))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927440
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927442
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927460))
compiled-branch200209021927461
  (assign continue (label after-call200209021927462))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927460
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927462
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const proc) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927410))
compiled-branch200209021927411
  (assign continue (label after-call200209021927412))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927410
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927412
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927420))
compiled-branch200209021927421
  (assign continue (label after-call200209021927422))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927420
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927422
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927480))
compiled-branch200209021927481
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927480
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021927482
after-if200209021927394
after-lambda200209021927391
  (perform (op define-variable!) (const map) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021927540) (reg env))
  (goto (label after-lambda200209021927541))
entry200209021927540
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc seq )) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const not) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const null?) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927550))
compiled-branch200209021927551
  (assign continue (label after-call200209021927552))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927550
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927552
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927560))
compiled-branch200209021927561
  (assign continue (label after-call200209021927562))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927560
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927562
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209021927543))
true-branch200209021927542
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const proc) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const car) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927580))
compiled-branch200209021927581
  (assign continue (label after-call200209021927582))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927582
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021927590))
compiled-branch200209021927591
  (assign continue (label after-call200209021927592))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021927590
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021927592
  (restore env)
  (restore continue)
  (assign proc (op lookup-variable-value) (const for-each) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const cdr) (reg env))
  (assign val (op lookup-variable-value) (const seq) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021928010))
compiled-branch200209021928011
  (assign continue (label after-call200209021928012))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021928010
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021928012
  (assign argl (op list) (reg val))
  (restore env)
  (assign val (op lookup-variable-value) (const proc) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021928020))
compiled-branch200209021928021
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021928020
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021928022
false-branch200209021927543
  (assign val (op lookup-variable-value) (const false) (reg env))
  (goto (reg continue))
after-if200209021927544
after-lambda200209021927541
  (perform (op define-variable!) (const for-each) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021928080) (reg env))
  (goto (label after-lambda200209021928081))
entry200209021928080
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (delayed-object )) (reg argl) (reg env))
  (assign proc (op lookup-variable-value) (const delayed-object) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021928090))
compiled-branch200209021928091
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021928090
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021928092
after-lambda200209021928081
  (perform (op define-variable!) (const force) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op make-compiled-procedure) (label entry200209021928110) (reg env))
  (goto (label after-lambda200209021928111))
entry200209021928110
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (proc )) (reg argl) (reg env))
  (assign proc (op make-compiled-procedure) (label entry200209021928112) (reg env))
  (goto (label after-lambda200209021928113))
entry200209021928112
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (result-ready? result )) (reg argl) (reg env))
  (assign val (op make-compiled-procedure) (label entry200209021928114) (reg env))
  (goto (reg continue))
entry200209021928114
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const ()) (reg argl) (reg env))
  (assign val (op lookup-variable-value) (const result-ready?) (reg env))
  (test (op false?) (reg val))
  (branch (label false-branch200209021928117))
true-branch200209021928116
  (assign val (op lookup-variable-value) (const result) (reg env))
  (goto (reg continue))
false-branch200209021928117
  (assign proc (op make-compiled-procedure) (label entry200209021928119) (reg env))
  (goto (label after-lambda2002090219281110))
entry200209021928119
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (x )) (reg argl) (reg env))
  (assign val (op lookup-variable-value) (const result-ready?) (reg env))
  (test (op false?) (reg val))
  (branch (label false-branch200209021928121))
true-branch200209021928120
  (assign val (op lookup-variable-value) (const result) (reg env))
  (goto (reg continue))
false-branch200209021928121
  (assign val (op lookup-variable-value) (const true) (reg env))
  (perform (op set-variable-value!) (const result-ready?) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op lookup-variable-value) (const x) (reg env))
  (perform (op set-variable-value!) (const result) (reg val) (reg env))
  (assign val  (const ok))
  (assign val (op lookup-variable-value) (const result) (reg env))
  (goto (reg continue))
after-if200209021928122
after-lambda2002090219281110
  (save continue)
  (save proc)
  (assign proc (op lookup-variable-value) (const proc) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021928140))
compiled-branch200209021928141
  (assign continue (label after-call200209021928142))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021928140
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209021928142
  (assign argl (op list) (reg val))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021928160))
compiled-branch200209021928161
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021928160
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021928162
after-if200209021928118
after-lambda200209021928115
after-lambda200209021928113
  (assign val (op lookup-variable-value) (const false) (reg env))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const false) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209021928210))
compiled-branch200209021928211
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209021928210
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209021928212
after-lambda200209021928111
  (perform (op define-variable!) (const make-promise) (reg val) (reg env))
  (assign val  (const ok))
))
