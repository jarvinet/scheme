
; This file is generated by the pretty printer
; The needs- and modifies-registers are discarded
(()()
(
  (assign val (op make-compiled-procedure) (label entry200209302108510) (reg env))
  (goto (label after-lambda200209302108511))
entry200209302108510
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const (n)) (reg argl) (reg env))
  (save continue)
  (save env)
  (assign proc (op lookup-variable-value) (const <) (reg env))
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209302108520))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200209302108521))
compound-branch200209302108522
  (save continue)
  (assign continue (label after-call200209302108523))
  (goto (label compound-apply))
compiled-branch200209302108521
  (assign continue (label after-call200209302108523))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209302108520
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209302108523
  (restore env)
  (restore continue)
  (test (op false?) (reg val))
  (branch (label false-branch200209302108513))
true-branch200209302108512
  (assign val (op lookup-variable-value) (const n) (reg env))
  (goto (reg continue))
false-branch200209302108513
  (assign proc (op lookup-variable-value) (const +) (reg env))
  (save continue)
  (save proc)
  (save env)
  (assign proc (op lookup-variable-value) (const fib) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const -) (reg env))
  (assign val  (const 1))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209302108580))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200209302108581))
compound-branch200209302108582
  (save continue)
  (assign continue (label after-call200209302108583))
  (goto (label compound-apply))
compiled-branch200209302108581
  (assign continue (label after-call200209302108583))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209302108580
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209302108583
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209302109000))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200209302109001))
compound-branch200209302109002
  (save continue)
  (assign continue (label after-call200209302109003))
  (goto (label compound-apply))
compiled-branch200209302109001
  (assign continue (label after-call200209302109003))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209302109000
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209302109003
  (assign argl (op list) (reg val))
  (restore env)
  (save argl)
  (assign proc (op lookup-variable-value) (const fib) (reg env))
  (save proc)
  (assign proc (op lookup-variable-value) (const -) (reg env))
  (assign val  (const 2))
  (assign argl (op list) (reg val))
  (assign val (op lookup-variable-value) (const n) (reg env))
  (assign argl (op cons) (reg val) (reg argl))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209302108540))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200209302108541))
compound-branch200209302108542
  (save continue)
  (assign continue (label after-call200209302108543))
  (goto (label compound-apply))
compiled-branch200209302108541
  (assign continue (label after-call200209302108543))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209302108540
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209302108543
  (assign argl (op list) (reg val))
  (restore proc)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209302108560))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200209302108561))
compound-branch200209302108562
  (save continue)
  (assign continue (label after-call200209302108563))
  (goto (label compound-apply))
compiled-branch200209302108561
  (assign continue (label after-call200209302108563))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209302108560
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200209302108563
  (restore argl)
  (assign argl (op cons) (reg val) (reg argl))
  (restore proc)
  (restore continue)
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200209302109020))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200209302109021))
compound-branch200209302109022
  (save continue)
  (goto (label compound-apply))
compiled-branch200209302109021
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
primitive-branch200209302109020
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
  (goto (reg continue))
after-call200209302109023
after-if200209302108514
after-lambda200209302108511
  (perform (op define-variable!) (const fib) (reg val) (reg env))
  (assign val  (const ok))
))
