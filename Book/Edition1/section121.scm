; Structure and Interpretation of Computer Programs, 1st edition

;-------------------------------------------------------------

; Section 1.2.1

;-------------------------------------------------------------

; exercise 1.7

(define (+ a b)
  (if (= a 0)
      b
      (1+ (+ (-1+ a) b))))

; (+ 4 5)
; (1+ (+ (-1+ 4) 5))))
; (1+ (+ 3 5))
; (1+ (1+ (+ (-1+ 3) 5)))
; (1+ (1+ (+ 2 5)))
; (1+ (1+ (1+ (+ (-1+ 2) 5))))
; (1+ (1+ (1+ (+ 1 5))))
; (1+ (1+ (1+ (1+ (+ (-1+ 1) 5)))))
; (1+ (1+ (1+ (1+ (+ 0 5)))))
; (1+ (1+ (1+ (1+ 5))))
; (1+ (1+ (1+ 6)))
; (1+ (1+ 7))
; (1+ 8)
; 9
; Recursive process


(define (+ a b)
  (if (= a 0)
      b
      (+ (-1+ a) (1+ b))))

; (+ 4 5)
; (+ (-1+ a) (1+ b))
; (+ (-1+ 4) (1+ 5))
; (+ 3 6)
; (+ (-1+ 3) (1+ 6))
; (+ 2 7)
; (+ (-1+ 2) (1+ 7))
; (+ 1 8)
; (+ (-1+ 1) (1+ 8))
; (+ 0 9)
; 9
; Iterative process



;-------------------------------------------------------------

; exercise 1.8

(define (A x y)
  (cond ((= y 0) 0)
	((= x 0) (* 2 y))
	((= y 1) 2)
	(else (A (- x 1)
		 (A x (- y 1))))))


;(A 1 10)
;(A (- 1 1) (A 1 (- 10 1)))
;(A 0 (A 1 9))
;(* 2 (A 1 9))
;(* 2 (A (- 1 1) (A 1 (- 9 1))))
;(* 2 (A 0 (A 1 (- 9 1))))
;(* 2 (* 2 (A 1 8)))
;...
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 1))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 2)))))))))
;2^10
;1024

(A 2 2)
(A (- 2 1) (A 2 (- 2 1)))
(A 1 (A 2 1))
(A 1 2)
(A (- 1 1) (A 1 (- 2 1)))
(A 0 (A 1 1))
(A 0 2)
4


(A 3 3)

; 2n
(define (f n)
  (A 0 n))

;(A 0 n)
;(* 2 y)
;(* 2 n)

; 2^n
(define (g n)
  (A 1 n))

;(A 1 n)
;(A (- 1 1) (A 1 (- n 1)))
;(A 0 (A 1 (- n 1)))
;(A 0 (A (- 1 1) (A 1 (- (- n 1) 1))))
;(A 0 (A 0 (A 1 (- (- n 1) 1))))


;
(define (h n)
  (A 2 n))
