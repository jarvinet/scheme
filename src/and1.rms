
; This file is generated by the pretty printer
; The needs- and modifies-registers are discarded
(()()
(
  (comment (lambda () (and (compiled) (compound) (true? true))))
  (assign val (op make-compiled-procedure) (label entry200308172123440) (reg env))
  (goto (label after-lambda200308172123441))
  (comment (lambda () (and (compiled) (compound) (true? true))))
entry200308172123440
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const ()) (reg argl) (reg env))
  (save continue)
  (save env)
  (comment compiled)
  (assign proc (op lookup-variable-value) (const compiled) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172123443))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172123444))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172123446))
compound-branch200308172123445
  (assign continue (label after-call200308172123447))
  (goto (label compound-apply-compiled))
compiled-branch200308172123444
  (assign continue (label after-call200308172123447))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172123446
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172123443
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172123447
  (restore env)
  (comment ((compiled) (compound) (true? true)))
  (test (op false?) (reg val))
  (branch (label and-false-found200308172123442))
  (save env)
  (comment compound)
  (assign proc (op lookup-variable-value) (const compound) (reg env))
  (assign argl  (const ()))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172123450))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172123451))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172123453))
compound-branch200308172123452
  (assign continue (label after-call200308172123454))
  (goto (label compound-apply-compiled))
compiled-branch200308172123451
  (assign continue (label after-call200308172123454))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172123453
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172123450
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172123454
  (restore env)
  (comment ((compound) (true? true)))
  (test (op false?) (reg val))
  (branch (label and-false-found200308172123442))
  (comment true?)
  (assign proc (op lookup-variable-value) (const true?) (reg env))
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (assign argl (op list) (reg val))
  (test (op primitive-procedure?) (reg proc))
  (branch (label primitive-branch200308172123460))
  (test (op compiled-procedure?) (reg proc))
  (branch (label compiled-branch200308172123461))
  (test (op continuation?) (reg proc))
  (branch (label continuation-branch200308172123463))
compound-branch200308172123462
  (assign continue (label after-call200308172123464))
  (goto (label compound-apply-compiled))
compiled-branch200308172123461
  (assign continue (label after-call200308172123464))
  (assign val (op compiled-procedure-entry) (reg proc))
  (goto (reg val))
continuation-branch200308172123463
  (assign val (op apply-continuation) (reg proc) (reg argl))
primitive-branch200308172123460
  (assign val (op apply-primitive-procedure) (reg proc) (reg argl))
after-call200308172123464
and-false-found200308172123442
  (restore continue)
  (goto (reg continue))
after-lambda200308172123441
  (comment (define (a) (and (compiled) (compound) (true? true))))
  (perform (op define-variable!) (const a) (reg val) (reg env))
  (assign val  (const ok))
  (comment (lambda () true))
  (assign val (op make-compiled-procedure) (label entry200308172123490) (reg env))
  (goto (label after-lambda200308172123491))
  (comment (lambda () true))
entry200308172123490
  (assign env (op compiled-procedure-env) (reg proc))
  (assign env (op extend-environment) (const ()) (reg argl) (reg env))
  (comment true)
  (assign val (op lookup-variable-value) (const true) (reg env))
  (goto (reg continue))
after-lambda200308172123491
  (comment (define (compiled) true))
  (perform (op define-variable!) (const compiled) (reg val) (reg env))
  (assign val  (const ok))
))
